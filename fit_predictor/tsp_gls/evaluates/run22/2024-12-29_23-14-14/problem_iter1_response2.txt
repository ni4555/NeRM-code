```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # It's bad to include edges that are significantly longer than their neighboring edges
    # Calculate the mean distance for each edge's neighbors
    neighbors_mean = (distance_matrix[:, :-1].mean(axis=1) +
                      distance_matrix[:, 1:].mean(axis=1)) / 2
    
    # Calculate the deviation from the mean for each edge
    deviations = distance_matrix - neighbors_mean
    
    # It's more bad if the edge is significantly longer than its neighbors
    # Normalize the deviations to ensure they are within the range of [0, 1]
    deviations = (deviations - deviations.min()) / (deviations.max() - deviations.min())
    
    # Return a matrix where the value indicates how bad it is to include each edge
    return deviations
```
