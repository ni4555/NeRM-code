```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Normalize the distance matrix
    max_distance = np.max(distance_matrix)
    min_distance = np.min(distance_matrix)
    normalized_distances = (distance_matrix - min_distance) / (max_distance - min_distance)
    
    # Calculate the degree of each node
    degrees = np.sum(distance_matrix, axis=1)
    
    # Normalize the degrees to avoid global over-penalization
    max_degree = np.max(degrees)
    normalized_degrees = degrees / max_degree
    
    # Use the product of normalized distances and normalized degrees as the heuristic
    heuristics = normalized_distances * normalized_degrees
    return heuristics
```
