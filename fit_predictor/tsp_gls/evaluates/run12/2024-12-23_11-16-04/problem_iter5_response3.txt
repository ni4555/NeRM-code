```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the minimum distance from each node to any other node
    min_distances = np.min(distance_matrix, axis=1)
    # Calculate the average distance from each node to all other nodes
    avg_distances = np.mean(distance_matrix, axis=1)
    # Combine the metrics with a balance factor
    balance_factor = 0.5
    # Add a penalty for high average distances to encourage diversity
    diversity_penalty = 0.1 * (avg_distances - min_distances)
    # Combine the minimum and average distance metrics with the diversity penalty
    return distance_matrix - (min_distances + balance_factor * avg_distances + diversity_penalty) + 1e-6
```
