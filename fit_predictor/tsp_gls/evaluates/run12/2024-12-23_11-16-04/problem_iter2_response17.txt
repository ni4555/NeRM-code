```python
def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate penalties for long and short edges, while balancing them
    max_distance = np.max(distance_matrix)
    min_distance = np.min(distance_matrix)
    long_edge_penalty = max_distance - distance_matrix
    short_edge_penalty = distance_matrix - min_distance
    balanced_penalty = 0.5 * (long_edge_penalty + short_edge_penalty)
    return balanced_penalty
```
