```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the number of nodes
    num_nodes = distance_matrix.shape[0]
    
    # Initialize the heuristic matrix with zeros
    heuristics = np.zeros_like(distance_matrix)
    
    # Calculate the center of mass as a reference point
    center_of_mass = np.mean(distance_matrix, axis=0)
    
    # Calculate the distance of each edge to the center of mass
    for i in range(num_nodes):
        for j in range(num_nodes):
            # Avoid considering the same node twice or the edge that leads back to the same node
            if i != j:
                # Compute the Euclidean distance to the center of mass
                heuristics[i, j] = 2 * np.linalg.norm(distance_matrix[i] - center_of_mass) + np.linalg.norm(distance_matrix[j] - center_of_mass)
                
    return heuristics
```
