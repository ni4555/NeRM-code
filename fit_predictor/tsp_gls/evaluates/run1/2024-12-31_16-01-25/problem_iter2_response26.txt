```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    num_nodes = distance_matrix.shape[0]
    heuristics = np.zeros_like(distance_matrix)
    
    # Calculate the heuristic by considering the direct distance and the minimum indirect distance
    for i in range(num_nodes):
        for j in range(num_nodes):
            if i != j:
                direct_distance = distance_matrix[i, j]
                indirect_distance = np.min(distance_matrix[i] + distance_matrix[:, j])
                heuristics[i, j] = np.min([direct_distance, indirect_distance])
                
    return heuristics
```
