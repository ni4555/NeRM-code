```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    num_nodes = distance_matrix.shape[0]
    heuristics = np.zeros_like(distance_matrix)
    
    # Calculate the longest distance between any two nodes to use as a baseline
    max_distance = np.max(distance_matrix)
    
    for i in range(num_nodes):
        for j in range(num_nodes):
            if i != j:
                # Calculate the cost of including the edge from i to j
                heuristics[i, j] = distance_matrix[i, j]
                # If not the direct distance, add the penalty
                if i > j:
                    heuristics[i, j] += max_distance
    
    return heuristics
```
