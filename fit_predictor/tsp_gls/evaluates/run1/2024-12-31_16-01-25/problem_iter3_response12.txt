```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the number of nodes
    num_nodes = distance_matrix.shape[0]
    
    # Initialize the heuristic matrix with zeros
    heuristics = np.zeros_like(distance_matrix)
    
    # Calculate the median distance from each node to all other nodes
    for i in range(num_nodes):
        median_distances = np.median(distance_matrix[i], axis=1)
        heuristics[i] = median_distances
    
    # Incorporate the center of mass by considering the average distance
    center_of_mass = np.mean(distance_matrix, axis=0)
    heuristics += np.mean(distance_matrix, axis=1)
    
    # Avoid redundancy by subtracting the diagonal elements
    np.fill_diagonal(heuristics, 0)
    
    return heuristics
```
