```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    num_nodes = distance_matrix.shape[0]
    heuristics = np.zeros_like(distance_matrix)
    
    # Compute the Chebyshev distance from each node to the center of mass
    center_of_mass = np.mean(distance_matrix, axis=0)
    for i in range(num_nodes):
        for j in range(num_nodes):
            if i != j:
                heuristics[i, j] = np.maximum(distance_matrix[i] - center_of_mass, distance_matrix[j] - center_of_mass).sum()
                heuristics[j, i] = heuristics[i, j]  # Reflect the value considering symmetry
    
    return heuristics
```
