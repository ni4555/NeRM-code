```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    num_nodes = distance_matrix.shape[0]
    heuristics = np.zeros_like(distance_matrix)
    for i in range(num_nodes):
        # Compute Chebyshev distance to the nearest vertex for each node
        for j in range(num_nodes):
            if i != j:
                # Direct distance
                direct_distance = distance_matrix[i, j]
                # Minimum Chebyshev distance to any other node
                min_chebyshev = np.min(np.maximum(direct_distance - distance_matrix[i], direct_distance - distance_matrix[j]))
                heuristics[i, j] = min_chebyshev
    return heuristics
```
