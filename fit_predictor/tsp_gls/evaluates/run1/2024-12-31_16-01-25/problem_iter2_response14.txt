```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the number of nodes
    num_nodes = distance_matrix.shape[0]
    
    # Initialize the heuristic matrix with zeros
    heuristics = np.zeros_like(distance_matrix)
    
    # Compute the heuristic as the maximum distance to a central node, which penalizes long edges
    central_node = num_nodes // 2
    for i in range(num_nodes):
        for j in range(num_nodes):
            if i != j:
                heuristics[i, j] = np.max(distance_matrix[i] - distance_matrix[j])
                
    return heuristics
```
