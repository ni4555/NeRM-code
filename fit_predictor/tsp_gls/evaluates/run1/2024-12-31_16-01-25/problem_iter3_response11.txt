```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the number of nodes
    num_nodes = distance_matrix.shape[0]
    
    # Initialize the heuristic matrix with zeros
    heuristics = np.zeros_like(distance_matrix)
    
    # Calculate the median of distances for each edge to the nearest vertex
    median_distances = np.median(distance_matrix, axis=0)
    median_distances = np.median(median_distances, axis=0)
    
    # Calculate the center of mass for each edge
    center_of_mass = np.sum(distance_matrix, axis=0) / num_nodes
    
    # Combine the median and center of mass to form the heuristic
    for i in range(num_nodes):
        for j in range(num_nodes):
            if i != j:
                heuristics[i, j] = np.abs(median_distances[i] + median_distances[j] - center_of_mass)
                
    return heuristics
```
