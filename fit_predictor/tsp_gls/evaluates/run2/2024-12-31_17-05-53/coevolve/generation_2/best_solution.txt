Fitness: 10.62820081300522

Description:
Utilize a hybrid evolutionary algorithm to solve the Traveling Salesman Problem, incorporating adaptive neighborhood exploration, fitness landscape analysis, and a guided local search strategy. This approach combines the exploitation of global optimization opportunities with a focus on effective local search techniques, aiming to surpass a fitness threshold of 10.617516362484723 by leveraging both a heuristic matrix for edge prioritization and a dynamic strategy for neighborhood exploration.

Code:
import numpy as np
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the diagonal of the distance matrix
    np.fill_diagonal(distance_matrix, np.inf)
    
    # Compute the minimum distances between each pair of nodes
    min_distances = np.min(distance_matrix, axis=1)
    
    # Calculate the heuristics for each edge
    heuristics = distance_matrix - min_distances[:, np.newaxis]
    
    return heuristics