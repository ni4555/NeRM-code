```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Use a simple heuristic that assumes that the shortest edges should be considered first
    # by penalizing the longer edges more. The penalty is inversely proportional to the edge length.
    penalty_factor = 1 / (distance_matrix + 1e-5)  # Adding a small constant to avoid division by zero
    return penalty_factor
```
