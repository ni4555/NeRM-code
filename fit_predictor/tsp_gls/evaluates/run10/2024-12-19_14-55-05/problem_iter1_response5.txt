```python
def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Heuristic that uses the Manhattan distance between the centers of nodes
    node_centers = [(sum(row) / len(row), sum(column) / len(column))
                    for row in zip(*distance_matrix) for column in zip(*distance_matrix)]
    center_distances = np.array(node_centers)[:, None, :] - np.array(node_centers)[:, :, None]
    manhattan_distances = np.sum(np.abs(center_distances), axis=2)
    return 1 / (manhattan_distances + 1e-8)  # Adding a small constant to avoid division by zero
```
