```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Use a Manhattan distance heuristic based on the indices of the nodes
    indices = np.arange(distance_matrix.shape[0])
    indices_squared = indices ** 2
    Manhattan_dist = np.sum(indices_squared[:, np.newaxis] + indices_squared, axis=0)
    Manhattan_dist = Manhattan_dist - distance_matrix
    # Ensure we are not suggesting including self-loops
    Manhattan_dist[range(distance_matrix.shape[0]), range(distance_matrix.shape[0])] = np.inf
    return Manhattan_dist
```
