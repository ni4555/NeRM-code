```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Initialize the heuristics matrix with zeros
    heuristics = np.zeros_like(distance_matrix, dtype=np.float64)
    
    # Find the node that minimizes the distance to all other nodes
    min_distances = np.min(distance_matrix, axis=1)
    k = np.argmin(min_distances)
    
    # Calculate the heuristic as the weighted average of the distances to k
    heuristics = (distance_matrix.sum(axis=1) - distance_matrix[:, k]) / (distance_matrix.shape[0] - 1)
    
    return heuristics
```
