```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the minimum distance to each node for all nodes
    min_distances = np.min(distance_matrix, axis=1)
    
    # Calculate the heuristics matrix by taking the average of the minimum distances
    heuristics = np.mean(np.stack((min_distances, min_distances), axis=1), axis=1)
    
    # Create a diagonal matrix to avoid self-loops
    identity_matrix = np.eye(distance_matrix.shape[0])
    
    # Subtract the diagonal from the heuristics matrix to exclude self-loops
    heuristics -= identity_matrix
    
    return heuristics
```
