```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Initialize the heuristics matrix with zeros
    heuristics = np.zeros_like(distance_matrix, dtype=np.float64)
    
    # Precompute the minimum distances from each node to its two nearest neighbors
    min_two_neighbors = np.partition(distance_matrix, 2, axis=1)[:, :2]
    min_two_neighbors = np.sort(min_two_neighbors, axis=1)[:, 1]
    
    # Calculate the heuristic values using the precomputed minimum distances
    for i in range(distance_matrix.shape[0]):
        for j in range(distance_matrix.shape[0]):
            if i != j:
                heuristics[i, j] = min_two_neighbors[i] + min_two_neighbors[j] - distance_matrix[i, j]
    
    return heuristics
```
