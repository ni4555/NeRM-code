```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the minimum distance from each node to any other node
    min_distances = np.min(distance_matrix, axis=1)
    # Calculate the average minimum distance
    avg_min_distance = np.mean(min_distances)
    # Calculate the standard deviation of the minimum distances
    std_min_distance = np.std(min_distances)
    # It's bad to include edges that are significantly longer than the average minimum distance
    # and are outliers based on the standard deviation
    return np.where(distance_matrix > avg_min_distance + std_min_distance, -np.inf, distance_matrix)
```
