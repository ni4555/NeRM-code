```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the minimum distance from each node to any other node
    min_distances = np.min(distance_matrix, axis=1)
    # Calculate the average distance from each node to all others
    avg_distances = np.mean(distance_matrix, axis=1)
    # Use both minimum and average distances to weight the penalty
    # Add a domain-specific constant that might represent some additional knowledge
    domain_constant = 2.0
    # Balance between the influence of minimum and average distances
    balance_factor = 0.5
    # Avoid division by zero
    return distance_matrix - (min_distances + avg_distances * balance_factor) + domain_constant * 1e-6
```
