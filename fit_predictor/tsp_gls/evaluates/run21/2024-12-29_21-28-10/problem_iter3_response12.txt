```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    num_nodes = distance_matrix.shape[0]
    heuristics = np.zeros_like(distance_matrix)

    for i in range(num_nodes):
        for j in range(num_nodes):
            if i != j:
                # Calculate the distance to the nearest neighbor for both nodes
                min_dist_i = np.min(distance_matrix[i, :])
                min_dist_j = np.min(distance_matrix[j, :])

                # Use a weighted average of the minimum distances to avoid rigid thresholds
                # and adapt to the problem structure
                combined_min_dist = (min_dist_i + min_dist_j) / 2
                heuristics[i, j] = distance_matrix[i, j] - combined_min_dist

    return heuristics
```
