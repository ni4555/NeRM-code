```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    num_nodes = distance_matrix.shape[0]
    # Normalize the distance matrix
    normalized_distances = distance_matrix / np.max(distance_matrix, axis=0)
    # Emphasize relative distances
    relative_distance_penalty = np.abs(normalized_distances - 1)
    # Avoid unnecessary penalties by not including the diagonal
    penalty_matrix = relative_distance_penalty
    # Use symmetry to avoid double penalties
    return penalty_matrix + penalty_matrix.T - np.diag(penalty_matrix)
```
