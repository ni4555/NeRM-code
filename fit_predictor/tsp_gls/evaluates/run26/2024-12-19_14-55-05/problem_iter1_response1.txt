```python
def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Using a variant of the Chebyshev distance to measure the "badness" of an edge
    # In Chebyshev distance, an edge is bad if its distance is greater than the average of the max and min distances
    average_distance = (np.max(distance_matrix) + np.min(distance_matrix)) / 2
    chebyshev_matrix = np.where(distance_matrix > average_distance, 1, 0)
    
    # Adding a penalty for edges that cross a certain threshold of badness
    threshold = 0.5
    penalty_matrix = np.where(chebyshev_matrix == 1, 1 / (1 - threshold), 1)
    
    return penalty_matrix
```
