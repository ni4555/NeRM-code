```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Initialize a matrix to hold the heuristic values
    heuristic_matrix = np.zeros_like(distance_matrix)
    
    # Iterate over the distance matrix to calculate the heuristic values
    for i in range(distance_matrix.shape[0]):
        for j in range(distance_matrix.shape[1]):
            # Calculate the heuristic based on the average distance to all other vertices
            if i != j:
                avg_distance = np.mean(distance_matrix[i])
                heuristic_matrix[i, j] = avg_distance - distance_matrix[i, j]
            else:
                # No self-loop
                heuristic_matrix[i, j] = np.inf
    
    return heuristic_matrix
```
