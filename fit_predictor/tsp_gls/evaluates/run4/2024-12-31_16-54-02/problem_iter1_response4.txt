```python
def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = len(distance_matrix)
    heuristics = np.zeros_like(distance_matrix)
    
    # Calculate the center of gravity for each cluster
    centers = np.argmin(distance_matrix, axis=1)
    
    # For each node, find the nearest center
    for i in range(n):
        min_distance = np.inf
        for center in centers:
            distance = distance_matrix[i, center]
            if distance < min_distance:
                min_distance = distance
                heuristics[i, center] = distance
                heuristics[center, i] = distance

    # Add the distance from the center to all other nodes
    for i in range(n):
        for j in range(n):
            if heuristics[i, j] == 0:
                heuristics[i, j] = distance_matrix[i, centers[j]]
                heuristics[j, i] = distance_matrix[j, centers[i]]

    return heuristics
```
