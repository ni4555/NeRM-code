```python
def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = distance_matrix.shape[0]
    heuristics = np.zeros_like(distance_matrix)
    
    # Calculate the total distance of the longest path from the center of the matrix
    longest_path = 0
    for i in range(n):
        for j in range(i + 1, n):
            if i != j:
                longest_path = max(longest_path, distance_matrix[i, j])
    
    # Loop through each pair of nodes
    for i in range(n):
        for j in range(i + 1, n):
            # Calculate the heuristic value based on the longest path and the distance between nodes
            heuristics[i, j] = longest_path - distance_matrix[i, j]
            heuristics[j, i] = heuristics[i, j]
    
    return heuristics
```
