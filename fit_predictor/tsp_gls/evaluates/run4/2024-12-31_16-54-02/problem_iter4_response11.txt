```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = len(distance_matrix)
    heuristics = np.zeros_like(distance_matrix)
    
    # Use the nearest neighbor heuristic to identify initial centers
    centers = np.argsort(distance_matrix, axis=1)[:, 1]
    
    # Initialize the heuristics matrix with zeros on the diagonal and the nearest neighbor distance
    for i in range(n):
        heuristics[i, centers[i]] = 0
        heuristics[centers[i], i] = 0
    
    # For each node, calculate the distance to all other nodes and update the heuristics
    for i in range(n):
        for j in range(n):
            if i != j:
                heuristics[i, j] = distance_matrix[i, centers[j]]
                heuristics[j, i] = distance_matrix[j, centers[i]]
    
    return heuristics
```
