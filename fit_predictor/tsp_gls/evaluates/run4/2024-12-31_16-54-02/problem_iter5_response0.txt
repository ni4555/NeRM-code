```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Initialize a matrix with the same shape as the distance matrix to store heuristics
    heuristics = np.zeros_like(distance_matrix)
    
    # Calculate heuristics using the maximum of the minimum distances from node i to any other node
    for i in range(len(distance_matrix)):
        # Find the minimum distances from node i to all other nodes
        min_distances = np.min(distance_matrix[i, :], axis=1)
        # The heuristic value for node i to node j is the minimum distance from i to any node plus the distance from j to any node
        heuristics[i, :] = np.maximum(min_distances, np.min(distance_matrix[:, i], axis=0))
    
    return heuristics
```
