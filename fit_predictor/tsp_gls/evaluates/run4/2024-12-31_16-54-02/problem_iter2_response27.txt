```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = len(distance_matrix)
    heuristics = np.zeros_like(distance_matrix)
    
    # Precompute the minimum distance from each node to any other node
    min_distances = np.min(distance_matrix, axis=1)
    
    # Loop through each pair of nodes
    for i in range(n):
        for j in range(n):
            if i != j:
                # Calculate the heuristic as the sum of the minimum distances from i to j and from j to i
                heuristics[i, j] = min_distances[i] + min_distances[j]
    
    # Symmetry of the matrix
    heuristics = (heuristics + heuristics.T) / 2
    
    return heuristics
```
