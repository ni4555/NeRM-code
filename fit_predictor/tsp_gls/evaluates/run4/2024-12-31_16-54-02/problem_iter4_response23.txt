```python
def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = len(distance_matrix)
    heuristics = np.zeros_like(distance_matrix)
    
    for i in range(n):
        for j in range(n):
            if i != j:
                # Calculate the minimum distance to any other node via i, j, or both
                min_dist_via_i = np.min(distance_matrix[i]) + distance_matrix[i, j]
                min_dist_via_j = np.min(distance_matrix[j]) + distance_matrix[j, i]
                min_dist_via_both = distance_matrix[i][j] + np.min(distance_matrix[i][j:]) + np.min(distance_matrix[i][:-j])
                heuristics[i, j] = min(min_dist_via_i, min_dist_via_j, min_dist_via_both)
    
    return heuristics
```
