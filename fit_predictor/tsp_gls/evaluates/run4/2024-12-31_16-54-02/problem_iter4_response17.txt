```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = len(distance_matrix)
    heuristics = np.zeros_like(distance_matrix)
    
    for i in range(n):
        for j in range(i + 1, n):
            # Compute the shortest path from node i to any other node
            shortest_path = np.argmin(distance_matrix[i, :])
            # Compute the shortest path from node i to node j
            heuristics[i, j] = distance_matrix[i, shortest_path] + distance_matrix[shortest_path, j]
            # Due to symmetry, the shortest path from node j to node i is the same
            heuristics[j, i] = heuristics[i, j]

    return heuristics
```
