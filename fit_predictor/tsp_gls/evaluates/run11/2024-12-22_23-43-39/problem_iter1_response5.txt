```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # It's bad to include long edges in the solution
    # And we assume that a node that has already been visited is not a candidate for the next edge
    heuristics_matrix = np.copy(distance_matrix)
    for i in range(len(distance_matrix)):
        for j in range(len(distance_matrix)):
            if i != j:
                # Set the heuristic value to the actual distance if the edge has not been traversed
                heuristics_matrix[i, j] = 1 / (1 + distance_matrix[i, j])
            else:
                # Set the heuristic value to a high number if it's the same node (self-loop)
                heuristics_matrix[i, j] = float('inf')
    return heuristics_matrix
```
