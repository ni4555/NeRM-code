```python
def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = distance_matrix.shape[0]
    heuristics_matrix = np.zeros_like(distance_matrix)
    
    # For each node, calculate the distance to its nearest neighbor
    for i in range(n):
        # Find the index of the nearest neighbor
        nearest_neighbor_index = np.argmin(distance_matrix[i, :])
        # Calculate the heuristic value for the edge from i to nearest_neighbor_index
        heuristics_matrix[i, nearest_neighbor_index] = distance_matrix[i, nearest_neighbor_index]
    
    return heuristics_matrix
```
