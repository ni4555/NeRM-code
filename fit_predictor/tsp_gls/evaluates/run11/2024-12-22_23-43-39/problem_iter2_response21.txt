```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # This improved heuristic introduces a more sophisticated approach:
    # - It penalizes direct distances that are significantly shorter than the average distance.
    # - It introduces a small random perturbation to prevent premature convergence to local minima.
    
    penalty_factor = 1.5
    avg_distance = np.mean(distance_matrix)
    random_perturbation = np.random.rand(*distance_matrix.shape) * 0.01
    
    # Apply the heuristic with penalties
    return penalty_factor * (distance_matrix - avg_distance + random_perturbation)
```
