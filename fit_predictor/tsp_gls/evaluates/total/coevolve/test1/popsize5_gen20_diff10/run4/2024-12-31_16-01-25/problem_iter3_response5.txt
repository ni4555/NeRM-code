```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the number of nodes
    num_nodes = distance_matrix.shape[0]
    
    # Initialize the heuristic matrix with zeros
    heuristics = np.zeros_like(distance_matrix)
    
    # Calculate the median distance for each edge
    medians = np.median(distance_matrix, axis=0)
    medians = np.insert(medians, 0, medians[0])  # Add the first median as the last one to simulate the return to the start node
    
    # Assign the median distance to each edge's heuristic
    heuristics = medians[:, np.newaxis]
    
    # Adjust the heuristic for the return to the start node by adding the sum of all distances to the first node
    heuristics[-1, 0] += np.sum(distance_matrix[:, 0])
    
    return heuristics
```
