```python
def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    num_nodes = distance_matrix.shape[0]
    heuristics = np.zeros_like(distance_matrix)
    
    # Calculate the heuristic by considering the minimum distance from each node to its neighbors
    for i in range(num_nodes):
        for j in range(num_nodes):
            if i != j:
                # Consider the direct distance and the minimum distance via a third node
                heuristics[i, j] = np.min([distance_matrix[i, j], np.min(distance_matrix[i] + distance_matrix[j] + distance_matrix[j])])
                
    return heuristics
```
