```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    num_nodes = distance_matrix.shape[0]
    heuristics = np.zeros_like(distance_matrix)
    
    for i in range(num_nodes):
        for j in range(num_nodes):
            if i != j:
                # Use the nearest neighbor heuristic to calculate the heuristic value
                heuristics[i, j] = distance_matrix[i, np.argmin(distance_matrix[i, ~np.isclose(i, np.arange(num_nodes))])] + \
                                  distance_matrix[j, np.argmin(distance_matrix[j, ~np.isclose(j, np.arange(num_nodes))])]
                
    return heuristics
```
