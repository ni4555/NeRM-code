```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    num_nodes = distance_matrix.shape[0]
    heuristics = np.zeros_like(distance_matrix)
    
    for i in range(num_nodes):
        for j in range(num_nodes):
            if i != j:
                # Calculate the direct distance
                direct_distance = distance_matrix[i, j]
                
                # Calculate the minimum distance via any other node
                via_distance = np.min(np.sum(distance_matrix[:, j] + distance_matrix[j, i], axis=0))
                
                # Use the smaller of the two distances as the heuristic
                heuristics[i, j] = min(direct_distance, via_distance)
                
    return heuristics
```
