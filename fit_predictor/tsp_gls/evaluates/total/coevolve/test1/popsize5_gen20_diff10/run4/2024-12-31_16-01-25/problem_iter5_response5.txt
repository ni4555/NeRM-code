```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    num_nodes = distance_matrix.shape[0]
    heuristics = np.zeros_like(distance_matrix)
    
    for i in range(num_nodes):
        for j in range(num_nodes):
            if i != j:
                # Calculate the cost of not including this edge
                heuristics[i, j] = distance_matrix[i, j] - np.min(distance_matrix[i], axis=1) - np.min(distance_matrix[j], axis=1)
                
    return heuristics
```
