```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the distance from each node to the nearest node
    min_distances = np.min(distance_matrix, axis=1)
    
    # For each edge in the distance matrix, calculate the heuristic value
    heuristics_matrix = distance_matrix - (min_distances[:, None] + min_distances[None, :])
    
    # Mask out the diagonal (since we do not want to include the node to itself)
    heuristics_matrix[np.arange(distance_matrix.shape[0]), np.arange(distance_matrix.shape[0])] = -np.inf
    
    return heuristics_matrix
```
