```python
def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the diagonal of the distance matrix (distance from each node to itself)
    diagonal = np.diag(distance_matrix)
    
    # Subtract the diagonal from the entire distance matrix
    distance_matrix -= diagonal[:, np.newaxis]
    
    # Subtract the diagonal from the entire transpose of the distance matrix
    distance_matrix -= diagonal[np.newaxis, :]
    
    # Use element-wise maximum to ensure non-negativity
    heuristics_matrix = np.maximum(0, distance_matrix)
    
    return heuristics_matrix
```
