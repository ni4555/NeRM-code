```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the diagonal of the distance matrix (distance from each node to itself)
    diagonal = np.diag(distance_matrix)
    
    # Vectorized operation to subtract the diagonal from the full matrix
    adjusted_distance_matrix = distance_matrix - diagonal - diagonal[:, np.newaxis]
    
    # Vectorized operation to find the minimum distance for each edge
    min_distances = np.min(adjusted_distance_matrix, axis=0)
    
    # The heuristic value is the difference between the edge cost and the minimum distance
    heuristics_matrix = adjusted_distance_matrix - min_distances
    return heuristics_matrix
```
