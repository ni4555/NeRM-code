```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the diagonal of the distance matrix (distance from each node to itself)
    diagonal = np.diag(distance_matrix)
    
    # Calculate the sum of distances for each row and each column
    row_sums = np.sum(distance_matrix, axis=1)
    col_sums = np.sum(distance_matrix, axis=0)
    
    # Calculate the heuristic value for each edge
    heuristics_matrix = distance_matrix - (diagonal + diagonal[:, np.newaxis])
    heuristics_matrix -= (row_sums[:, np.newaxis] + col_sums)
    
    # Clip the values to ensure they are non-negative
    heuristics_matrix = np.clip(heuristics_matrix, 0, None)
    
    return heuristics_matrix
```
