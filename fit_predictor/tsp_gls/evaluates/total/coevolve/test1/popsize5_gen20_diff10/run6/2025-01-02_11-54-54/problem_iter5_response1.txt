```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Initialize a matrix of the same shape as the input distance matrix
    heuristics_matrix = np.zeros_like(distance_matrix)
    
    # Calculate the diagonal of the distance matrix (distance from each node to itself)
    diagonal = np.diag(distance_matrix)
    
    # For each edge in the distance matrix, calculate the heuristic value
    # Vectorized operation for performance
    edge_cost = distance_matrix
    min_distance = diagonal[:, None] + diagonal[None, :] + 2 * diagonal
    heuristics_matrix = edge_cost - min_distance
    
    # Mask the diagonal values
    np.fill_diagonal(heuristics_matrix, 0)
    
    return heuristics_matrix
```
