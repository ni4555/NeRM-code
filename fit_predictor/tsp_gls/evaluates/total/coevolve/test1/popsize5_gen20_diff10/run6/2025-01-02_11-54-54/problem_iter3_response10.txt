```python
def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Initialize a matrix of the same shape as the input distance matrix
    heuristics_matrix = np.zeros_like(distance_matrix)
    
    # Calculate the diagonal of the distance matrix (distance from each node to itself)
    diagonal = np.diag(distance_matrix)
    
    # Subtract the diagonal from the entire matrix
    distance_matrix -= diagonal
    
    # For each row, calculate the minimum distance to any column that is not itself
    min_distances = np.min(distance_matrix, axis=1)
    
    # Calculate the heuristic value by adding the row's minimum distance and its own diagonal value
    heuristics_matrix += min_distances[:, None]
    
    return heuristics_matrix
```
