```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = len(distance_matrix)
    heuristics = np.zeros_like(distance_matrix)
    
    # Use the center of gravity for each node as a heuristic value
    for i in range(n):
        center_of_gravity = np.mean(distance_matrix[i], axis=0)
        heuristics[i, np.argmin(distance_matrix[i])] = np.min(distance_matrix[i])
        heuristics[np.argmin(distance_matrix[i]), i] = np.min(distance_matrix[i])
    
    # Fill in the remaining distances
    for i in range(n):
        for j in range(i+1, n):
            heuristics[i, j] = np.min(distance_matrix[i, j] + heuristics[i, :])
            heuristics[j, i] = heuristics[i, j]

    return heuristics
```
