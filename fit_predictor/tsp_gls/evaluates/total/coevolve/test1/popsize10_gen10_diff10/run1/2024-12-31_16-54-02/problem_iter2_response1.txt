```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = len(distance_matrix)
    heuristics = np.zeros_like(distance_matrix)
    for i in range(n):
        for j in range(i + 1, n):
            # Calculate the minimum distance from node i to any node via a third node
            heuristics[i, j] = np.min(distance_matrix[i, :][:, np.newaxis] + distance_matrix[:, j].T)
            # Since the matrix is symmetric, we don't need to calculate heuristics[j, i] separately
    return heuristics
```
