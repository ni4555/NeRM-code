```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = len(distance_matrix)
    heuristics = np.zeros_like(distance_matrix)
    for i in range(n):
        for j in range(i + 1, n):
            # Calculate the heuristic value as the minimum distance from node i to node j
            # considering the shortest path that passes through at least one other node
            heuristics[i, j] = np.min(distance_matrix[i, :][:, np.newaxis] + distance_matrix[:, j].T)
            heuristics[j, i] = heuristics[i, j]  # Since the matrix is symmetric
    return heuristics
```
