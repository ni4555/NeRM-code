```python
def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Initialize the heuristic matrix with zeros
    heuristic_matrix = np.zeros_like(distance_matrix)
    
    # Apply a modified version of the nearest neighbor heuristic
    for i in range(len(distance_matrix)):
        # Find the nearest neighbor node to node i
        nearest_neighbor_index = np.argmin(distance_matrix[i])
        # Calculate the heuristic as the difference in distances
        heuristic_value = distance_matrix[i, nearest_neighbor_index] - distance_matrix[i].mean()
        # Assign the heuristic value to the matrix
        heuristic_matrix[i, nearest_neighbor_index] = heuristic_value
        heuristic_matrix[nearest_neighbor_index, i] = heuristic_value
    
    return heuristic_matrix
```
