```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Compute pairwise distances using a more sophisticated method
    pairwise_distances = cdist(distance_matrix, distance_matrix, 'cosine')
    
    # Initialize the heuristics matrix with zeros
    heuristics = np.zeros_like(pairwise_distances, dtype=np.float64)
    
    # Compute the heuristic values based on the cosine similarity distance
    # Invert the preference for better outcomes
    heuristics = 1 / (1 + pairwise_distances) ** 2
    
    # Normalize the heuristics matrix to ensure values are between 0 and 1
    heuristics /= np.max(heuristics)
    
    return heuristics
```
