```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Normalize the distance matrix by the maximum distance in the matrix
    max_distance = np.max(distance_matrix)
    normalized_distance_matrix = distance_matrix / max_distance
    
    # Use a weighted sum of the normalized distances and a logarithmic term
    # to enhance the "badness" of longer distances
    # This heuristic assumes that shorter distances are better, but it also
    # penalizes very short distances to avoid suboptimal tours that are too compact
    return (normalized_distance_matrix + np.log1p(normalized_distance_matrix)) * 100
```
