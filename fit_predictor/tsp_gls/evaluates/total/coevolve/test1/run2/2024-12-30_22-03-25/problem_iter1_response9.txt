```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Use the Manhattan distance as a heuristic, which is particularly effective for grid-like problems
    # Here, we assume the distance_matrix is a 2D array where the Manhattan distance is the sum of the absolute differences
    # between the coordinates of any two points
    max_value = np.max(distance_matrix)
    return np.where(distance_matrix == max_value, 0, 1)
```
