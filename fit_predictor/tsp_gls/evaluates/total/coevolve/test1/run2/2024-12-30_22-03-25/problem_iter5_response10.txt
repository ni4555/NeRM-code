```python
def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = distance_matrix.shape[0]
    min_distances = np.zeros((n, n))
    for i in range(n):
        min_distances[i, i] = 0  # No distance to itself
        for j in range(n):
            if j != i:
                min_distances[i, j] = np.min(distance_matrix[i, :j] + distance_matrix[i, j + 1:])
    
    # Adjust heuristics based on domain knowledge and balance complexity
    return distance_matrix - min_distances - np.random.uniform(0, 1, (n, n))
```
