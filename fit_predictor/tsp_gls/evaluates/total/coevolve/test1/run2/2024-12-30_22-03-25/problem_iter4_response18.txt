```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = distance_matrix.shape[0]
    heuristics = np.zeros_like(distance_matrix)
    
    for i in range(n):
        for j in range(n):
            if i != j:
                # Calculate the heuristic as the sum of distances to the nearest neighbor
                # and the farthest node (to account for the TSP nature of visiting all nodes)
                nearest_neighbors = np.argsort(distance_matrix[i])
                farthest_node = nearest_neighbors[-1]  # Exclude the node itself
                nearest = nearest_neighbors[1]
                heuristics[i, j] = distance_matrix[i, nearest] + distance_matrix[nearest, farthest_node]
                
    return heuristics
```
