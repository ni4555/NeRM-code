```python
def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = distance_matrix.shape[0]
    min_distances = np.zeros((n, n))
    
    # Calculate the shortest distance to any node from each node using the first row as a heuristic
    for i in range(n):
        min_distances[i, :] = distance_matrix[i, 0] + np.min(distance_matrix[1:, :], axis=0)
    
    # It's bad to include long edges that are not the shortest path
    return distance_matrix - min_distances
```
