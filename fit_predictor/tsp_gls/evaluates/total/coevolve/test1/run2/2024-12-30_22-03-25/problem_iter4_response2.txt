```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the shortest path from each node to every other node
    n = distance_matrix.shape[0]
    min_distances = np.min(distance_matrix, axis=1) + np.min(distance_matrix, axis=0)
    
    # Normalize the distance matrix by the sum of all shortest paths
    sum_of_min_distances = np.sum(min_distances)
    normalized_distance_matrix = distance_matrix / sum_of_min_distances
    
    # Use a logarithmic term to enhance the "badness" of longer distances
    # while ensuring that very short distances do not receive too high a penalty
    return np.log1p(normalized_distance_matrix) * 100
```
