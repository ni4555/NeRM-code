```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Use the 2-opt move heuristic to estimate edge weights
    n = distance_matrix.shape[0]
    heuristics = np.zeros_like(distance_matrix)
    for i in range(n):
        for j in range(n):
            if i != j:
                heuristics[i, j] = distance_matrix[i, j] + distance_matrix[i, j]
                if i + 1 < n:
                    heuristics[i, j] -= distance_matrix[i + 1, j]
                if j + 1 < n:
                    heuristics[i, j] -= distance_matrix[i, j + 1]
                if i + 1 < n and j + 1 < n:
                    heuristics[i, j] += distance_matrix[i + 1, j + 1]
    return heuristics
```
