```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Define the precision heuristic matrix
    precision_matrix = np.sqrt(np.abs(distance_matrix))
    
    # Initialize the heuristic matrix with a precision value for each edge
    heuristic_matrix = precision_matrix
    
    # Add a perturbation to create diversity in the heuristic values
    perturbation = np.random.normal(0, 0.01, heuristic_matrix.shape)
    heuristic_matrix += perturbation
    
    # Normalize the heuristic matrix to ensure non-negative values
    heuristic_matrix = np.clip(heuristic_matrix, 0, np.inf)
    
    # Adjust the heuristic matrix based on the number of cities
    num_cities = distance_matrix.shape[0]
    adjustment_factor = num_cities * (1 / (num_cities - 1))
    heuristic_matrix *= adjustment_factor
    
    return heuristic_matrix
```
