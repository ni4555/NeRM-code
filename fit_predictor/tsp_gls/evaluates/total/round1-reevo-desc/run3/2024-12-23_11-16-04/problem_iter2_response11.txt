```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the total distance of the longest shortest path cycle
    longest_cycle = np.sort(distance_matrix.sum(axis=0))[-2]
    
    # It's bad to include edges that are part of the longest shortest path cycle
    # Also, penalize edges that are significantly longer than the longest cycle
    penalty_threshold = 1.5 * longest_cycle
    penalty_matrix = np.where(distance_matrix >= penalty_threshold, -np.inf, distance_matrix)
    return penalty_matrix
```
