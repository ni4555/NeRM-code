```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # It's bad to include long edges in the solution
    # But also bad to have very short edges that could potentially create a dead-end
    # This heuristic considers both long and short edges
    max_distance = np.max(distance_matrix)
    min_distance = np.min(distance_matrix)
    long_edge_penalty = max_distance - distance_matrix
    short_edge_penalty = distance_matrix - min_distance
    return np.maximum(long_edge_penalty, short_edge_penalty)
```
