```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # It's bad to include long edges in the solution, 
    # but also consider the fact that including edges that connect to highly connected nodes is better
    max_degree = np.max(np.sum(distance_matrix, axis=0))
    heuristics = np.zeros_like(distance_matrix)
    for i in range(len(distance_matrix)):
        for j in range(i+1, len(distance_matrix)):
            heuristics[i, j] = distance_matrix[i, j] / max_degree
    return heuristics
```
