```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the minimum distance from each node to any other node
    min_distances = np.min(distance_matrix, axis=1)
    # Add a penalty for edges that are significantly longer than the minimum distance
    # Use a logarithmic scale to reduce the impact of very long distances
    # Also, include a diversity factor to avoid selecting similar edges
    # Adding a small constant to avoid division by zero
    diversity_factor = 1 / (np.sum(distance_matrix != 0, axis=1) + 1e-6)
    return np.log(distance_matrix - min_distances + 1e-6) * diversity_factor
```
