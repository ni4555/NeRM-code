```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = distance_matrix.shape[0]
    heuristics_matrix = np.zeros_like(distance_matrix)
    
    for i in range(n):
        for j in range(n):
            if i != j:
                # Calculate the distance to the nearest neighbor
                nearest_neighbor_dist = np.min(distance_matrix[i, ~np.isclose(distance_matrix[i], 0)])
                # The heuristic is the difference between the edge distance and the nearest neighbor distance
                heuristics_matrix[i, j] = distance_matrix[i, j] - nearest_neighbor_dist
    
    return heuristics_matrix
```
