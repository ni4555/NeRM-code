```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = distance_matrix.shape[0]
    heuristics_matrix = np.zeros_like(distance_matrix)
    
    # For each pair of nodes, calculate the heuristic as the difference between the minimum distance
    # to any other node and the direct distance between the two nodes.
    for i in range(n):
        for j in range(n):
            if i != j:
                min_dist_to_any = np.min(distance_matrix[i, ~np.arange(n) == j])
                heuristics_matrix[i, j] = distance_matrix[i, j] - min_dist_to_any
    
    return heuristics_matrix
```
