```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # This heuristic modifies the distance matrix by adding a penalty for large distances
    # and then scaling it to a specific range to ensure all heuristics are non-negative.
    max_distance = np.max(distance_matrix)
    penalty_threshold = max_distance / 2
    penalty_factor = 2.0
    # Adjust the penalty to avoid negative heuristics values
    penalty_factor = penalty_factor / (1 + penalty_threshold)
    # Apply the heuristic
    heuristics = (distance_matrix > penalty_threshold) * penalty_factor * distance_matrix
    heuristics[distance_matrix <= penalty_threshold] = 0
    return heuristics
```
