```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Create a matrix that reflects the "badness" of including an edge based on its length
    # We invert the matrix (smaller numbers are "better") and add a small value to avoid zero distances
    heuristic_matrix = 1 / (distance_matrix + 1e-10)
    # Normalize the heuristic matrix to ensure all values are within a similar range
    max_value = np.max(heuristic_matrix)
    min_value = np.min(heuristic_matrix)
    normalized_matrix = (heuristic_matrix - min_value) / (max_value - min_value)
    return normalized_matrix
```
