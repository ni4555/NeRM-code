```python
def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    num_nodes = distance_matrix.shape[0]
    heuristics = np.zeros_like(distance_matrix)

    for i in range(num_nodes):
        for j in range(num_nodes):
            if i != j:
                edge_dist = distance_matrix[i, j]
                # Calculate the average distance from node i to all other nodes
                # and the average distance from node j to all other nodes
                avg_dist_i = np.mean(distance_matrix[i, distance_matrix[i, :] != np.inf])
                avg_dist_j = np.mean(distance_matrix[j, distance_matrix[j, :] != np.inf])
                
                # The heuristic value is the difference between the averages minus the edge distance
                heuristics[i, j] = (avg_dist_i + avg_dist_j - edge_dist)

    return heuristics
```
