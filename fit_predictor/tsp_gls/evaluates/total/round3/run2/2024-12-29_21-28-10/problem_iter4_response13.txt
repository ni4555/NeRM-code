```python
def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    num_nodes = distance_matrix.shape[0]
    heuristics = np.zeros_like(distance_matrix)

    # Calculate the global shortest path as the minimum of the entire matrix
    global_shortest_path = np.min(distance_matrix, axis=0)
    
    # Calculate the heuristic value for each edge based on the deviation from the global shortest path
    heuristics = distance_matrix - global_shortest_path.reshape(num_nodes, 1)
    
    return heuristics
```
