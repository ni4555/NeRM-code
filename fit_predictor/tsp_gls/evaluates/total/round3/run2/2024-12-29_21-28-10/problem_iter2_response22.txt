```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Initialize an array to store the heuristic values
    heuristic_values = np.zeros_like(distance_matrix)
    
    # Calculate the shortest path for each node as a reference
    # For simplicity, assume the shortest path to a node is the minimum distance to any other node
    for i in range(distance_matrix.shape[0]):
        shortest_path = np.min(distance_matrix[i, :])
        # Calculate the heuristic value as the deviation from the shortest path
        heuristic_values[i, :] = distance_matrix[i, :] - shortest_path
    
    return heuristic_values
```
