```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Create a matrix where each element is the sum of distances to the nearest neighbor
    # The lower the sum, the better
    nearest_neighbor_sums = np.apply_along_axis(lambda x: np.sum(np.argmin(np.abs(x - distance_matrix), axis=0)), axis=1, arr=distance_matrix)
    
    # Create a penalty matrix where the longer the sum, the higher the penalty
    penalty_matrix = np.exp(-nearest_neighbor_sums)
    
    # Return the penalty matrix which represents the heuristic
    return penalty_matrix
```
