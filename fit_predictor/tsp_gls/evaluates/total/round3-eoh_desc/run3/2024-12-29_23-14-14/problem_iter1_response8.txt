```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # It's bad to include long edges in the solution
    # This heuristic also penalizes edges that are part of the current local optimal route
    penalty_factor = np.ones(distance_matrix.shape)
    local_optimal_route = np.array([0, 1, 2, 3])  # Example local optimal route
    for i in range(len(local_optimal_route) - 1):
        penalty_factor[local_optimal_route[i], local_optimal_route[i + 1]] += 10
    return distance_matrix + penalty_factor
```
