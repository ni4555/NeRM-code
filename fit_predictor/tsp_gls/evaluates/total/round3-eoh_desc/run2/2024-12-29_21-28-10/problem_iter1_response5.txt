```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the degree of each node
    degree = np.sum(distance_matrix, axis=0)
    # Normalize by the number of possible edges minus the number of edges of the node
    normalized_degree = degree / (len(distance_matrix) - degree)
    # It's bad to include edges with a high degree (i.e., heavily connected nodes)
    return 1 / (1 + normalized_degree)
```
