```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    num_nodes = distance_matrix.shape[0]
    average_distance = np.mean(distance_matrix)
    threshold = average_distance * 1.5
    
    # Create a binary matrix for bad edges
    bad_edges = distance_matrix > threshold
    good_edges = ~bad_edges
    
    # Normalize good edges to maintain a consistent scale
    good_edges = good_edges / np.max(good_edges)
    
    # Use the binary matrix to create the heuristics matrix
    heuristics_matrix = np.where(bad_edges, 1, good_edges)
    
    return heuristics_matrix
```
