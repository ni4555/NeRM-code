```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the minimum distance for each node to any other node
    min_distances = np.min(distance_matrix, axis=1)
    
    # Create a matrix that assigns a heuristic based on the minimum distance
    # A smaller minimum distance makes the edge more desirable
    heuristic_matrix = min_distances[:, np.newaxis] + min_distances
    
    # Cap the heuristic values at a certain threshold to prevent extreme influence
    cap = np.max(heuristic_matrix)
    heuristic_matrix[heuristic_matrix > cap] = cap
    
    # Create the final heuristic matrix by subtracting the current distances
    final_heuristics = heuristic_matrix - distance_matrix
    final_heuristics[final_heuristics < 0] = 0
    
    return final_heuristics
```
