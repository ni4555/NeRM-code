```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Initialize the heuristics matrix with the distance matrix
    heuristics_matrix = np.copy(distance_matrix)
    
    # Calculate the total distance of all possible tours
    total_distance = np.sum(distance_matrix)
    
    # Calculate the mean distance
    mean_distance = total_distance / (len(distance_matrix) * (len(distance_matrix) - 1))
    
    # Adjust the heuristics matrix to prioritize shorter edges
    heuristics_matrix = np.where(distance_matrix < mean_distance, 1, 0)
    
    # Adjust the heuristics matrix to penalize high variance edges
    edge_variance = np.var(distance_matrix, axis=0)
    heuristics_matrix += edge_variance
    
    # Normalize the heuristics matrix to ensure all values are within a reasonable range
    max_value = np.max(heuristics_matrix)
    heuristics_matrix /= max_value
    
    return heuristics_matrix
```
