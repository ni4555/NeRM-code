```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = distance_matrix.shape[0]
    heuristics_matrix = np.zeros_like(distance_matrix)

    # Precompute the minimum distances for each node to its nearest neighbors
    min_distances = np.min(distance_matrix, axis=1)
    
    for i in range(n):
        for j in range(n):
            if i != j:
                heuristics_matrix[i, j] = (min_distances[i] + min_distances[j] + distance_matrix[i, j]) / 2
            else:
                heuristics_matrix[i, j] = float('inf')

    return heuristics_matrix
```
