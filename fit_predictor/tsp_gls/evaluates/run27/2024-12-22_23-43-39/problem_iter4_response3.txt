```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the average distance to each node
    avg_distance_to_each_node = np.mean(distance_matrix, axis=0)
    avg_distance_from_each_node = np.mean(distance_matrix, axis=1)
    # Calculate the node centrality as the sum of average distances to and from each node
    node_centrality = avg_distance_to_each_node + avg_distance_from_each_node
    # Calculate the deviation from the average distance
    distance_deviation = np.abs(distance_matrix - avg_distance_to_each_node)
    # Calculate the heuristic based on distance deviation and node centrality
    heuristic = distance_deviation / node_centrality
    # Ensure the heuristic values are positive
    heuristic = np.maximum(heuristic, 0)
    return heuristic
```
