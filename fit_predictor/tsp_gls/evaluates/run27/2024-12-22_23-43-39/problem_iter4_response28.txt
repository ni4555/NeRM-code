```python
def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = distance_matrix.shape[0]
    heuristics_matrix = np.zeros_like(distance_matrix)
    
    for i in range(n):
        for j in range(n):
            if i != j:
                nearest_neighbor = np.argmin(distance_matrix[i, :])
                farthest_node = np.argmax(distance_matrix[i, :])
                heuristics_matrix[i, j] = distance_matrix[i, nearest_neighbor] + distance_matrix[i, farthest_node]
    
    max_heuristic = np.max(heuristics_matrix)
    min_heuristic = np.min(heuristics_matrix)
    heuristics_matrix = (heuristics_matrix - min_heuristic) / (max_heuristic - min_heuristic)
    
    return heuristics_matrix
```
