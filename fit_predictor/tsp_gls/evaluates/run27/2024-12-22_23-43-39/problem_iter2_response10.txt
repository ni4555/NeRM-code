```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the average distance to each node
    avg_distance_to_each_node = np.mean(distance_matrix, axis=0)
    avg_distance_from_each_node = np.mean(distance_matrix, axis=1)
    # Calculate the average distance from each node
    avg_distance_to_node = np.mean(distance_matrix, axis=1)
    avg_distance_from_node = np.mean(distance_matrix, axis=0)
    # Calculate the centrality of each node as the sum of its average distances
    node_centrality = avg_distance_to_node + avg_distance_from_node
    # Calculate the heuristic as a combination of node centrality and distance variations
    heuristics = np.sqrt((avg_distance_to_each_node - distance_matrix) ** 2 +
                         (avg_distance_from_each_node - distance_matrix) ** 2)
    heuristics *= (1 / node_centrality)
    return heuristics
```
