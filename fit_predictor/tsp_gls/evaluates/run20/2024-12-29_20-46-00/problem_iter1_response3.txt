```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Use a heuristic based on the average distance to all other nodes to estimate edge importance
    num_nodes = distance_matrix.shape[0]
    # Create a matrix of sums of distances to all other nodes for each node
    distance_sums = np.sum(distance_matrix, axis=1)
    # Calculate the average distance for each node
    average_distances = distance_sums / (num_nodes - 1)
    # The heuristic value for each edge is the difference between the average distance
    # and the distance for the edge itself, which indicates the edge's potential impact on the overall distance
    heuristic_values = np.abs(distance_matrix - average_distances[:, None])
    return heuristic_values
```
