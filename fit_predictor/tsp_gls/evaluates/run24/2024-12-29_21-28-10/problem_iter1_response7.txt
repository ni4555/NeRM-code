```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Heuristic that considers the distance to the nearest neighbor of each vertex
    # as a measure of its badness. The lower the distance, the better the edge.
    distances = np.copy(distance_matrix)
    num_vertices = distances.shape[0]
    
    for i in range(num_vertices):
        # Set the distance to self-loops to a large value
        distances[i, i] = np.inf
        
        # Find the minimum distance to a neighboring vertex
        min_distance = np.min(distances[i, :])
        
        # Subtract the minimum distance from all distances to this vertex
        distances[i, :] = distances[i, :] - min_distance
    
    return distances
```
