```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    num_nodes = distance_matrix.shape[0]
    heuristics = np.zeros_like(distance_matrix)

    for i in range(num_nodes):
        for j in range(num_nodes):
            if i != j:
                # Find the nearest neighbors for both nodes
                nearest_neighbor_i = np.argmin(distance_matrix[i, :])
                nearest_neighbor_j = np.argmin(distance_matrix[j, :])
                
                # Calculate the heuristic based on the distance to the nearest neighbors
                heuristics[i, j] = distance_matrix[i, j] - distance_matrix[nearest_neighbor_i, nearest_neighbor_j] - distance_matrix[nearest_neighbor_j, nearest_neighbor_i]

    return heuristics
```
