```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Use the Manhattan distance as a heuristic, assuming the grid is the cities
    rows, cols = distance_matrix.shape
    heuristics = np.zeros_like(distance_matrix)
    for i in range(rows):
        for j in range(cols):
            if i != j:
                # Compute Manhattan distance to the farthest corner
                max_row = max(i, rows - i - 1)
                max_col = max(j, cols - j - 1)
                heuristics[i, j] = abs(max_row - i) + abs(max_col - j)
    return heuristics
```
