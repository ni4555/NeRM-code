```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the shortest path from each node to every other node using all-pairs shortest path
    n = distance_matrix.shape[0]
    min_distances = np.full((n, n), np.inf)
    np.fill_diagonal(min_distances, 0)
    
    for k in range(n):
        for i in range(n):
            for j in range(n):
                if distance_matrix[i, j] > min_distances[i, k] + distance_matrix[k, j]:
                    min_distances[i, j] = min_distances[i, k] + distance_matrix[k, j]
    
    # It's bad to include long edges that are not the shortest path
    return distance_matrix - min_distances
```
