```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the Euclidean distance from each city to the furthest city as a heuristic
    rows, cols = distance_matrix.shape
    heuristics = np.zeros_like(distance_matrix)
    for i in range(rows):
        for j in range(cols):
            if i != j:
                # Compute Euclidean distance to the farthest city
                furthest_row = max(i, rows - i - 1)
                furthest_col = max(j, cols - j - 1)
                heuristics[i, j] = np.sqrt((furthest_row - i)**2 + (furthest_col - j)**2)
    return heuristics
```
