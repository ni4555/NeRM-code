```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = distance_matrix.shape[0]
    # Calculate the shortest path from each node to the next
    min_edge_distances = np.min(distance_matrix, axis=1)
    # It's bad to include long edges, so use the shortest edge distances as a heuristic
    return distance_matrix - min_edge_distances[:, np.newaxis]
```
