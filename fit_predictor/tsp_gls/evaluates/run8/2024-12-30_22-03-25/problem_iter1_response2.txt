```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Introduce a penalty for edges that are part of the longest cycle in the graph
    max_cycle = np.max(np.triu(distance_matrix, k=1) + np.tril(distance_matrix, k=-1))
    return distance_matrix + max_cycle * np.random.choice([0, 1], size=distance_matrix.shape)
```
