```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = distance_matrix.shape[0]
    min_distances = np.zeros((n, n))

    # Calculate the shortest path from each node to every other node using Dijkstra's algorithm
    for i in range(n):
        min_distances[i, :] = np.sort(distance_matrix[i, :])  # Sorted distances from node i
        for j in range(n):
            if j != i:
                min_distances[i, j] += np.min(min_distances[:, j])

    # Calculate the difference between the actual distances and the shortest path distances
    return distance_matrix - min_distances
```
