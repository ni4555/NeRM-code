```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    rows, cols = distance_matrix.shape
    heuristics = np.zeros_like(distance_matrix)
    for i in range(rows):
        for j in range(cols):
            if i != j:
                # Compute a weighted Manhattan distance based on city positions
                distance = np.abs(i - j) + np.abs(rows - 1 - i - j)
                # Apply a weight to long distances to minimize their impact
                weight = 1 / (1 + distance)
                heuristics[i, j] = weight
    return heuristics
```
