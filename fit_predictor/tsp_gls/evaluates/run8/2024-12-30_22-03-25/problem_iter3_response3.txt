```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = distance_matrix.shape[0]
    min_distances = np.zeros((n, n))
    
    # Calculate the shortest path from each node to every other node
    for i in range(n):
        for j in range(n):
            # Exclude the distance to itself and the direct distance, if any
            min_distances[i, j] = np.min(distance_matrix[i, j+1:]) + np.min(distance_matrix[j+1:, i])
    
    # Heuristically penalize edges that are not the shortest path
    return distance_matrix - min_distances
```
