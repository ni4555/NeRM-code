```python
def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Initialize the heuristic matrix with zeros
    heuristic_matrix = np.zeros_like(distance_matrix)
    
    # Apply a different heuristic: The heuristic is the negative of the distance
    # since we want to minimize the TSP, we can use this heuristic to guide the search
    for i in range(len(distance_matrix)):
        for j in range(len(distance_matrix)):
            if i != j:
                heuristic_matrix[i, j] = -distance_matrix[i, j]
    
    return heuristic_matrix
```
