```python
def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Initialize the heuristic matrix with zeros
    heuristic_matrix = np.zeros_like(distance_matrix)
    
    # Apply the innovative heuristic to refine the distance matrix
    # Example heuristic: Calculate the maximum distance between a point and any other point in the graph
    max_distances = np.max(distance_matrix, axis=1)[:, None]
    for i in range(len(distance_matrix)):
        for j in range(len(distance_matrix)):
            if i != j:
                heuristic_value = distance_matrix[i, j] / (1 + max_distances[i] - distance_matrix[i, j])
            else:
                heuristic_value = 0
            heuristic_matrix[i, j] = heuristic_value
            heuristic_matrix[j, i] = heuristic_value  # Symmetry of the matrix
    
    return heuristic_matrix
```
