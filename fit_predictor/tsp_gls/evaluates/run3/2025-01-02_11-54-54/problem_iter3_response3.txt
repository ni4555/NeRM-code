```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Initialize a matrix of the same shape as the input distance matrix
    heuristics_matrix = np.zeros_like(distance_matrix)
    
    # Calculate the diagonal of the distance matrix (distance from each node to itself)
    diagonal = np.diag(distance_matrix)
    
    # Calculate the minimum distance from each node to any other node (excluding itself)
    min_distances = np.min(distance_matrix, axis=1) + diagonal
    
    # Calculate the heuristic value by subtracting the minimum distance from the edge cost
    heuristics_matrix = distance_matrix - min_distances[:, None]
    
    return heuristics_matrix
```
