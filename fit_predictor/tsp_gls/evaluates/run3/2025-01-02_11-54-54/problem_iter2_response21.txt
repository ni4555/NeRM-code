```python
def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the sum of distances from each node to all other nodes
    min_distances = np.min(distance_matrix, axis=1)
    max_distances = np.max(distance_matrix, axis=1)
    
    # Calculate the heuristic value as the sum of min and max distances minus the current edge cost
    # Use broadcasting to add the same row vector of min_distances to each column and vice versa
    heuristics_matrix = (min_distances[:, np.newaxis] + min_distances[np.newaxis, :] +
                         max_distances[:, np.newaxis] + max_distances[np.newaxis, :]) - distance_matrix
    
    return heuristics_matrix
```
