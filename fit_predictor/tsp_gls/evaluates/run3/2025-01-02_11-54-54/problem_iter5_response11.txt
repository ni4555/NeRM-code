```python
def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the diagonal of the distance matrix (distance from each node to itself)
    diagonal = np.diag(distance_matrix)
    
    # Vectorized subtraction of the diagonal from the matrix, excluding the diagonal itself
    lower_triangle = distance_matrix - diagonal
    upper_triangle = lower_triangle.T - diagonal.T
    
    # Calculate the heuristic values by taking the minimum possible travel distance
    heuristics_matrix = np.minimum(lower_triangle, upper_triangle)
    
    return heuristics_matrix
```
