```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Initialize a matrix of the same shape as the input distance matrix
    heuristics_matrix = np.zeros_like(distance_matrix)
    
    # Calculate the total distance of the complete cycle (sum of all edges)
    total_distance = np.sum(distance_matrix)
    
    # Calculate the diagonal of the distance matrix which represents the distances from each node to itself
    diagonal = np.diag(distance_matrix)
    
    # For each edge in the distance matrix, calculate the heuristic value
    heuristics_matrix = total_distance - 2 * distance_matrix - diagonal
    
    return heuristics_matrix
```
