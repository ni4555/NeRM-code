```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    total_capacity = demands.sum()
    normalized_demands = demands / total_capacity

    max_demand = demands.max()
    median_demand = torch.median(demands)
    demand_diff = max_demand - median_demand

    weight = torch.clamp(demand_diff / median_demand, min=0, max=1)
    weight = weight ** 2

    heuristic_matrix = -torch.mul(
        torch.mul(normalized_demands, distance_matrix),
        weight
    )

    threshold = torch.tensor(0.1, dtype=distance_matrix.dtype)
    heuristic_matrix = torch.clamp(heuristic_matrix, min=-threshold, max=threshold)

    return heuristic_matrix
```
