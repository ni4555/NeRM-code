```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    """A heuristic that considers the demand and distance to encourage routes that visit higher-demand nodes first."""
    total_demand = demands.sum()
    # Calculate the sum of demands for each customer
    demand_sum = demands.cumsum()
    # Calculate the negative distance to the next customer and subtract it from the demand ratio
    negative_distance = -distance_matrix
    demand_ratio = demand_sum / total_demand
    # Combine the demand ratio and negative distance to get the heuristic value
    heuristic_values = demand_ratio + negative_distance
    return heuristic_values
```
