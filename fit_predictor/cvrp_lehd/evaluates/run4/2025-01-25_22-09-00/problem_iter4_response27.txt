```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    import torch
    n = distance_matrix.shape[0]
    cumulative_demand = torch.cumsum(demands, dim=0)
    load = (cumulative_demand - demands.unsqueeze(1)) / (cumulative_demand.max() + 1e-6)
    distance_scale = 1 / (distance_matrix + 1e-6)
    heuristics = load * distance_scale
    global_balance = 1 / torch.exp(torch.arange(n) * 0.1)
    final_heuristics = heuristics * global_balance
    return final_heuristics
```
