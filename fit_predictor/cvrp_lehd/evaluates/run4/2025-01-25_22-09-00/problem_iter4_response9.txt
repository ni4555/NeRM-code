```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    """Improved heuristic incorporating demand, distance, and avoiding unnecessary normalization."""
    total_demand = demands.sum()
    normalized_demands = demands / total_demand
    potential = -distance_matrix * normalized_demands
    dampen = torch.exp(-distance_matrix / 10)
    normalized_potential = potential / (demands.min() + 1e-8)  # Using the min demand for normalization
    heuristics = normalized_potential * dampen
    return heuristics
```
