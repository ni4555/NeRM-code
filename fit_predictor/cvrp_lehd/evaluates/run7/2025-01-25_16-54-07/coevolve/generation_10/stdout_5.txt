[*] Running ...
D:\Conda_data\envs\reevo\Lib\site-packages\torch\__init__.py:1144: UserWarning: torch.set_default_tensor_type() is deprecated as of PyTorch 2.1, please use torch.set_default_dtype() and torch.set_default_device() as alternatives. (Triggered internally at C:\cb\pytorch_1000000000000\work\torch\csrc\tensor\python_tensor.cpp:434.)
  _C._set_default_tensor_type(t)
D:\ProgramLanguages\Programs\Python\code-gen\reevo_2\problems\cvrp_lehd\VRPTester.py:43: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(checkpoint_fullname, map_location=device)
Traceback (most recent call last):
  File "D:\ProgramLanguages\Programs\Python\code-gen\reevo_2/problems/cvrp_lehd/eval.py", line 164, in <module>
    score_optimal, score_student, gap = main_test()
                                        ^^^^^^^^^^^
  File "D:\ProgramLanguages\Programs\Python\code-gen\reevo_2/problems/cvrp_lehd/eval.py", line 105, in main_test
    score_optimal, score_student, gap = tester.run()
                                        ^^^^^^^^^^^^
  File "D:\ProgramLanguages\Programs\Python\code-gen\reevo_2\problems\cvrp_lehd\VRPTester.py", line 73, in run
    score_teacher, score_student, problems_size = self._test_one_batch(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "D:\ProgramLanguages\Programs\Python\code-gen\reevo_2\problems\cvrp_lehd\VRPTester.py", line 185, in _test_one_batch
    self.model(state, self.env.selected_node_list, self.env.solution, current_step,
  File "D:\Conda_data\envs\reevo\Lib\site-packages\torch\nn\modules\module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Conda_data\envs\reevo\Lib\site-packages\torch\nn\modules\module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\ProgramLanguages\Programs\Python\code-gen\reevo_2\problems\cvrp_lehd\VRPModel.py", line 92, in forward
    self.attention_bias = torch.stack([
                                      ^
  File "D:\ProgramLanguages\Programs\Python\code-gen\reevo_2\problems\cvrp_lehd\VRPModel.py", line 93, in <listcomp>
    heuristics(distance_matrices[i], demands[i]) for i in range(distance_matrices.size(0))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\ProgramLanguages\Programs\Python\code-gen\reevo_2\problems\cvrp_lehd\gpt.py", line 14, in heuristics_v2
    edge_capacity_mask = distance_matrix < vehicle_capacity
                                                            
IndexError: Dimension out of range (expected to be in range of [-1, 0], but got 1)
