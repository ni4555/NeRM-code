```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    total_demand = demands.sum()
    return_distance_to_depot = distance_matrix[:, None, 0] + distance_matrix[None, :, 0]
    current_demand = demands[:, None] + demands[None, :]
    return_to_depot = (current_demand >= total_demand).float()
    heuristic_values = -distance_matrix + return_distance_to_depot * return_distance_to_depot
    edge_exceeds_capacity = (current_demand >= total_demand).bool()
    heuristics = torch.where(edge_exceeds_capacity, -torch.inf, heuristic_values)
    return heuristics
```
