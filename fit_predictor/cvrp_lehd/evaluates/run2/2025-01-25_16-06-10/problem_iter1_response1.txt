```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Calculate the cumulative demand for each node in a descending order
    cum_demand = torch.cumsum(demands[1:], 0) / demands.sum()
    # Calculate the cumulative distance for each node in a descending order
    cum_distance = torch.cumsum(distance_matrix[1:, 1:], 0) / distance_matrix.sum()
    # Calculate the heuristic values based on the ratio of cumulative demand to cumulative distance
    heuristics = (cum_demand - cum_distance) * (demands > 0)
    return heuristics
```
