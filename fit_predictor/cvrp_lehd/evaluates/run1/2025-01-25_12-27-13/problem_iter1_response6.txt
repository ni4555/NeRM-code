```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    """Improve upon heuristics_v1 by considering edge lengths and demands."""
    # Normalize distances by the vehicle capacity (1 in this case)
    normalized_distance_matrix = distance_matrix / demands
    # Calculate the total demand for each edge
    edge_demand = torch.clamp((demands[None, :] + demands[:, None]) / 2, min=0)
    # Promote edges with lower normalized distance and lower demand sum
    return -normalized_distance_matrix + torch.log1p(edge_demand)
```
