```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    demand_diff = demands - demands.mean()
    distance_penalty = distance_matrix * (1 - torch.exp(-demands))

    # Balancing penalties and bonuses
    heuristic_matrix = -torch.abs(demand_diff) * 0.5 - distance_penalty * 0.5
    bonus = demands.mean()
    heuristic_matrix[torch.arange(n), torch.arange(n)] += bonus  # Adding a bonus to return to the depot
    
    return heuristic_matrix
```
