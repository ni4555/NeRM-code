```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    total_demand = demands.sum().item()
    demand_weight = 1 - demands / total_demand
    distance_weight = torch.exp(-distance_matrix)
    demand_variance = torch.var(demands)
    demand_variance /= demand_variance.max()

    heuristic_matrix = -demand_weight * distance_weight - demand_variance
    diagonal_bonus = 1 - (1 - demand_weight).sum()
    heuristic_matrix[torch.arange(n), torch.arange(n)] += diagonal_bonus

    return heuristic_matrix
```
