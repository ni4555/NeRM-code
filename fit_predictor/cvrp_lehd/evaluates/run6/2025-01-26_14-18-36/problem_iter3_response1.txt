```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    total_demand = demands.sum()
    demand_scale = demands / total_demand
    cost = distance_matrix / (demand_scale * demands)
    cost[torch.isnan(cost)] = 0  # Replace NaN values with 0
    return -cost  # Negative values for undesirable edges
```
