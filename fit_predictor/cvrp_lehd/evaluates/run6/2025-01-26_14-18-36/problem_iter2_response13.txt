```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    """
    An improved heuristic function for the Capacitated Vehicle Routing Problem (CVRP).
    It leverages the demand and distance matrix to calculate the attractiveness of each edge.
    """
    n = distance_matrix.shape[0]
    # Initialize the matrix with zeros
    heuristic_matrix = torch.zeros_like(distance_matrix)
    # Normalize the demand vector by the total vehicle capacity
    normalized_demands = demands / demands.sum()
    # Iterate over the nodes to calculate the heuristic values
    for i in range(n):
        for j in range(n):
            if i != j:
                # Calculate the edge attractiveness based on distance and demand
                edge_attractiveness = normalized_demands[i] * normalized_demands[j] * distance_matrix[i, j]
                # Set the heuristic value for the edge
                heuristic_matrix[i, j] = edge_attractiveness
    return heuristic_matrix
```
