```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Incorporate constraints by penalizing long distances
    distance_penalty = -torch.log(distance_matrix)
    
    # Balance global & local using demand patterns
    # Promote edges with lower demands to be prioritized in the heuristic
    demand_promotion = (1 / (demands + 1e-5)) * 10  # Add a small epsilon to avoid division by zero
    
    # Combine penalties and promotions using vectorized operations
    heuristics = distance_penalty + demand_promotion
    return heuristics
```
