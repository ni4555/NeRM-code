```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Calculate the difference in demands between consecutive nodes
    demand_diff = (demands[1:] - demands[:-1])
    
    # Identify edges that have the same demand change
    same_demand_diff_indices = (demand_diff == 0).nonzero(as_tuple=False).reshape(-1, 2)
    
    # Calculate the heuristics value as the negative of the distance
    heuristics_values = -distance_matrix[same_demand_diff_indices[:, 1], same_demand_diff_indices[:, 0]]
    
    # Fill the distance matrix with heuristics values where the demand difference is the same
    distance_matrix[same_demand_diff_indices[:, 1], same_demand_diff_indices[:, 0]] = heuristics_values
    
    return distance_matrix
```
