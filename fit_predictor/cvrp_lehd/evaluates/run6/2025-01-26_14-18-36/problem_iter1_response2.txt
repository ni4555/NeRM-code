```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    """A heuristic based on the ratio of the demand to distance."""
    demands[torch.isnan(demands)] = 1.0  # Handle NaNs in demands
    distances_from_depot = distance_matrix[torch.arange(distance_matrix.shape[0]), 0]
    demand_to_distance_ratio = demands / distances_from_depot
    heuristics = -torch.abs(demand_to_distance_ratio - demands.mean())
    return heuristics
```
