```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Normalize distances by taking the inverse to favor closer nodes
    normalized_distances = 1 / (distance_matrix + 1e-8)  # Adding a small constant to avoid division by zero
    
    # Normalize demands to the range [0, 1]
    normalized_demands = demands / demands.sum()
    
    # Combine normalized distances and demands
    combined_scores = normalized_distances * normalized_demands
    
    # Invert the distances to favor shorter paths
    combined_scores = -combined_scores
    
    return combined_scores
```
