```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    total_demand = demands.sum()
    # Calculate the relative demand of each node
    relative_demand = demands / total_demand
    # Calculate the sum of distances to each node from the depot
    distances_to_depot = distance_matrix.sum(axis=1)
    # Calculate the node influence based on relative demand
    node_influence = relative_demand.unsqueeze(1)
    # Combine influence with distance to create the heuristic
    heuristic_matrix = -torch.abs(distance_matrix) * node_influence * distances_to_depot
    return heuristic_matrix
```
