```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    depot = 0
    total_demand = demands.sum()
    heuristics = torch.zeros_like(distance_matrix)
    distance_matrix_inv = 1 / (distance_matrix + 1e-10)
    normalized_demands = demands / total_demand
    # Calculate the heuristic values by combining the inverse distance and normalized demand
    heuristics = -normalized_demands * distance_matrix_inv
    return heuristics
```
