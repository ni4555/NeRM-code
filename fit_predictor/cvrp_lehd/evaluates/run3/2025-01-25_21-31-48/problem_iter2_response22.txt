```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    total_demand = demands.sum()
    # Create a diagonal matrix to subtract demand from each node's distance
    demand_subtraction = torch.diag(demands)
    # Use element-wise subtraction and broadcasting to compute the heuristic values
    heuristics = distance_matrix - demand_subtraction + (distance_matrix.sum(axis=1, keepdim=True) - demands.unsqueeze(1)) / total_demand
    return heuristics
```
