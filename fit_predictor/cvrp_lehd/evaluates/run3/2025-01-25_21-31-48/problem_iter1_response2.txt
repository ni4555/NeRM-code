```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    """Improves upon the trivial implementation by considering node demand and distance."""
    total_demand = demands.sum()
    demand_threshold = (1 / len(demands)) * total_demand
    
    # Calculate the difference between distance and demand
    distance_demand_diff = distance_matrix - demands.unsqueeze(1)
    
    # Calculate the difference between demand and demand_threshold
    demand_diff_threshold = demands - demand_threshold
    
    # Combine the two differences to create the heuristic
    heuristic = (distance_demand_diff * demand_diff_threshold).sum(dim=1)
    
    return heuristic
```
