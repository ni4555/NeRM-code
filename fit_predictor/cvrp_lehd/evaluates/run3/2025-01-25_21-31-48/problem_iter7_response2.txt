```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Normalize the distance matrix
    max_distance = torch.max(distance_matrix)
    normalized_distance = distance_matrix / max_distance
    
    # Incorporate demand
    demand_normalized = demands / demands.sum()
    
    # Calculate balance of demand for each customer
    balance = torch.abs(demand_normalized - 0.5)
    
    # Invert the distance matrix
    inverted_distance = 1 / normalized_distance
    
    # Combine the features and normalize
    combined_features = inverted_distance * balance
    max_combined_feature = torch.max(combined_features)
    heuristics = combined_features / max_combined_feature
    
    return heuristics
```
