```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Combine distance and demand factors
    combined_heuristic = distance_matrix * (1 - demands) + demands
    
    # Normalize the combined heuristic to a range
    max_combined_heuristic = combined_heuristic.max()
    min_combined_heuristic = combined_heuristic.min()
    normalized_combined_heuristic = (combined_heuristic - min_combined_heuristic) / (max_combined_heuristic - min_combined_heuristic)
    
    # Invert the normalized values to make it negative for undesirable edges and positive for promising ones
    heuristics = 1 - normalized_combined_heuristic
    
    return heuristics
```
