```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    """An improved heuristic that balances distance and demand, with an emphasis on closer nodes and higher demand."""
    total_demand = demands.sum()
    weights = demands / total_demand
    # Calculate the heuristic values based on the distance and demand, weighted by the distance
    heuristic_values = distance_matrix - (distance_matrix.sum(axis=1).unsqueeze(1) * weights) - 0.1 * demands
    # Cap the heuristic values at a certain threshold to ensure they are not too large
    heuristic_values = torch.clamp(heuristic_values, min=-1.0, max=1.0)
    return heuristic_values
```
