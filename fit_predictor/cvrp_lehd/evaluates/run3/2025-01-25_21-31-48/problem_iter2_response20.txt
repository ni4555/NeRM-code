```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    """An improved heuristic that takes into account the global demand distribution, weighted
    distance, and demand, with normalization."""
    # Normalize the demands to sum to 1
    normalized_demands = demands / demands.sum()
    
    # Compute the weighted sum of demands based on the distance to the depot
    demand_weights = distance_matrix * normalized_demands
    
    # The heuristic value is the sum of the weighted distance and the weighted demand
    heuristic_values = demand_weights.sum(dim=1)
    
    return heuristic_values
```
