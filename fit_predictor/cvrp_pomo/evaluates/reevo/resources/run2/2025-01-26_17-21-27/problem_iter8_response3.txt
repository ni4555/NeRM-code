```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    total_capacity = demands.sum()
    cumulative_demand = torch.cumsum(demands, dim=0)
    penalty = -torch.abs(demands).min().to(distance_matrix.device)
    heuristics = distance_matrix + cumulative_demand * penalty + total_capacity * torch.sigmoid(-cumulative_demand)
    return heuristics
```
