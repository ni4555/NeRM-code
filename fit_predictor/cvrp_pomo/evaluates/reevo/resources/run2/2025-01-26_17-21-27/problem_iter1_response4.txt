```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    """Implements a heuristic based on the sum of demands and inverse of distances."""
    demands_sum = demands.sum().to(torch.float32)
    distance_inv = 1.0 / distance_matrix
    # Negative values for longer distances or higher demands
    return demands_sum * distance_inv * (1 - demands)
```
