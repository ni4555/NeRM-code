```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Initialize the heuristics matrix with the same size as the distance matrix
    heuristics = torch.zeros_like(distance_matrix)
    
    # Calculate the cumulative demand from the depot to each customer
    cumulative_demand = torch.cumsum(demands, dim=0)
    
    # Calculate the cumulative distance from the depot to each customer
    cumulative_distance = torch.cumsum(distance_matrix[:, 1:], dim=0)
    
    # Calculate the relative demand (normalized by the vehicle capacity)
    relative_demand = cumulative_demand / demands.sum()
    
    # Calculate the heuristic value based on the relative demand and cumulative distance
    heuristics[:, 1:] = relative_demand * cumulative_distance[1:]
    
    return heuristics
```
