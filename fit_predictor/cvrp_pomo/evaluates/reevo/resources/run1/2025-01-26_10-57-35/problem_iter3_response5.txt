```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    total_capacity = demands.sum()
    edge_demands = distance_matrix * demands[:, None]
    remaining_capacity = total_capacity * torch.arange(n)[None, :] < demands[:, None]
    remaining_capacity[0] = 0  # The depot should not be considered for further demand
    edge_potential = edge_demands[remaining_capacity] - edge_demands[~remaining_capacity]
    return edge_potential
```
