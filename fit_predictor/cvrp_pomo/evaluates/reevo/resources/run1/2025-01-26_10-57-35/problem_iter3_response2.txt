```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Calculate the cumulative sum of demands from the depot to each node
    cumulative_demands = demands.cumsum(dim=0)
    
    # Initialize the heuristics matrix with zeros
    heuristics = torch.zeros_like(distance_matrix)
    
    # Calculate the heuristics for each edge
    # An edge from node i to node j is promising if the demand at node j is less than the
    # vehicle capacity or if it is the last node in the route (cumulative demand reaches capacity)
    heuristics += (cumulative_demands < demands.unsqueeze(1)).float() * distance_matrix
    
    return heuristics
```
