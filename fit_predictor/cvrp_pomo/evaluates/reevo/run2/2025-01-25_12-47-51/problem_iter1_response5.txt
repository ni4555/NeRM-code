```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    """Improve upon the trivial implementation by considering the total demand and the inverse of distance."""
    # Calculate the total demand
    total_demand = torch.sum(demands)
    
    # Calculate the inverse of distance matrix
    inv_distance_matrix = 1 / (distance_matrix + 1e-8)  # Adding a small constant to avoid division by zero
    
    # Normalize the inverse distance matrix by the total demand
    normalized_inv_distance_matrix = inv_distance_matrix / total_demand
    
    # Use the negative of the normalized inverse distance as the heuristic
    heuristic_matrix = -normalized_inv_distance_matrix
    
    return heuristic_matrix
```
