```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    """Improved heuristic considering demand, distance, and load balancing."""
    total_demand = demands.sum()
    demand_threshold = total_demand / len(demands)
    max_demand = demands.max()
    min_demand = demands.min()
    # Normalize distances and demands
    normalized_distances = distance_matrix / distance_matrix.max()
    normalized_demands = demands / demand_threshold
    # Calculate the heuristic value based on the normalized distance, demand, and load balance
    load_balance = (demands - min_demand) / (max_demand - min_demand)
    heuristics = (1 / (1 + normalized_distances)) * (1 - normalized_demands) * load_balance
    return heuristics
```
