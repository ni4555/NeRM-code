```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    total_demand = demands.sum()
    # Incorporate a balance metric between the demand of a node and the average distance
    # The heuristic value will be higher for nodes with high demand close to the depot
    heuristic_values = (demands - torch.mean(demands)) * (1.0 / distance_matrix)
    # Ensure the heuristic values are non-negative
    return heuristic_values.clamp(min=0)
```
