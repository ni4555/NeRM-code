```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Calculate cumulative demand for each node
    total_demand = demands.cumsum(0)
    # Calculate the difference between total demand and vehicle capacity
    demand_diff = (total_demand - demands[:, None]).clamp(min=0)
    # Normalize the distance matrix by the number of nodes to get relative distances
    normalized_distance_matrix = distance_matrix / len(demands)
    # Use the normalized distances and demand differences to compute heuristic values
    heuristic_values = -normalized_distance_matrix * demand_diff
    return heuristic_values
```
