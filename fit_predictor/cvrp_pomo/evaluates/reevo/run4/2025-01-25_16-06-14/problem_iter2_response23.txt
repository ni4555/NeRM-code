```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    """Improved heuristic considering non-linear interactions, normalization, and efficient tensor operations."""
    total_demand = demands.sum()
    demand_factor = (demands / total_demand).unsqueeze(1)
    distance_factor = 1 / (distance_matrix + 1e-5)  # Add a small constant to avoid division by zero
    
    # Use a non-linear function to weigh the demand and distance factors
    combined_factor = torch.relu(demand_factor * distance_factor)
    
    # Normalize the combined factor to ensure all values are within a specific range
    normalized_factor = combined_factor / (combined_factor.sum() + 1e-8)
    
    # Calculate the heuristic values
    return -normalized_factor * distance_matrix
```
