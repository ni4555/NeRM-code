```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Calculate cumulative demand for each node
    cumulative_demand = demands.cumsum(0)
    # Calculate the difference between cumulative demand and vehicle capacity
    capacity = 1.0  # Assuming the vehicle capacity is 1 for normalization
    demand_diff = (cumulative_demand - capacity).clamp(min=0)
    # Apply a non-linear transformation to the demand difference
    non_linear_demand = torch.pow(demand_diff, 2)
    # Incorporate distance and non-linear transformed demand
    heuristic_values = -non_linear_demand * distance_matrix
    return heuristic_values
```
