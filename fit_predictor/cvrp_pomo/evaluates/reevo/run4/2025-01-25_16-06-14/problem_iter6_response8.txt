```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Calculate the total demand for each node
    total_demand = demands.cumsum(0)
    # Calculate the demand difference by subtracting the total demand from the first node's demand
    demand_diff = (total_demand - demands[0]).clamp(min=0)
    # Calculate the maximum demand difference
    max_demand_diff = demand_diff.max()
    # Normalize the demand difference by the maximum demand difference to get a heuristic value
    # Use a smooth approximation to avoid division by zero
    heuristic_values = -distance_matrix * torch.pow(demand_diff / (max_demand_diff + 1e-8), 2)
    return heuristic_values
```
