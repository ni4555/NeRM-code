```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Normalize the distance matrix by the sum of demands to scale the distances
    total_demand = demands.sum()
    normalized_distance_matrix = distance_matrix / (total_demand + 1e-8)
    
    # Create a matrix of negative values
    negative_matrix = -normalized_distance_matrix
    
    # Subtract the demands from the normalized distances to penalize higher demands
    demand_penalty = demands - 1e-8
    
    # Combine the distance and demand penalty to create the heuristic
    heuristic_matrix = negative_matrix - demand_penalty
    return heuristic_matrix
```
