```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    total_demand = demands.sum()
    normalized_distance_matrix = distance_matrix / total_demand
    scaled_demands = demands / demands.max()
    non_linear_distance = torch.exp(normalized_distance_matrix)
    non_linear_demand = torch.clamp(scaled_demands, min=0.1) * (2 * torch.sin(torch.acos(scaled_demands)))
    combined_heuristic = non_linear_distance - non_linear_demand
    return -combined_heuristic
```
