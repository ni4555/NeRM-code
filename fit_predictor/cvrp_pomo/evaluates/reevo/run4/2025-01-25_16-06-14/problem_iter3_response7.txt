```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:

    # Calculate the total demand
    total_demand = demands.sum()
    # Scale demands to the range [0, 1]
    scaled_demands = demands / demands.max()
    # Normalize the distance matrix by the total demand
    normalized_distance_matrix = distance_matrix / total_demand
    # Combine the normalized distances and scaled demands using element-wise subtraction
    # to create a heuristic
    combined_heuristic = normalized_distance_matrix - scaled_demands
    # Invert the sign to get negative values for undesirable edges
    return -combined_heuristic
```
