```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Calculate cumulative demand for each node
    cumulative_demand = demands.cumsum(0)
    # Calculate the difference between cumulative demand and vehicle capacity
    capacity = 1.0  # Assuming the vehicle capacity is 1 for normalization
    demand_diff = (cumulative_demand - capacity).clamp(min=0)
    # Normalize the demand difference and apply a non-linear transformation (e.g., logarithm)
    heuristic_values = -torch.abs(demand_diff) * torch.log(distance_matrix + 1e-8)  # Add a small constant to avoid log(0)
    return heuristic_values
```
