```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Calculate the total demand to normalize
    total_demand = demands.sum()
    
    # Normalize the demands to have the sum of all demands equal to the vehicle capacity
    normalized_demands = demands / total_demand
    
    # Compute the potential for each edge based on distance and demand
    epsilon = 1e-8  # Small positive constant to avoid division by zero
    edge_potential = (1 / (distance_matrix + epsilon)) * normalized_demands
    
    # Apply a sigmoid function to ensure that the heuristics values are within a certain range
    # and to emphasize distance and demand directly
    sigmoid = torch.sigmoid(50 * edge_potential)
    
    return sigmoid
```
