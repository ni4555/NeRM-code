```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    import torch
    import numpy as np

    # Calculate the minimum distance from each customer to the depot
    min_distances = torch.min(distance_matrix[:, 1:], dim=0)[0]

    # Calculate the maximum distance from each customer to the depot
    max_distances = torch.max(distance_matrix[:, 1:], dim=0)[0]

    # Calculate the average demand for all customers
    average_demand = torch.mean(demands[1:])

    # Calculate the heuristic values based on the minimum and maximum distances
    # and the average demand
    heuristic_values = -torch.abs(min_distances - max_distances) - average_demand * (demands[1:] - demands[1:].mean())

    # Normalize the heuristic values to be between 0 and 1
    max_value = torch.max(heuristic_values)
    min_value = torch.min(heuristic_values)
    normalized_values = (heuristic_values - min_value) / (max_value - min_value)

    return normalized_values
```
