```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    # Calculate the normalized demands
    normalized_demands = demands / demands.sum()
    # Compute the heuristics matrix using a modified Dijkstra's heuristic
    heuristics_matrix = distance_matrix.clone()
    for i in range(1, n):
        for j in range(i):
            heuristics_matrix[i][j] = distance_matrix[i][j] + \
                (distance_matrix[i].max() - distance_matrix[j].max()) * demands[i]
    return heuristics_matrix
```
