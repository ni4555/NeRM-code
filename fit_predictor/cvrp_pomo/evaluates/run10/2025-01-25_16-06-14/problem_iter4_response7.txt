```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Calculate cumulative demand for each node
    cumulative_demand = demands.cumsum(0)
    # Calculate the normalized cumulative demand for each edge
    edge_demand = (cumulative_demand - demands[:, None]).clamp(min=0) / cumulative_demand
    # Calculate heuristic values based on normalized edge demand and inverse distance
    heuristic_values = -edge_demand * (1 / (distance_matrix + 1e-5))
    return heuristic_values
```
