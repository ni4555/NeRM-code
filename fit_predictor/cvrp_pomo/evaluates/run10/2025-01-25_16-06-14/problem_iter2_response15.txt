```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Subtract demand from each node's row to create a matrix with differences
    demand_diff_matrix = distance_matrix - demands[:, None]
    # Ensure negative differences are zero (indicating feasible demand without exceeding capacity)
    demand_diff_matrix = demand_diff_matrix.clamp(min=0)
    # Multiply by the negative of the original distance matrix to give positive heuristic values
    heuristic_values = -demand_diff_matrix * distance_matrix
    return heuristic_values
```
