```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Calculate the total demand for each node
    total_demand = demands.cumsum(0)
    # Calculate the cumulative capacity, assuming each vehicle's capacity is 1
    total_capacity = torch.arange(1, demands.size(0) + 1).cumsum(0)
    # Calculate the penalty for exceeding the capacity
    penalty = (total_demand - total_capacity).clamp(min=0)
    # Normalize the penalty to get a heuristic value
    heuristic_values = -distance_matrix * penalty
    return heuristic_values
```
