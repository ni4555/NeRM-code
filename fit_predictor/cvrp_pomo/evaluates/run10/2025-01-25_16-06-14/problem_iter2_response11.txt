```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    """An improved heuristic that considers the interaction between demand and distance, while normalizing inputs."""
    total_demand = demands.sum()
    demand_factor = demands / total_demand
    distance_factor = 1 / (distance_matrix + 1e-5)  # Add a small constant to avoid division by zero
    # Calculate the heuristic based on the product of the factors, weighted by distance
    heuristic_matrix = distance_factor * (demand_factor * distance_matrix)
    return -heuristic_matrix
```
