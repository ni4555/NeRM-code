```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Normalize the distance matrix by the total demand
    total_demand = demands.sum()
    normalized_distance_matrix = distance_matrix / (total_demand + 1e-8)
    # Create a matrix of negative values
    negative_matrix = -normalized_distance_matrix
    # Subtract a scaled value from the demand to penalize higher demands
    scaled_demand = demands * torch.sigmoid(0.1 * (demands - demands.mean()))
    # Combine the distance and scaled demand to create the heuristic
    heuristic_matrix = negative_matrix - scaled_demand
    return heuristic_matrix
```
