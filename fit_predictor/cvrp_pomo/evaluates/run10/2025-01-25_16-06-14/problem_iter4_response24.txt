```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Calculate the total demand for each node
    total_demand = demands.cumsum(0)
    # Calculate the difference between total demand and vehicle capacity
    demand_diff = (total_demand - demands[:, None]).clamp(min=0)
    # Normalize the demand difference to get a heuristic value
    heuristic_values = -distance_matrix * demand_diff
    # Invert the sign to make higher demand differences more desirable
    heuristic_values = -heuristic_values
    # Ensure that edges connecting to nodes with zero demand are not considered
    heuristic_values[heuristic_values <= 0] = 0
    return heuristic_values
```
