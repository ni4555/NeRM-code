```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    """Improved heuristic that considers demand proximity and distance synergy."""
    vehicle_capacity = demands.sum()
    # Normalize demands to sum to 1 to avoid normalization issues
    demands = demands / demands.sum()
    # Promote edges based on the difference between node's demand and vehicle's normalized capacity
    demand_diff = -torch.abs(2 * (demands - 0.5))
    # Promote edges with lower distances
    distance_weight = 0.5 * distance_matrix
    # Combine demand proximity and distance synergy with a weighted sum
    return demand_diff + distance_weight
```
