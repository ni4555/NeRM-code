```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    total_capacity = demands.sum()
    cumulative_demand = torch.cumsum(demands, dim=0)
    distance_penalty = -torch.log1p(torch.abs(distance_matrix) - 1e-8)
    demand_penalty = -torch.abs(cumulative_demand - total_capacity) * 10
    heuristics = distance_penalty * (1 - (cumulative_demand / total_capacity))
    heuristics += demand_penalty.unsqueeze(1)
    return heuristics
```
