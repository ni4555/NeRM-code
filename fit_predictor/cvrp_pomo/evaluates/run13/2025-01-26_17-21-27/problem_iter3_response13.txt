```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    total_capacity = demands.sum()
    demand_thresholds = (demands.cumsum() < total_capacity).float()
    capacity_penalty = (1 - demand_thresholds).unsqueeze(1) * demand_thresholds.unsqueeze(0)
    demand_distance_interaction = (demands.unsqueeze(1) * distance_matrix.unsqueeze(0)).sum(2)
    heuristic_values = capacity_penalty + demand_distance_interaction
    return heuristic_values
```
