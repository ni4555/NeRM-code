```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    total_capacity = demands.sum()
    cumulative_demand = torch.cumsum(demands, dim=0)
    demand_weight = demands / (total_capacity + 1e-8)
    distance_weight = distance_matrix / (torch.max(distance_matrix) + 1e-8)
    heuristics = demand_weight * distance_weight
    heuristics = heuristics - torch.max(heuristics)  # Normalize heuristics to be non-positive
    return heuristics
```
