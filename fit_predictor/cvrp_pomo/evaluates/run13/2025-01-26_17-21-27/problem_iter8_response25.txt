```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    total_capacity = demands.sum()
    cumulative_demand = torch.cumsum(demands, dim=0)
    demand_penalty = torch.min(torch.abs(demands), dim=0)[0] ** 2 * (-cumulative_demand / (total_capacity + 1e-8))
    distance_scaling = torch.log1p(torch.abs(distance_matrix) - 1e-8)
    heuristics = distance_scaling + demand_penalty - (demands / (total_capacity + 1e-8)) ** 2
    return heuristics
```
