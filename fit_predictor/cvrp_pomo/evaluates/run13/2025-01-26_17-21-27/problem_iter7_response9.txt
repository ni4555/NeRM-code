```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    total_capacity = demands.sum()
    cumulative_demand = torch.cumsum(demands, dim=0)
    demand_penalty = torch.clamp(-torch.min(torch.abs(demands), dim=0)[0], min=0, max=1)
    distance_scaling = torch.sqrt(torch.abs(distance_matrix) - 1e-8)
    heuristics = distance_scaling * (1 + cumulative_demand * demand_penalty - demands * total_capacity)
    return heuristics
```
