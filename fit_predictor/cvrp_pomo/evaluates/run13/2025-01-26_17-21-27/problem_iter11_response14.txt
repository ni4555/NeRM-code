```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    total_capacity = demands.sum()
    normalized_demands = (demands / total_capacity).unsqueeze(1).repeat(1, n)
    normalized_distance = (distance_matrix / torch.max(distance_matrix)).unsqueeze(0).repeat(n, 1)
    balance_factor = torch.relu(-torch.log1p(1 - normalized_demands - normalized_distance))
    heuristics = balance_factor
    return heuristics
```
