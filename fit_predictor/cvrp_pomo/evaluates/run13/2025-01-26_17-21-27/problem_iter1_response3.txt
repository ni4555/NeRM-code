```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    """A heuristic that considers the demand and distance to prioritize edges."""
    # Calculate the total demand for each node
    total_demand = demands.sum(dim=0)
    # Normalize the total demand to the vehicle capacity
    normalized_demand = total_demand / demands[0]
    # Calculate the heuristic based on the distance and normalized demand
    heuristic = -distance_matrix + normalized_demand
    return heuristic
```
