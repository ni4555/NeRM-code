```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    total_capacity = demands.sum()
    cumulative_demand = torch.cumsum(demands, dim=0)
    distance_penalty = distance_matrix / (1 + torch.log1p(torch.abs(distance_matrix)))
    capacity_penalty = (cumulative_demand * total_capacity).exp()
    heuristics = (1 / (distance_penalty + capacity_penalty))
    return heuristics
```
