```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Initialize the heuristics matrix with zeros
    heuristics = torch.zeros_like(distance_matrix)
    
    # Calculate the cumulative demand matrix
    cumulative_demand = torch.cumsum(demands, dim=0)
    
    # Calculate the cumulative distance matrix
    cumulative_distance = torch.cumsum(distance_matrix, dim=0)
    
    # Calculate the potential cost of visiting nodes in sequence
    potential_costs = cumulative_demand * cumulative_distance
    
    # Subtract the potential cost from the distance matrix to get the heuristics
    heuristics = distance_matrix - potential_costs
    
    # Add small positive values to ensure that all edges have positive heuristics
    heuristics = torch.clamp(heuristics, min=1e-10)
    
    return heuristics
```
