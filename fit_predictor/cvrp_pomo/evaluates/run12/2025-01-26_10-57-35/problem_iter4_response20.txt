```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    total_demand = demands.sum()
    sum_of_demands = torch.sum(demands[:, None] + demands[None, :], dim=0)
    inverse_distance = 1 / (distance_matrix + 1e-8)
    heuristics = (sum_of_demands * inverse_distance) * (1 - demands)
    heuristics[heuristics < 0] = 0
    return heuristics
```
