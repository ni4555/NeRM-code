```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    sum_of_demands = torch.sum(demands[:, None] + demands[None, :], dim=0)
    inverse_distance = 1 / (distance_matrix + 1e-8)
    combined_weights = sum_of_demands * inverse_distance
    normalized_heuristics = combined_weights / combined_weights.max() + 1e-8
    return normalized_heuristics
```
