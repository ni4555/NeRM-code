```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Calculate the normalized distances
    norm_distances = distance_matrix / distance_matrix.max()
    
    # Calculate the vehicle load increment for each edge
    load_increments = (demands[1:] - demands[:-1])
    
    # Calculate the cumulative load normalized by the total capacity
    cumulative_loads = torch.cumsum(load_increments, dim=0) / demands.sum()
    
    # Calculate the heuristics as the difference between cumulative load and normalized distance
    heuristics = cumulative_loads - norm_distances
    
    return heuristics
```
