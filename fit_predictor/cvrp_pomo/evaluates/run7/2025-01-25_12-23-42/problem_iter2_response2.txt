```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    demands = demands.unsqueeze(1)  # Ensure demands is a 2D tensor for broadcasting
    norm_distances = distance_matrix / distance_matrix.max()  # Normalize distances
    vehicle_loads = (demands / demands.sum()).unsqueeze(-1) * norm_distances  # Calculate vehicle loads
    heuristics = vehicle_loads.sum(-1) + norm_distances  # Combine vehicle loads and distances
    return heuristics
```
