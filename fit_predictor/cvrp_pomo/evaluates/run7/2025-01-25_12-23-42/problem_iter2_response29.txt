```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    demand_sum = demands.sum()
    demand_diff = demands - demands.mean()  # Difference from the average demand

    # Calculate the squared distances
    distance_squared = distance_matrix ** 2

    # Calculate the negative squared distance multiplied by the maximum demand and the demand difference
    heuristic = -distance_squared * torch.clamp(torch.abs(demand_diff), min=0, max=demand_sum / n)

    return heuristic
```
