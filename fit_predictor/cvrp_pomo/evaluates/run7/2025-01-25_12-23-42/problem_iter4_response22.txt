```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    demand_threshold = demands.mean()
    avoid_revisit_penalty = (distance_matrix == 0).float()
    distance_penalty = -torch.log(1 + distance_matrix)
    load_balance = (demands / demand_threshold).clamp(min=1)
    heuristics = distance_penalty * avoid_revisit_penalty * load_balance
    return heuristics
```
