```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    # Calculate the normalized demands
    normalized_demands = demands / demands.sum()
    # Compute the heuristics matrix using a combination of max-min approach and normalized demands
    max_dist = distance_matrix.max()
    min_dist = distance_matrix.min()
    heuristics_matrix = max_dist - (distance_matrix - min_dist) / (max_dist - min_dist)
    heuristics_matrix = heuristics_matrix * normalized_demands.unsqueeze(1)
    return heuristics_matrix
```
