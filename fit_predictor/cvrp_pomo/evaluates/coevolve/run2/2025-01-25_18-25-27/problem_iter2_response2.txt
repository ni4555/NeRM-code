```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    # Normalize demands
    normalized_demands = demands / demands.sum()
    # Expand dimensions to match matrix multiplication requirements
    normalized_demands = normalized_demands[:, None]
    # Compute the heuristics matrix
    heuristics_matrix = distance_matrix - (normalized_demands * distance_matrix.sum(axis=1, keepdim=True)) * (1 - torch.exp(-distance_matrix))
    return heuristics_matrix
```
