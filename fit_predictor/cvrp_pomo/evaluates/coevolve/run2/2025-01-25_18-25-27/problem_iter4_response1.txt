```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    # Normalize demands
    total_demand = demands.sum()
    normalized_demands = demands / total_demand
    # Calculate the average distance per customer
    avg_distance_per_customer = distance_matrix.sum() / (n - 1)
    # Compute the heuristics matrix
    heuristics_matrix = distance_matrix - (normalized_demands * distance_matrix.sum(axis=1, keepdim=True)) - avg_distance_per_customer
    return heuristics_matrix
```
