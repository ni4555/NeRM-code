```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    # Calculate the normalized demands
    normalized_demands = demands / demands.sum()
    # Compute the heuristics matrix
    heuristics_matrix = distance_matrix - (normalized_demands * distance_matrix.sum(axis=1, keepdim=True))
    # Apply a perturbation to introduce diversity in the early stages of the evolutionary process
    heuristics_matrix = heuristics_matrix - torch.rand_like(heuristics_matrix) * 0.01
    return heuristics_matrix
```
