```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    # Calculate the normalized demands
    normalized_demands = demands / demands.sum()
    # Compute the heuristics matrix
    demand_influence = (normalized_demands * distance_matrix.sum(axis=1, keepdim=True))
    heuristics_matrix = torch.log1p(torch.exp(distance_matrix - demand_influence))
    return heuristics_matrix
```
