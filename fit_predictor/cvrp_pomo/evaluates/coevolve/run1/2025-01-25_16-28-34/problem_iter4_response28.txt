```python
import torch

def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.shape[0]
    total_capacity = demands.sum()
    edge_demand_sum = (demands[:, None] + demands[None, :]) * distance_matrix
    average_demand_per_edge = edge_demand_sum / (distance_matrix ** 2)
    adjusted_average_demand = average_demand_per_edge / total_capacity
    heuristics = (adjusted_average_demand - 1) * (distance_matrix != 0)
    heuristics[distance_matrix == 0] = 0
    return heuristics
```
