```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate utility based on prize per unit weight
    utility = prize / np.sum(weight, axis=1)
    # Calculate the sparsity of each item
    sparsity = (np.sum(weight, axis=1) < 2)  # Considering 2 as the threshold for sparsity
    # Define weights for utility and sparsity
    utility_weight = 0.7
    sparsity_weight = 0.3
    # Combine utility and sparsity with custom weights
    heuristics = utility_weight * utility + sparsity_weight * sparsity
    # Normalize the heuristics to sum to 1
    heuristics /= np.sum(heuristics)
    return heuristics
```
