```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n = prize.shape[0]

    # Calculate normalized prize per unit weight for each item
    density = prize / np.sum(weight, axis=1)

    # Calculate normalized sparsity
    sparsity = np.sum(weight, axis=1) / (np.maximum(np.sum(weight, axis=1), 1e-8))

    # Calculate a diversity factor based on the variance of the density
    diversity_factor = density / np.var(density)

    # Combine the density and sparsity into a single heuristic value, weighted by diversity
    heuristic_value = density * (1 - sparsity) * diversity_factor

    # Normalize the heuristic values to sum to 1
    heuristic_value /= np.sum(heuristic_value)

    return heuristic_value
```
