```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Initialize the heuristic array
    heuristic = np.zeros_like(prize)
    
    # Calculate the ratio of prize to the total weight in each dimension
    ratio = prize / np.sum(weight, axis=1)
    
    # Calculate the diversity factor based on the variance of the ratios
    diversity_factor = np.var(ratio)
    
    # Calculate the sum of weights to penalize heavier items
    weight_sum = np.sum(weight, axis=1)
    
    # Create a heuristic by combining the ratio, diversity, and weight sum
    heuristic = ratio * diversity_factor - weight_sum
    
    # Normalize the heuristic to ensure all values are positive
    max_heuristic = np.max(heuristic)
    if max_heuristic > 0:
        heuristic /= max_heuristic
    
    # Avoid zero heuristic values by adding a small epsilon
    heuristic += 1e-8
    
    return heuristic
```
