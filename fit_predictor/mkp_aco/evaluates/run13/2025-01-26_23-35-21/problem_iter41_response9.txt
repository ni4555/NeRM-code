```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Initialize heuristics to zero
    heuristics = np.zeros_like(prize)
    
    # Iterate over each item
    for i in range(len(prize)):
        # Calculate normalized density
        density = prize[i] / np.sum(weight[i] + 1e-8)
        
        # Calculate normalized sparsity
        sparsity = np.sum(weight[i]) / np.max(weight[i] + 1e-8)
        
        # Introduce randomness
        random_factor = np.random.rand()
        
        # Create a heuristic value combining density, sparsity, and randomness
        heuristic_value = density * (1 - sparsity) + random_factor
        
        # Normalize by the maximum density
        normalized_heuristic = heuristic_value / (np.max(density) + 1e-8)
        
        # Set the heuristic value for the current item
        heuristics[i] = normalized_heuristic
    
    return heuristics
```
