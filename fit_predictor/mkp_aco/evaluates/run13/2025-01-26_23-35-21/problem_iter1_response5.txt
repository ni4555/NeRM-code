```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the ratio of prize to total weight for each item
    ratio = prize / np.sum(weight, axis=1)
    # Calculate the sum of weights for each item
    sum_weight = np.sum(weight, axis=1)
    # Calculate the sparsity based on a threshold
    sparsity_threshold = 0.5
    sparsity = (sum_weight < sparsity_threshold) * 1.0
    # Combine the ratio and sparsity, with sparsity having a higher weight
    heuristics = ratio * 0.7 + sparsity * 0.3
    # Replace all negative values with zero
    heuristics[heuristics < 0] = 0
    return heuristics
```
