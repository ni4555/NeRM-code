```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Initialize an empty array to hold the heuristics
    heuristics = np.zeros_like(prize)

    # For each item, calculate a heuristic based on its value-to-weight ratio
    for i in range(prize.shape[0]):
        if weight[i].sum() > 0:  # Skip items that are not valid
            heuristics[i] = prize[i] / weight[i].sum()

    # Sort items by heuristic value in descending order
    sorted_indices = np.argsort(-heuristics)

    # Initialize a counter for how many items can be included
    included_items = 0

    # Loop through sorted items and include those that fit in the knapsack
    for index in sorted_indices:
        if np.sum(weight[index]) <= 1:
            heuristics[index] = 1
            included_items += 1

    # If there are items that were not included, set their heuristic to 0
    heuristics[sorted_indices[included_items:]] = 0

    return heuristics
```
