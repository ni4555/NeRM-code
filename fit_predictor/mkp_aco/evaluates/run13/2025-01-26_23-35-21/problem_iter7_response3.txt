```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the density of each item (prize/weight)
    density = prize / np.sum(weight, axis=1)
    
    # Calculate the diversity based on the standard deviation of weights
    diversity = np.std(weight, axis=1)
    
    # Combine density and diversity to create a heuristic value
    heuristic_value = density * diversity
    
    # Normalize by the maximum heuristic value
    normalized_heuristic = heuristic_value / (np.max(heuristic_value) + 1e-8)
    
    # Set the lowest values to zero to sparsify the heuristics
    normalized_heuristic[normalized_heuristic < np.min(normalized_heuristic)] = 0
    
    return normalized_heuristic
```
