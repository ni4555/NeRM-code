```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the density of each item (prize/weight)
    density = prize / np.sum(weight, axis=1)
    # Calculate the diversity of each item (1 / sum of each dimension's weight)
    diversity = 1 / np.sum(weight, axis=1)
    # Combine density and diversity to form a utility score
    utility = density * diversity
    # Sparsify by applying a threshold based on the overall average utility
    threshold = np.mean(utility)
    # Set elements below the threshold to zero, to encourage selecting higher utility items
    heuristics = np.where(utility >= threshold, utility, 0)
    return heuristics
```
