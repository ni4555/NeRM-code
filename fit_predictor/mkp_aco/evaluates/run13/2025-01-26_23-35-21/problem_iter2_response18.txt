```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the ratio of prize to total weight for each item
    ratio = prize / np.sum(weight, axis=1)
    
    # Calculate the sparsity based on a threshold for each dimension
    sparsity_threshold = 0.5
    sparsity = np.all(weight < sparsity_threshold, axis=1)
    
    # Normalize the prize to the maximum prize value
    normalized_prize = prize / np.max(prize)
    
    # Combine the normalized prize, ratio, and sparsity
    # The normalized prize is given a higher weight as it represents the item's value
    heuristics = normalized_prize * 0.6 + ratio * 0.3 + (sparsity * 0.1)
    
    # Ensure the heuristics are in the range [0, 1]
    heuristics = np.clip(heuristics, 0, 1)
    
    return heuristics
```
