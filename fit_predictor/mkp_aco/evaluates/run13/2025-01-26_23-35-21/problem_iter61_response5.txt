```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the normalized prize-to-weight ratio
    prize_to_weight_ratio = prize / np.sum(weight, axis=1)
    
    # Calculate the sparsity of the item
    sparsity = np.sum(weight, axis=1) / np.max(weight, axis=1)
    
    # Introduce a randomness factor to avoid local optima
    random_factor = np.random.rand(weight.shape[0])
    
    # Integrate the factors to form the heuristic
    heuristic = prize_to_weight_ratio / (1 + sparsity) * random_factor
    
    # Normalize the heuristic to sum to 1
    heuristic /= np.sum(heuristic)
    
    # Ensure that the heuristic for items with zero total weight is zero
    heuristic[weight.sum(axis=1) == 0] = 0
    
    return heuristic
```
