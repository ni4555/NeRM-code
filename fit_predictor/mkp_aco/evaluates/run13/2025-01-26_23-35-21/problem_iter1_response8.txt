```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the ratio of prize to total weight for each item
    ratio = prize / np.sum(weight, axis=1)
    
    # Adjust heuristics based on item-specific sparsity and diversity
    item_sparsity = (weight == 0).sum(axis=1)
    diversity = np.prod(weight, axis=1)
    
    # Combine factors to create a weighted heuristic
    heuristics = (ratio * (1 - item_sparsity) * diversity)
    
    # Set low heuristics values to zero
    heuristics[heuristics < np.median(heuristics)] = 0
    
    return heuristics
```
