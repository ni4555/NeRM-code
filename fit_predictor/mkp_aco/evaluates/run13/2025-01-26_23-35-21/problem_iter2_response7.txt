```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the ratio of prize to total weight for each item
    ratio = prize / np.sum(weight, axis=1)
    # Calculate the sum of weights for each item
    sum_weight = np.sum(weight, axis=1)
    # Calculate the sparsity based on a threshold
    sparsity_threshold = 0.5
    sparsity = (sum_weight < sparsity_threshold) * 1.0
    # Calculate diversity based on the number of non-zero weights
    diversity = (weight != 0).sum(axis=1) / weight.shape[1]
    # Combine factors to create a weighted heuristic
    heuristics = ratio * 0.6 + sparsity * 0.2 + diversity * 0.2
    # Replace all negative values with zero
    heuristics[heuristics < 0] = 0
    return heuristics
```
