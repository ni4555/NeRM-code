```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the density of each item (prize/weight)
    density = prize / np.sum(weight, axis=1)
    
    # Calculate the average sparsity of each item
    sparsity = np.sum(weight, axis=1) / np.mean(weight, axis=1)
    
    # Consider diversity by blending density and sparsity with a weighted sum
    heuristic_value = 0.6 * density + 0.4 * sparsity
    
    # Manage sparsity by setting a threshold below which heuristic value is zero
    threshold = np.mean(heuristic_value) * 0.5
    heuristic_value[heuristic_value < threshold] = 0
    
    # Normalize by the maximum heuristic value
    normalized_heuristic = heuristic_value / (np.max(heuristic_value) + 1e-8)
    
    return normalized_heuristic
```
