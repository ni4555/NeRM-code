```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the density of each item (prize/weight)
    density = prize / np.sum(weight, axis=1)
    
    # Calculate the sparsity of each item
    sparsity = np.sum(weight, axis=1) / np.max(weight, axis=1)
    
    # Blend density and sparsity with a weighted sum to create a heuristic value
    heuristic_value = (0.6 * density) + (0.4 * (1 - sparsity))
    
    # Normalize by the maximum heuristic value
    normalized_heuristic = heuristic_value / (np.max(heuristic_value) + 1e-8)
    
    # Apply a threshold to manage sparsity and diversity
    threshold = np.mean(normalized_heuristic)
    normalized_heuristic[normalized_heuristic < threshold] = 0
    
    return normalized_heuristic
```
