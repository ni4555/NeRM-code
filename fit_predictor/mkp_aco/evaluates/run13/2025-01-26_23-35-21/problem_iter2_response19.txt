```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the normalized prize value
    normalized_prize = prize / np.sum(prize)
    # Calculate the overall sparsity factor based on the maximum weight
    overall_sparsity = np.max(np.sum(weight, axis=1))
    # Calculate the sparsity factor for each item
    sparsity_factor = 1 - (np.sum(weight, axis=1) / overall_sparsity)
    # Combine normalized prize value and sparsity factor
    heuristics = normalized_prize * sparsity_factor
    # Set unpromising elements to zero
    heuristics[heuristics < 0.1] = 0
    return heuristics
```
