```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Prune dominated items
    dominated_items = np.where(np.all(weight[:, 1:] > weight[:, :-1], axis=1))[0]
    prize[dominated_items] = 0
    
    # Normalize prize and weight
    max_prize = np.max(prize)
    max_weight = np.max(np.sum(weight, axis=1))
    prize /= max_prize
    weight /= max_weight
    
    # Calculate heuristic based on normalized prize and weight
    heuristic = prize / np.sum(weight, axis=1)
    
    # Introduce randomness for diversity
    random_factor = np.random.rand(len(heuristic))
    heuristic += random_factor * 0.1
    
    # Normalize heuristic to ensure all values are positive
    min_heuristic = np.min(heuristic)
    heuristic -= min_heuristic
    
    return heuristic
```
