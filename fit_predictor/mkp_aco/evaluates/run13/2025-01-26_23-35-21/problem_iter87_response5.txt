```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:

    # Calculate the normalized density
    density = prize / (np.sum(weight, axis=1) + 1e-8)
    
    # Prune dominated items by considering only those with higher density
    density[density < np.max(density) / 2] = 0
    
    # Normalize the density
    normalized_density = density / np.sum(density)
    
    # Introduce randomness to explore a diverse set of items
    random_factor = np.random.rand(len(density))
    
    # Prune dominated items based on randomness
    dominated_indices = np.argsort(-normalized_density)[np.argsort(random_factor) > np.sum(normalized_density) / 2]
    normalized_density[dominated_indices] = 0
    
    # Normalize by the maximum density
    normalized_density = normalized_density / np.max(normalized_density)
    
    return normalized_density
```
