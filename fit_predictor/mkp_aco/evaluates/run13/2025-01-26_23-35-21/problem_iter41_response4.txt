```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Initialize a heuristic array with zeros
    heuristic = np.zeros_like(prize)

    # Sample items based on a probabilistic approach
    for i in range(weight.shape[0]):
        # Calculate the probability of selecting an item based on its density
        density = prize[i] / np.sum(weight[i])
        # Sample with replacement, but avoid selecting the same item twice
        if np.random.rand() < density:
            heuristic[i] = 1

    # Normalize the heuristic values
    heuristic /= np.sum(heuristic)

    return heuristic
```
