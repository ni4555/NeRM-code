```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:

    # Normalize prize by the maximum prize value
    normalized_prize = prize / np.max(prize)
    
    # Calculate the normalized sum of weights
    normalized_weight_sum = np.sum(weight, axis=1) / np.max(np.sum(weight, axis=1))
    
    # Calculate the normalized sum of minima of weights for each item
    min_weight_sum = np.min(weight, axis=1)
    normalized_min_weight_sum = min_weight_sum / np.max(min_weight_sum)
    
    # Create a heuristic based on the ratio of normalized prize to normalized weight sum
    heuristic_value = normalized_prize / (normalized_weight_sum + 1e-8)
    
    # Introduce a penalty for items with small minimum weight sum to encourage diversity
    penalty_factor = 1 - normalized_min_weight_sum
    
    # Adjust the heuristic to account for diversity
    heuristic = heuristic_value * penalty_factor
    
    # Normalize by the maximum heuristic value
    normalized_heuristic = heuristic / (np.max(heuristic) + 1e-8)
    
    return normalized_heuristic
```
