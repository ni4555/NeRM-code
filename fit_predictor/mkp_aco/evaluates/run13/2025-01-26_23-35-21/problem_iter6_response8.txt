```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the density of each item (prize/weight)
    density = prize / np.sum(weight, axis=1)
    # Calculate the sparsity of each item (1 / sum of each dimension's weight)
    sparsity = 1 / np.sum(weight, axis=1)
    # Introduce diversity by considering the standard deviation
    std_dev = np.std(weight, axis=1)
    diversity_factor = 1 / (1 + std_dev)
    # Combine density, sparsity, and diversity to form a utility score
    utility = density * sparsity * diversity_factor
    # Normalize the utility scores to sum to 1
    utility /= np.sum(utility)
    return utility
```
