[*] Running ...
[*] Dataset loaded: E:\Projects\CO\reevo-main/problems/mkp_aco\dataset/train100_dataset.npz with 5 instances.
[*] Instance 0: 11.180631107116064
[*] Instance 1: 17.96446592323538
[*] Instance 2: 16.289335688396537
[*] Instance 3: 10.962026243879293
D:\Anaconda3\envs\reevo\Lib\site-packages\numpy\core\fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
D:\Anaconda3\envs\reevo\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
Traceback (most recent call last):
  File "E:\Projects\CO\reevo-main/problems/mkp_aco/eval.py", line 58, in <module>
    obj = solve(prize, weight)
          ^^^^^^^^^^^^^^^^^^^^
  File "E:\Projects\CO\reevo-main/problems/mkp_aco/eval.py", line 27, in solve
    obj, _ = aco.run(N_ITERATIONS)
             ^^^^^^^^^^^^^^^^^^^^^
  File "D:\Anaconda3\envs\reevo\Lib\site-packages\torch\utils\_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "E:\Projects\CO\reevo-main\problems\mkp_aco\aco.py", line 50, in run
    sols = self.gen_sol() # (n_ants, max_horizon)
           ^^^^^^^^^^^^^^
  File "E:\Projects\CO\reevo-main\problems\mkp_aco\aco.py", line 92, in gen_sol
    items = self.pick_item(mask, dummy_mask)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\Projects\CO\reevo-main\problems\mkp_aco\aco.py", line 103, in pick_item
    dist = Categorical(dist)
           ^^^^^^^^^^^^^^^^^
  File "D:\Anaconda3\envs\reevo\Lib\site-packages\torch\distributions\categorical.py", line 72, in __init__
    super().__init__(batch_shape, validate_args=validate_args)
  File "D:\Anaconda3\envs\reevo\Lib\site-packages\torch\distributions\distribution.py", line 71, in __init__
    raise ValueError(
ValueError: Expected parameter probs (Tensor of shape (10, 101)) of distribution Categorical(probs: torch.Size([10, 101])) to satisfy the constraint Simplex(), but found invalid values:
tensor([[nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        ...,
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan]], dtype=torch.float64)
