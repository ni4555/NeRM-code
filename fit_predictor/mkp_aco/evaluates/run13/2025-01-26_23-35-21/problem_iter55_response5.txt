```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Initialize the heuristic array with the sum of weights
    heuristic = np.sum(weight, axis=1)
    
    # Prune dominated items by removing items with a lower prize-to-weight ratio than the average
    average_ratio = np.mean(prize / np.sum(weight, axis=1))
    heuristic[prize / np.sum(weight, axis=1) < average_ratio] = 0
    
    # Introduce randomness by adding a small random value to all non-pruned items
    random_factor = np.random.rand(len(prize))
    heuristic[heuristic != 0] += random_factor[heuristic != 0]
    
    # Normalize the heuristic values
    heuristic = heuristic / np.sum(heuristic)
    
    # Ensure no zero weights result in zero heuristic by setting them to a small value
    heuristic[weight_sum < 1e-8] = 1e-8
    
    return heuristic
```
