```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the profit to weight ratio for each item
    profit_to_weight_ratio = prize / np.sum(weight, axis=1)
    
    # Calculate the variance of weights within each item
    variance = np.var(weight, axis=1)
    
    # Combine the ratio with the inverse of the variance
    combined_factor = profit_to_weight_ratio / (variance + 1e-6)
    
    # Sparsify the heuristics by setting a threshold
    threshold = np.max(combined_factor) * 0.1
    heuristics = np.where(combined_factor > threshold, combined_factor, 0)
    
    return heuristics
```
