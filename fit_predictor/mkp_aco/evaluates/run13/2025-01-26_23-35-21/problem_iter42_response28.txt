```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n = prize.shape[0]

    # Normalize prize by sum of weights to ensure it's comparable across items
    normalized_prize = prize / np.sum(weight, axis=1)

    # Normalize weights to have a sum of 1 for each item
    normalized_weight = weight / np.sum(weight, axis=1)

    # Calculate the heuristic based on the normalized prize
    heuristic_value = normalized_prize * (1 - np.sum(normalized_weight, axis=1))

    # Introduce a diversity factor by using the variance of the normalized prize
    diversity_factor = np.var(normalized_prize)

    # Adjust the heuristic by the diversity factor
    heuristic = heuristic_value * (1 / diversity_factor)

    # Normalize the heuristic to sum to 1
    heuristic /= np.sum(heuristic)

    return heuristic
```
