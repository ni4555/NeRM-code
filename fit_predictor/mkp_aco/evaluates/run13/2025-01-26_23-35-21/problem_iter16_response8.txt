```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Normalize the prize to scale values between 0 and 1
    normalized_prize = prize / np.max(prize)
    # Normalize the weights to get the density of items
    normalized_weight = np.sum(weight, axis=1) / np.max(np.sum(weight, axis=1))
    # Calculate the utility as a product of normalized prize and normalized weight
    utility = normalized_prize * normalized_weight
    # Normalize the utility to ensure values are comparable and between 0 and 1
    utility = utility / np.max(utility)
    # Ensure no zero values to maintain selectivity
    utility = np.clip(utility, np.finfo(float).eps, None)
    return utility
```
