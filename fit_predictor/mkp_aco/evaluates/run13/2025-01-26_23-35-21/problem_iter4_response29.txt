```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the ratio of prize to total weight for each item
    ratio = prize / np.sum(weight, axis=1)
    # Normalize the prize values to balance weight and value
    normalized_prize = prize / np.sum(prize)
    # Calculate sparsity based on a threshold
    sparsity_threshold = 0.5
    sparsity = (np.sum(weight, axis=1) < sparsity_threshold) * 1.0
    # Apply non-negativity constraint to ensure heuristic values are positive
    heuristics = np.clip(normalized_prize * 0.6 + ratio * 0.3 + sparsity * 0.1, 0, None)
    return heuristics
```
