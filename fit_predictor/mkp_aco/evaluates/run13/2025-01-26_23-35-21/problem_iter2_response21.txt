```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the ratio of prize to total weight for each item
    ratio = prize / np.sum(weight, axis=1)
    # Calculate the sparsity based on a threshold
    sparsity_threshold = 0.5
    sparsity = (np.sum(weight, axis=1) < sparsity_threshold) * 1.0
    # Calculate the efficiency of each item based on its weight
    efficiency = np.sum(weight, axis=1) / np.sum(weight)
    # Combine the ratio, sparsity, and efficiency, giving higher weight to efficiency
    heuristics = ratio * 0.4 + sparsity * 0.3 + efficiency * 0.3
    # Ensure the heuristics values are between 0 and 1
    heuristics = np.clip(heuristics, 0, 1)
    return heuristics
```
