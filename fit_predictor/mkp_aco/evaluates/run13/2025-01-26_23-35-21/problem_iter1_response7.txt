```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the density of each item (prize/weight)
    density = prize / np.sum(weight, axis=1)
    
    # Calculate the diversity of each item (1 / sum of each dimension's weight)
    diversity = 1 / np.sum(weight, axis=1)
    
    # Combine density and diversity, and normalize by max value
    combined = (density + diversity) / (np.max(density + diversity) + 1e-8)
    
    # Set a threshold to sparsify the heuristics
    threshold = 0.5
    
    # Create heuristics array
    heuristics = np.where(combined >= threshold, combined, 0)
    
    return heuristics
```
