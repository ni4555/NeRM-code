```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    balance_factor = np.sum(weight, axis=1) / np.sum(weight, axis=1) ** 2
    cap_dominance = prize / np.max(prize)
    normalized_prize = prize / np.sum(prize)
    scaling_factor = np.linalg.norm(weight, axis=1) + 1e-8
    effective_sparsity = 1 / scaling_factor
    heuristics = (balance_factor * cap_dominance * normalized_prize * effective_sparsity)
    heuristics[heuristics < 0.1] = 0
    heuristics = heuristics / np.max(heuristics)
    return heuristics
```
