```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_per_weight = prize / np.sum(weight, axis=1)
    diversity_factor = np.sum(weight, axis=1) / (np.linalg.norm(weight, axis=1) + 1e-8)
    normalized_prize = prize / np.sum(prize)
    sparsity = 1 / (np.linalg.norm(weight, axis=1) + 1e-8)
    
    # Combine factors with appropriate scaling
    heuristic_score = value_per_weight * diversity_factor * normalized_prize * sparsity
    
    # Normalize the heuristic score to be in the range [0, 1]
    heuristic_score = (heuristic_score - np.min(heuristic_score)) / (np.max(heuristic_score) - np.min(heuristic_score))
    
    return heuristic_score
```
