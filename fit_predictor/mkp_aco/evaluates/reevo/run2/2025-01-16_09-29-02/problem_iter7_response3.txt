```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_per_weight = prize / np.sum(weight, axis=1)
    diversity_factor = np.sum(weight, axis=1) / np.linalg.norm(weight, axis=1)
    normalized_prize = prize / np.linalg.norm(prize)
    sparsity = 1 / np.linalg.norm(weight, axis=1)
    heuristics = value_per_weight * diversity_factor * normalized_prize * sparsity
    heuristics[heuristics < 0.01] = 0  # Sparsify the heuristics to promote sparsity
    heuristics = heuristics / np.max(heuristics)  # Normalize the heuristics to scale values
    return heuristics
```
