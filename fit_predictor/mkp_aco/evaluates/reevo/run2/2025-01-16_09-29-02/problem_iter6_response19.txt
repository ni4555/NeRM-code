```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_per_weight = prize / np.sum(weight, axis=1)
    diversity_factor = np.sum(weight, axis=1) / (np.sum(np.sqrt(weight**2), axis=1) + 1e-8)
    normalized_prize = prize / np.sum(prize)
    non_linear_scale = np.sqrt(value_per_weight)
    balance_factor = np.sum(weight, axis=1) / np.sqrt(np.sum(weight**2, axis=1) + 1e-8)
    heuristics = value_per_weight * diversity_factor * normalized_prize * non_linear_scale * balance_factor
    heuristics = np.clip(heuristics, 0.01, 1)  # Ensure non-negative and bounded heuristics
    return heuristics
```
