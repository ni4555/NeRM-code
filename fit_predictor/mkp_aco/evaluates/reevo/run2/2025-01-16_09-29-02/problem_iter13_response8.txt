```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    balance_factor = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)
    cap_dominance = prize / np.max(prize)
    normalized_weight = weight / np.sum(weight, axis=1)
    sparsity = 1 / (np.linalg.norm(weight, axis=1) + 1e-8)
    heuristics = (balance_factor * cap_dominance * normalized_weight * sparsity)
    sparsity_threshold = 0.1
    heuristics[heuristics < sparsity_threshold] = 0
    heuristics = heuristics / np.max(heuristics)
    return heuristics
```
