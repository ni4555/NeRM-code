```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_per_weight = prize / np.sum(weight, axis=1)
    diversity_factor = np.sum(weight, axis=1) / (np.linalg.norm(weight, axis=1) + 1e-8)
    normalized_prize = prize / np.sum(prize)
    sparsity = 1 / (np.linalg.norm(weight, axis=1) + 1e-8)
    utility = value_per_weight * diversity_factor * normalized_prize * sparsity
    
    # Prune outliers: remove items with a heuristic below a certain threshold
    sparsity_threshold = 0.1
    utility[utility < sparsity_threshold] = 0
    
    # Normalize utility scores to ensure that all values are on a comparable scale
    utility = utility / np.max(utility)
    
    # Ensure non-negativity
    utility = np.clip(utility, 0, 1)
    
    return utility
```
