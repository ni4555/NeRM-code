```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_per_weight = prize / np.sum(weight, axis=1)
    diversity_factor = np.max(weight, axis=1) / np.sum(weight, axis=1)
    heuristic_value = value_per_weight * diversity_factor
    heuristic_sharpening = (heuristic_value - np.min(heuristic_value)) / (np.max(heuristic_value) - np.min(heuristic_value))
    sparsified_heuristics = np.where(heuristic_sharpening > np.mean(heuristic_sharpening), heuristic_sharpening, 0)
    return sparsified_heuristics
```
