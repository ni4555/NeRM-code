```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_per_weight = prize / np.sum(weight, axis=1)
    diversity_factor = np.sum(weight, axis=1) / (np.linalg.norm(weight, axis=1) + 1e-8)
    normalized_prize = prize / np.sum(prize)
    sparsity = 1 / (np.linalg.norm(weight, axis=1) + 1e-8)
    heuristics = value_per_weight * diversity_factor * normalized_prize * sparsity
    heuristics[heuristics < 0.1] = 0  # Sparsify the heuristics
    heuristics[heuristics < 0.1] = 0.5 * heuristics[heuristics < 0.1]  # Adjust sparser values to introduce diversity
    heuristics = heuristics / np.max(heuristics)  # Normalize the heuristics
    return heuristics
```
