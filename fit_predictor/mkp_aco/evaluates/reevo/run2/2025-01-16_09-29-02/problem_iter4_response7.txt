```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_per_weight = prize / np.sum(weight, axis=1)
    diversity_factor = np.sum(weight, axis=1) / (np.linalg.norm(weight, axis=1) + 1e-8)
    normalized_prize = prize / np.sum(prize)
    sparsity = 1 / (np.linalg.norm(weight, axis=1) + 1e-8)
    heuristics = value_per_weight * diversity_factor * normalized_prize * sparsity
    heuristics = np.clip(heuristics, 0, None)  # Ensure positive weights
    sparsified_heuristics = heuristics[heuristics < 0.1]  # Sparsify the heuristics
    heuristics[sparsified_heuristics != 0] = 0  # Apply sparsity
    return heuristics
```
