```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_per_weight = prize / np.sum(weight, axis=1)
    diversity_factor = np.sum(weight, axis=1) / (np.linalg.norm(weight, axis=1) + 1e-8)
    normalized_prize = prize / np.sum(prize)
    sparsity = 1 / (np.linalg.norm(weight, axis=1) + 1e-8)
    utility_factor = value_per_weight * diversity_factor * normalized_prize
    adjusted_utility = utility_factor / (np.max(utility_factor) + 1e-8)
    heuristics = adjusted_utility * sparsity
    heuristics[heuristics < sparsity] = 0
    return heuristics
```
