```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_per_weight = prize / np.sum(weight, axis=1)
    diversity_factor = np.sum(weight, axis=1) / (np.sum(weight, axis=1) + 1e-8)
    normalized_prize = prize / np.sum(prize)
    non_linear_scale = 1 / (np.exp(-prize) + 1e-8)
    bounded_factor = np.clip(weight, a_min=0, a_max=1)
    heuristics = value_per_weight * diversity_factor * normalized_prize * non_linear_scale * bounded_factor
    heuristics = np.clip(heuristics, 0, 1)  # Ensuring the heuristics are within bounds [0,1]
    return heuristics
```
