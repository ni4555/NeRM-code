```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_per_weight = prize / np.sum(weight, axis=1)
    diversity_factor = np.sum(weight, axis=1) / (np.linalg.norm(weight, axis=1) + 1e-8)
    normalized_prize = prize / np.sum(prize)
    sparsity = 1 / (np.linalg.norm(weight, axis=1) + 1e-8)
    heuristic_balance_factor = value_per_weight * diversity_factor
    heuristic_cap_dominance = 1 / (normalized_prize + 1e-8)
    heuristics = (heuristic_balance_factor * heuristic_cap_dominance) * sparsity
    
    heuristic_scaling_factor = np.max(heuristic_balance_factor * heuristic_cap_dominance)
    heuristics = heuristics / heuristic_scaling_factor
    
    sparsity_threshold = 0.1
    heuristics[heuristics < sparsity_threshold] = 0
    
    return heuristics
```
