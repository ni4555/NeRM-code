```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Non-linear scaling by raising the ratio to a power and applying a threshold
    power = 1.5
    non_linear_scaled_ratio = (value_to_weight_ratio ** power) * (value_to_weight_ratio > 0.25)
    # Threshold-based filtering for sparsity
    threshold = np.percentile(non_linear_scaled_ratio, 95)  # Using 95th percentile as a threshold
    sparsified_ratio = np.where(non_linear_scaled_ratio > threshold, non_linear_scaled_ratio, 0)
    return sparsified_ratio
```
