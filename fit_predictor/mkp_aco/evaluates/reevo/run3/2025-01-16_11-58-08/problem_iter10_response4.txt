```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the sum of weights for each item, ignoring the dimension constraint
    weight_sum = np.sum(weight, axis=1)
    # Initialize an array of the same length as the prize array with zeros
    heuristics = np.zeros_like(prize)
    # Set the heuristic values to the prize divided by the sum of weights
    heuristics[weight_sum > 0] = prize[weight_sum > 0] / weight_sum[weight_sum > 0]
    return heuristics
```
