```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Non-linear scaling by squaring the ratio and apply a threshold
    non_linear_scaled_ratio = (value_to_weight_ratio ** 2) * (value_to_weight_ratio > 0.25)
    # Normalize using a standard score transformation
    standard_score = (non_linear_scaled_ratio - np.mean(non_linear_scaled_ratio)) / np.std(non_linear_scaled_ratio)
    # Sparsify by setting values to zero below a certain threshold
    threshold = 0.5
    sparsified_score = np.where(standard_score > threshold, standard_score, 0)
    return sparsified_score
```
