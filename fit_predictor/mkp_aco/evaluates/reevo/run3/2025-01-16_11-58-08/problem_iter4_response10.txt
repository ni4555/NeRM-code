```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate value-to-weight ratio
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Calculate the standard deviation of the ratio
    std_ratio = np.std(value_to_weight_ratio)
    # Normalize the ratio by subtracting the mean and dividing by the standard deviation
    normalized_ratio = (value_to_weight_ratio - np.mean(value_to_weight_ratio)) / std_ratio
    # Apply thresholding to keep only items with high heuristic values
    threshold = np.percentile(normalized_ratio, 90)  # Using the 90th percentile as the threshold
    heuristics = np.where(normalized_ratio > threshold, normalized_ratio, 0)
    return heuristics
```
