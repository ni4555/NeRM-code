```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Non-linear scaling by squaring the ratio and applying a threshold
    non_linear_scaled_ratio = (value_to_weight_ratio ** 2) * (value_to_weight_ratio > 0.25)
    # Combine multiple metrics: Value-to-weight ratio, a diversity score, and sparsity
    diversity_score = np.abs(non_linear_scaled_ratio) > 0.1
    # Apply sparsity threshold to the combined metrics
    combined_metrics = non_linear_scaled_ratio * diversity_score
    # Apply non-linear transformations and further sparsify
    final_heuristics = np.where(combined_metrics > 0.5, combined_metrics, 0)
    return final_heuristics
```
