```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    total_weight = np.sum(weight, axis=1)
    value_to_weight_ratio = prize / total_weight
    avg_value_to_weight_ratio = np.mean(value_to_weight_ratio)
    normalized_ratios = value_to_weight_ratio / avg_value_to_weight_ratio
    balance_factor = 2.0
    scaled_ratios = normalized_ratios * balance_factor
    sigmoid_alpha = 0.1
    sigmoid_beta = 0.1
    sigmoid_sparsity = 1 / (1 + np.exp(-sigmoid_alpha * scaled_ratios - sigmoid_beta))
    normalized_sparsity = sigmoid_sparsity / np.max(sigmoid_sparsity)
    heuristics = np.maximum(normalized_sparsity, 0)
    return heuristics
```
