```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Normalize the value-to-weight ratios
    normalized_ratio = prize / np.sum(weight, axis=1)
    # Apply a non-linear transformation by taking the square root
    non_linear_transformed_ratio = np.sqrt(normalized_ratio)
    # Use a diversity metric by incorporating the variance
    diversity_metric = np.var(normalized_ratio)
    # Combine the non-linear transformation with the diversity metric
    combined_metric = non_linear_transformed_ratio * diversity_metric
    # Apply sparsity by setting low-value items to zero based on a threshold
    sparsified_combined_metric = np.where(combined_metric > 0.5, combined_metric, 0)
    return sparsified_combined_metric
```
