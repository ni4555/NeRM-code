```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Non-linear scaling by raising the ratio to the power of 3 and applying a threshold
    non_linear_scaled_ratio = (value_to_weight_ratio ** 3) * (value_to_weight_ratio > 0.1)
    # Incorporating diversity by considering the range of the ratio
    diversity_factor = np.ptp(non_linear_scaled_ratio)
    # Combining factors: non-linear ratio and diversity
    combined_factor = non_linear_scaled_ratio + diversity_factor
    # Apply selective sparsity based on a combination of factors and a threshold
    sparsified_factor = np.where(combined_factor > 0.2, combined_factor, 0)
    return sparsified_factor
```
