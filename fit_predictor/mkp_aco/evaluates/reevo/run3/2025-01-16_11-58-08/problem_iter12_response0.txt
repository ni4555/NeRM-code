```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Normalize the ratio to emphasize high values
    normalized_ratio = value_to_weight_ratio / np.sum(value_to_weight_ratio)
    # Introduce sparsity naturally by normalization
    # Apply a non-linear transformation to balance simplicity with non-linearity
    non_linear_transformed_ratio = np.log1p(normalized_ratio)
    # Incorporate diversity by adding a random factor
    random_factor = np.random.rand(len(normalized_ratio))
    # Combine the random factor with the transformed ratio
    combined_heuristic = non_linear_transformed_ratio * random_factor
    # Normalize again to ensure the sum of heuristics is 1
    heuristics = combined_heuristic / np.sum(combined_heuristic)
    return heuristics
```
