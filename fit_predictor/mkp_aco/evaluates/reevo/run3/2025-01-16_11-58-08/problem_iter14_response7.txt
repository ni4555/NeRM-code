```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the value-to-weight ratio for each item
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    
    # Amplify differences by applying a logarithmic transformation
    transformed_ratio = np.log(1 + value_to_weight_ratio)
    
    # Encourage diversity by calculating the sparsity score
    sparsity_score = np.sum(weight == 0) / (weight.shape[0] * weight.shape[1])
    diversity_heuristic = (1 - sparsity_score) * 0.2
    
    # Combine the amplified value-to-weight ratio with the diversity heuristic
    combined_heuristic = transformed_ratio + diversity_heuristic
    
    # Normalize the combined heuristics to ensure they sum to 1
    heuristics = combined_heuristic / np.sum(combined_heuristic)
    
    return heuristics
```
