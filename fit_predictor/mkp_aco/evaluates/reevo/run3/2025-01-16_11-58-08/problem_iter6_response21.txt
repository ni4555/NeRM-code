```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    total_weight = np.sum(weight, axis=1)
    value_to_weight_ratio = prize / total_weight
    # Non-linear scaling by raising the ratio to a power
    non_linear_scaled_ratio = (value_to_weight_ratio ** 3) * (value_to_weight_ratio > 0.25)
    # Selective sparsity using a sigmoid function
    sigmoid_threshold = 0.5  # Example threshold
    sparsified_ratio = np.where(non_linear_scaled_ratio > sigmoid_threshold, non_linear_scaled_ratio, 0)
    # Sigmoid function to ensure values are between 0 and 1
    sigmoid_sparsified_ratio = 1 / (1 + np.exp(-sparsified_ratio))
    return sigmoid_sparsified_ratio
```
