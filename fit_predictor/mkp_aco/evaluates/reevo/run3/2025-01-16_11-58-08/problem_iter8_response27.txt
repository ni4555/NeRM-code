```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Apply logarithmic scaling to prevent extreme values
    log_scaled_ratio = np.log(value_to_weight_ratio + 1)
    # Normalize the log-scaled values
    normalized_ratio = log_scaled_ratio / np.sum(log_scaled_ratio)
    # Apply a threshold to create sparsity
    threshold = 0.1  # Example threshold
    sparsified_ratio = np.where(normalized_ratio > threshold, normalized_ratio, 0)
    return sparsified_ratio
```
