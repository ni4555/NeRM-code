```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Non-linear scaling by exponentiating the ratio and applying a threshold
    non_linear_scaled_ratio = np.exp(value_to_weight_ratio) * (value_to_weight_ratio > 0.25)
    # Combining with the normalized prize value for global and local information
    combined_heuristic = non_linear_scaled_ratio * (prize / np.max(prize))
    # Sparsifying the heuristics by setting elements below a certain threshold to zero
    threshold = np.percentile(combined_heuristic, 90)
    sparsified_heuristic = np.where(combined_heuristic > threshold, combined_heuristic, 0)
    return sparsified_heuristic
```
