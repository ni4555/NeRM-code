```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Combine ratio with a function of the total number of items to balance large and small values
    aggregated_ratio = value_to_weight_ratio * (n / (1 + np.log2(n)))
    # Normalize by sum of ratios to ensure total sum of heuristics is the same for all solutions
    normalized_ratio = aggregated_ratio / np.sum(aggregated_ratio)
    # Apply sparsification and a non-linear scaling function
    sparsified_ratio = np.where(normalized_ratio > 0.1, normalized_ratio, 0)
    return sparsified_ratio
```
