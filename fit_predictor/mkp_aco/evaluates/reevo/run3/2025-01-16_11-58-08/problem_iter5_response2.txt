```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    non_linear_scaled_ratio = (value_to_weight_ratio ** 2) * (value_to_weight_ratio > 0.25)
    performance_aggregation = np.prod(non_linear_scaled_ratio, axis=1)
    sparsity_factor = (1 / np.sum(weight, axis=1)) ** 0.5  # Normalizing for sparsity
    heuristics = performance_aggregation * sparsity_factor
    threshold = 0.1  # Example threshold
    sparsified_heuristics = np.where(heuristics > threshold, heuristics, 0)
    return sparsified_heuristics
```
