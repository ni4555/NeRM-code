```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate value-to-weight ratios
    ratio = prize / np.sum(weight, axis=1)
    # Normalize the ratios to sum to 1
    normalized_ratio = ratio / np.sum(ratio)
    # Incorporate sparsity by setting a threshold
    threshold = np.sum(ratio) / (len(ratio) + 1)
    heuristics = np.where(normalized_ratio > threshold, normalized_ratio, 0)
    return heuristics
```
