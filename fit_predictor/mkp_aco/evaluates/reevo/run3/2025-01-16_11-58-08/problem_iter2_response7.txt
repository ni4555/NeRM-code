```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate normalized prize to weight ratio
    normalized_ratio = prize / np.sum(weight, axis=1)
    # Introduce sparsity by setting elements below a threshold to zero
    threshold = np.median(normalized_ratio)
    heuristics = np.where(normalized_ratio >= threshold, normalized_ratio, 0)
    # Normalize the heuristics to sum to 1
    heuristics /= np.sum(heuristics)
    return heuristics
```
