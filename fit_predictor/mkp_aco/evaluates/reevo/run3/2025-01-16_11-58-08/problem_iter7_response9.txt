```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Non-linear scaling by squaring the ratio
    non_linear_scaled_ratio = value_to_weight_ratio ** 2
    # Normalize the ratios by their maximum value to avoid large numbers
    normalized_ratio = non_linear_scaled_ratio / np.max(non_linear_scaled_ratio)
    # Use a combination of sparsity based on normalized ratio and the sign of the ratio
    # to balance global and local information
    sparsified_normalized_ratio = np.where(normalized_ratio > 0.1, normalized_ratio, 0)
    return sparsified_normalized_ratio
```
