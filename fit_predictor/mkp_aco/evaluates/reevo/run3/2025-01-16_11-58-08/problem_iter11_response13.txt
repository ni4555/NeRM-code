```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Emphasize high values by squaring the ratio
    high_value_ratio = value_to_weight_ratio ** 2
    # Incorporate diversity by adding the ratio itself
    diverse_ratio = high_value_ratio + value_to_weight_ratio
    # Balance simplicity by applying a sigmoid function
    sigmoid_ratio = 1 / (1 + np.exp(-diverse_ratio))
    # Non-linear transformation for sparsity
    sparsified_ratio = np.where(sigmoid_ratio > 0.5, sigmoid_ratio, 0)
    return sparsified_ratio
```
