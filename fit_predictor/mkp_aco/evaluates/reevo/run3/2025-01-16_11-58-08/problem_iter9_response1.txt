```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Normalize ratios by dividing by the maximum ratio
    normalized_ratio = value_to_weight_ratio / np.max(value_to_weight_ratio)
    # Apply non-linear transformation to enhance sparsity
    non_linear_transformed_ratio = np.log(1 + normalized_ratio)
    # Apply threshold to filter for diversity
    threshold_filtered_ratio = np.where(non_linear_transformed_ratio > 0.5, non_linear_transformed_ratio, 0)
    return threshold_filtered_ratio
```
