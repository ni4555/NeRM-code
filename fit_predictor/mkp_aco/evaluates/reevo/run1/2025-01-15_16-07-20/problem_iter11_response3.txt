```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the maximum prize
    max_prize = np.max(prize)
    
    # Calculate a feature for items with zero weight in each dimension
    zero_weight_feature = (prize == 0) * (prize / max_prize)
    
    # Calculate density based on prize and average weight
    density = prize / np.mean(weight, axis=1)
    
    # Calculate constraint balance for each item
    constraint_balance = np.sum(weight**2, axis=1) / np.sum(weight, axis=1)**2
    
    # Combine the features
    combined_feature = density * (1 - constraint_balance) + zero_weight_feature
    
    # Normalize the combined feature scores
    combined_feature_normalized = combined_feature / np.max(combined_feature)
    
    # Return the heuristics scores
    return combined_feature_normalized
```
