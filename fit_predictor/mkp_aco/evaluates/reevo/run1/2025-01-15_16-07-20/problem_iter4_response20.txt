```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    max_prize = np.max(prize)
    average_weight = np.mean(weight, axis=1)
    density = prize / average_weight
    sparsity = (density > max_prize / np.sum(weight)) * 1.0
    utility_score = density * sparsity
    additional_bonus = (prize / np.sum(prize)) * utility_score * (1 - average_weight / np.sum(weight))
    return utility_score + additional_bonus
```
