```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    normalized_prize = prize / np.sum(prize)
    density = prize / np.sum(weight, axis=1)
    complexity = np.sum(weight**2, axis=1) / np.sum(weight, axis=1)**2
    dimension_specific = np.sum(weight, axis=0) / weight.shape[1]
    heuristics = (normalized_prize + density - complexity) * (1 - complexity) * np.prod(dimension_specific, axis=0)
    sparsified_heuristics = np.where(heuristics > 0, heuristics, 0)
    return sparsified_heuristics
```
