```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the prize per unit weight for each item
    score = prize / np.sum(weight, axis=1)
    
    # Normalize the scores to ensure they are on a comparable scale
    normalized_score = score / np.sum(score)
    
    # Refine the scores by emphasizing higher scores
    refined_score = normalized_score * (normalized_score > np.mean(normalized_score))
    
    # Apply a small random perturbation to avoid local optima
    perturbation = np.random.normal(0, 0.01, size=refined_score.shape)
    
    # Final adjustment to heuristics
    heuristics = refined_score + perturbation
    
    # Return the final heuristics
    return heuristics
```
