```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the maximum prize
    max_prize = np.max(prize)
    
    # Calculate density based on prize normalized by the maximum prize
    density = prize / max_prize
    
    # Calculate constraint balance for each item, focusing on the average weight
    constraint_balance = np.sum(weight**2, axis=1) / np.sum(weight, axis=1)**2
    
    # Calculate utility by combining density and constraint balance
    utility = density * (1 - constraint_balance)
    
    # Normalize the utility scores
    normalized_utility = utility / np.max(utility)
    
    # Return the heuristics scores
    return normalized_utility
```
