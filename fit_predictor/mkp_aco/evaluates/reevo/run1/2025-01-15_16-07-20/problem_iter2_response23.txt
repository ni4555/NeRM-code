```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    max_prize = np.max(prize)
    average_weight = np.mean(weight, axis=1)
    density = prize / average_weight
    constraint_balance = np.sum(weight**2, axis=1) / np.sum(weight, axis=1)**2
    utility = density * (1 - constraint_balance)
    sparsity = (utility > max_prize / np.sum(prize)) * 1.0
    return utility * sparsity
```
