```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    max_prize = np.max(prize)
    average_weight = np.mean(weight, axis=1)
    density = prize / average_weight
    sparsity = (density > max_prize / np.sum(weight)) * 1.0
    diversity_score = np.sum((prize / max_prize) * (1 - (weight == weight[:, None]).all(axis=1)), axis=1)
    normalized_diversity = diversity_score / np.sum(diversity_score)
    combined_score = density * sparsity * normalized_diversity
    return combined_score
```
