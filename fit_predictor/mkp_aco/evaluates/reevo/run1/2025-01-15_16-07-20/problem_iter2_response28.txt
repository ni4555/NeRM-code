```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the ratio of prize to the square root of the sum of weights squared
    prize_to_weight_ratio = prize / np.sqrt(np.sum(weight**2, axis=1))
    
    # Calculate the normalized weight
    normalized_weight = np.sum(weight, axis=1) / np.sum(weight)
    
    # Combine the ratio with the normalized weight using a complex interaction term
    interaction_term = prize_to_weight_ratio * (1 - normalized_weight)
    
    # Calculate the heuristic value for each item
    heuristics = interaction_term
    
    # Apply a threshold to filter out items with low heuristics
    threshold = np.mean(heuristics)
    heuristics[heuristics < threshold] = 0
    
    return heuristics
```
