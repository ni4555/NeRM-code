```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    weight_normalized = np.sum(weight, axis=1)
    weight_sq = np.sum(weight**2, axis=1)
    item_importance = prize / weight_normalized
    importance_sparsity = 1 - (weight_sq / weight_normalized**2)
    combined_heuristics = item_importance * importance_sparsity
    # Normalize heuristics to be between 0 and 1
    max_heuristic = np.max(combined_heuristics)
    combined_heuristics = combined_heuristics / max_heuristic
    # Apply a threshold to sparsify the heuristics
    threshold = 0.1
    heuristics_sparsified = np.where(combined_heuristics > threshold, combined_heuristics, 0)
    return heuristics_sparsified
```
