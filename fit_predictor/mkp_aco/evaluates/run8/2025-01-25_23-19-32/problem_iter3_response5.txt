```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    weight_normalized = np.sum(weight, axis=1)
    weight_sq = np.sum(weight**2, axis=1)
    item_importance = prize / weight_normalized
    importance_sparsity = 1 - (weight_sq / weight_normalized**2)
    item_size = weight.sum(axis=1) / weight.shape[1]
    item_potential = prize * (1 - item_size)
    combined_heuristics = item_importance * importance_sparsity * item_potential
    threshold = combined_heuristics.max() / 2
    return np.where(combined_heuristics > threshold, combined_heuristics, 0)
```
