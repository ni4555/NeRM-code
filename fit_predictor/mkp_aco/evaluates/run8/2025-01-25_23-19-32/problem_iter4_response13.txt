```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the inverse of the average weight, which acts as a scale factor
    inverse_avg_weight = 1 / np.mean(weight)
    
    # Calculate the heuristic by normalizing the prize with the inverse of the average weight
    heuristic = prize * inverse_avg_weight
    
    # Square the heuristic to enhance non-linearity
    heuristic = heuristic ** 2
    
    # Add a smoothing term by normalizing the weight
    smoothing_term = np.sum(weight, axis=1) / (np.sum(weight, axis=1) + 1)
    
    # Combine the heuristics with the smoothing term
    heuristic = heuristic + smoothing_term
    
    # Apply a sparsity threshold to the heuristic
    sparsity_threshold = 0.5
    heuristic[heuristic < sparsity_threshold] = 0
    
    return heuristic
```
