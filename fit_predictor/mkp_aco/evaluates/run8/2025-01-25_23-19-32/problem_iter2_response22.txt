```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the normalized prize to weight ratio for each item
    ratio = prize / np.sum(weight, axis=1)
    
    # Introduce a scaling factor based on the average ratio to normalize the range
    scaling_factor = np.mean(ratio)
    
    # Calculate the sparsity factor as the minimum ratio divided by the scaling factor
    sparsity_factor = np.min(ratio) / scaling_factor
    
    # Determine the threshold based on the sparsity factor and the scaling factor
    threshold = sparsity_factor * scaling_factor
    
    # Create the heuristics array, using the threshold to sparsify the heuristics
    heuristics = np.where(ratio >= threshold, ratio, 0)
    
    return heuristics
```
