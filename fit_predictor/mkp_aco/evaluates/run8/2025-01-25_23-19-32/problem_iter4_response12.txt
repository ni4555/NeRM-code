```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the normalized prize to weight ratio for each item
    ratio = prize / np.sum(weight, axis=1)
    # Normalize the ratio by dividing by the maximum ratio to ensure sparsity
    normalized_ratio = ratio / np.max(ratio)
    # Use a combination of logarithmic and exponential transformations
    heuristic = np.log1p(prize) * np.exp(prize / np.max(prize))
    # Add the normalized ratio as a feature to the heuristic
    heuristic *= normalized_ratio
    # Apply a sparsity threshold to filter out items with low heuristic values
    sparsity_threshold = 0.75
    heuristic[heuristic < sparsity_threshold] = 0
    return heuristic
```
