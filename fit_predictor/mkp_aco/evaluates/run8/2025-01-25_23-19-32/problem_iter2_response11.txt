```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the normalized prize to weight ratio
    ratio = prize / np.sum(weight, axis=1)
    # Calculate the sparsity factor based on the standard deviation
    sparsity_factor = np.std(ratio) / np.mean(ratio)
    # Set a threshold based on the sparsity factor
    threshold = np.mean(ratio) + sparsity_factor * np.std(ratio)
    # Create heuristics array where elements above the threshold are set to the ratio value, and below to zero
    heuristics = np.where(ratio >= threshold, ratio, 0)
    return heuristics
```
