```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the normalized prize to weight ratio for each item
    ratio = prize / np.sum(weight, axis=1)
    # Introduce a sparsity factor based on the range of the ratio
    sparsity_factor = np.ptp(ratio) / np.max(ratio)
    # Define an adaptive threshold based on the sparsity factor and the range
    threshold = sparsity_factor * np.max(ratio)
    # Create the heuristics array, considering only the ratios above the threshold
    heuristics = np.where(ratio >= threshold, ratio, 0)
    return heuristics
```
