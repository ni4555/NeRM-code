```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:

    # Normalize weights by summing across dimensions
    weight_normalized = np.sum(weight, axis=1)
    
    # Calculate the importance of each item based on prize to normalized weight ratio
    item_importance = prize / weight_normalized
    
    # Encourage diversity by considering the difference in importance
    diversity_factor = np.exp(item_importance - np.max(item_importance))
    
    # Normalize the diversity factor to sum to 1
    heuristics = diversity_factor / np.sum(diversity_factor)
    
    return heuristics
```
