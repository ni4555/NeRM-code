```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the normalized prize to weight ratio for each item
    ratio = prize / np.sum(weight, axis=1)
    # Introduce a sparsity factor based on the squared weights and normalized weight sum
    sparsity_factor = 1 - (np.sum(weight**2, axis=1) / np.sum(weight, axis=1)**2)
    # Combine the ratio and sparsity terms with a balance factor
    combined_heuristics = ratio * sparsity_factor * 0.5 + np.exp(-np.abs(np.sum(weight, axis=1) - 1)) * 0.5
    # Normalize the heuristics to sum to 1
    combined_heuristics /= np.sum(combined_heuristics)
    return combined_heuristics
```
