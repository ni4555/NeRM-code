```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    weight_normalized = np.sum(weight, axis=1)
    weight_sq = np.sum(weight**2, axis=1)
    item_importance = prize / weight_normalized
    importance_sparsity = 1 - (weight_sq / weight_normalized**2)
    combined_heuristics = item_importance * importance_sparsity
    normalized_heuristics = (combined_heuristics - np.min(combined_heuristics)) / (np.max(combined_heuristics) - np.min(combined_heuristics))
    heuristics_with_threshold = (normalized_heuristics >= 0.5)
    heuristics_sparsified = np.where(heuristics_with_threshold, 1, 0)
    return heuristics_sparsified
```
