```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n, m = prize.shape[0], weight.shape[1]

    # Normalize the prize by its maximum value
    max_prize = np.max(prize)
    normalized_prize = prize / max_prize

    # Calculate the inverse of the sum of weights for each item
    inverse_weight_sum = np.sum(weight, axis=1)
    inverse_weight = 1 / inverse_weight_sum

    # Combine the normalized prize and inverse weight to get item importance
    item_importance = normalized_prize * inverse_weight

    # Normalize the importance to ensure it sums to 1
    heuristics = item_importance / np.sum(item_importance)

    return heuristics
```
