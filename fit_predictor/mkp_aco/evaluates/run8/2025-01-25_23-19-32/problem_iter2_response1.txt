```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_weight_ratio = prize / np.sum(weight, axis=1)
    variance = np.var(value_weight_ratio, axis=0)
    average_weight = np.mean(weight, axis=1)
    
    # Incorporate diversity by using the variance
    diversity_factor = 1 / (1 + variance)
    
    # Adjust for average weight
    adjusted_weight = average_weight / np.mean(average_weight)
    
    # Normalize heuristics
    heuristics = (value_weight_ratio * diversity_factor - adjusted_weight + 1) / np.sum(
        value_weight_ratio * diversity_factor - adjusted_weight + 1
    )
    
    # Set unpromising elements to zero
    heuristics[heuristics < 0.01] = 0
    return heuristics
```
