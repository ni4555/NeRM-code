```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the normalized prize to weight ratio
    ratio = prize / np.sum(weight, axis=1)
    # Introduce a sparsity factor based on the global min and max ratio
    sparsity_factor = np.min(ratio) / np.max(ratio)
    # Define a threshold using the sparsity factor and global max ratio
    threshold = sparsity_factor * np.max(ratio)
    # Create heuristics array where elements below the threshold are set to zero
    heuristics = np.where(ratio >= threshold, ratio, 0)
    return heuristics
```
