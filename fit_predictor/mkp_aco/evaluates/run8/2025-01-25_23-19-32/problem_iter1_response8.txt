```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the value-to-weight ratio for each item
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    
    # Apply a sparsity factor to less promising items
    sparsity_factor = np.exp(-value_to_weight_ratio)
    
    # Calculate a composite heuristic based on both value-to-weight ratio and sparsity factor
    composite_heuristic = value_to_weight_ratio * sparsity_factor
    
    # Set elements below a certain threshold to zero for sparsity
    threshold = np.mean(composite_heuristic)
    heuristics = np.where(composite_heuristic > threshold, composite_heuristic, 0)
    
    return heuristics
```
