```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Normalize the prize by the sum of weights
    normalized_prize = prize / np.sum(weight, axis=1)
    # Introduce non-linearity by squaring the normalized prize
    non_linear_prize = normalized_prize ** 2
    # Smooth the heuristics by adding a term based on the total weight
    smoothing_term = np.sum(weight, axis=1) / (np.sum(weight, axis=1) + 1)
    smoothed_heuristics = non_linear_prize * smoothing_term
    # Normalize the heuristics by scaling with the mean prize
    scaled_heuristics = smoothed_heuristics * np.mean(prize)
    # Introduce sparsity by thresholding the heuristics
    sparsity_threshold = np.mean(scaled_heuristics)
    heuristics = np.where(scaled_heuristics > sparsity_threshold, scaled_heuristics, 0)
    return heuristics
```
