```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    heuristic = (prize / np.sum(weight, axis=1)) * (prize / np.max(prize))
    heuristic += np.sum(weight, axis=1) * (1 / (np.sum(weight, axis=1) + 1))
    heuristic *= np.log1p(prize)  # Apply a non-linear transformation
    heuristic *= (1 - np.exp(-prize / np.max(prize)))  # Introduce an exponential term for emphasis on higher prize items
    sparsity_threshold = 0.75
    heuristic[heuristic < sparsity_threshold] = 0
    return heuristic
```
