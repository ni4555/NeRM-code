```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Normalize weights by summing across dimensions
    weight_normalized = np.sum(weight, axis=1)
    
    # Calculate the importance of each item based on prize to normalized weight ratio
    item_importance = prize / weight_normalized
    
    # Combine importance with a diversity factor and sparsity factor
    diversity_factor = 1 / (1 + np.exp(-item_importance))
    sparsity_factor = 1 - (np.sum(weight**2, axis=1) / weight_normalized**2)
    combined_heuristics = item_importance * diversity_factor * sparsity_factor
    
    # Normalize the combined heuristics to ensure they sum to 1
    heuristics = combined_heuristics / np.sum(combined_heuristics)
    
    return heuristics
```
