importance of the prizes and weights.**

```python
import numpy as np

def heuristics_v2(prize, weight, power=1):
    n = len(prize)
    m = len(weight[0])
    power_weighted_prize_sum = np.sum(prize ** power) / n
    power_weighted_weight_sum = np.sum(weight ** power) / n
    heuristics_matrix = (prize ** power) / (weight ** power) * (power_weighted_prize_sum / power_weighted_weight_sum)
    return heuristics_matrix
