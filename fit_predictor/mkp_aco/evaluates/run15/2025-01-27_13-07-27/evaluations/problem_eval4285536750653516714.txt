import numpy as np

def heuristics_v3(prize, weight):
    n = len(prize)
    m = len(weight[0])
    heuristics = np.zeros(n)
    for i in range(n):
        total_weight = weight.sum(axis=0)
        non_ones_count = np.sum(weight != 1, axis=1)
        total_non_ones_weight = total_weight * non_ones_count
        if np.any(total_weight[i] == 0):
            continue
        ratio = (prize[i] / non_ones_count[i]) / total_non_ones_weight.sum()
        heuristics[i] = ratio
    return heuristics_matrix
