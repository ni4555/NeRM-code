importance.}
```

New Python Implementation:
```python
import numpy as np

def heuristics_v2(prize, weight):
    n = len(prize)
    m = len(weight[0])
    heuristics_matrix = np.zeros(n)
    for i in range(n):
        item_sum = np.sum(weight[i] ** 2)
        norm_prize = prize[i] / np.sqrt(item_sum)
        random_noise = (0.2 * np.sum(weight[i] * np.random.rand(m)))
        dimensionwise_importance = np.sum(weight[i])
        heuristics_matrix[i] = (0.8 * norm_prize) + (0.2 * random_noise * dimensionwise_importance)
    return heuristics_matrix
