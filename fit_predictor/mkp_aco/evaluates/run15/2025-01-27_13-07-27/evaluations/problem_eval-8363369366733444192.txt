import numpy as np

def heuristics_v2(prize, weight):
    n = len(prize)
    m = len(weight[0])
    heuristics_matrix = np.zeros(n)
    for i in range(n):
        # Calculate the average ratio of prize to weight for each dimension
        ratio_per_dimension = np.array([np.sum(prize[i]) / np.sum(weight[i]) for i in range(m)])
        # Apply a logarithmic transformation to the ratios for normalization
        log_ratio = np.log(ratio_per_dimension + 1)
        # Sum the transformed ratios for the heuristic value of item i
        heuristics_matrix[i] = np.sum(log_ratio)
    return heuristics_matrix
