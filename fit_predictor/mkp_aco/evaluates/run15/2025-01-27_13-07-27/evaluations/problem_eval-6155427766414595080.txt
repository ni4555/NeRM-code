importance factor, to compute a heuristic value for each item.
}

```python
import numpy as np

def heuristics_v2(prize, weight, importance_factors):
    n = len(prize)
    m = len(weight[0])
    # Calculate weighted ratio for each dimension
    weighted_ratios = np.zeros((n, m))
    for i in range(m):
        weighted_ratios[:, i] = (prize / weight[:, i]) * importance_factors[i]
    # Calculate overall heuristic by taking the weighted sum of ratios
    heuristics_matrix = np.sum(weighted_ratios, axis=1)
    return heuristics_matrix
