import numpy as np

def heuristics_v2(prize, weight):
    n = len(prize)
    m = len(weight[0])
    heuristics_matrix = np.zeros(n)
    
    for i in range(n):
        cumulative_prize = np.sum(prize)
        normalized_weight = np.sum(weight[i] / np.max(weight, axis=1))  # Normalize weights within each item
        heuristics_matrix[i] = prize[i] * (1 / (cumulative_prize + normalized_weight))
        
    # Apply random perturbation for diversity
    heuristics_matrix = np.random.binomial(1, heuristics_matrix)
    
    return heuristics_matrix
