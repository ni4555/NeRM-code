import numpy as np

def heuristics_v2(prize, weight):
    n, m = prize.shape[0], weight.shape[1]
    # Create a list of tuples for each item, where each tuple contains the item index and its weighted prize for each dimension
    weighted_prizes = [(i, np.sum(prize[i] * weight[i])) for i in range(n)]
    # Sort the list by weighted prize for each dimension
    sorted_prizes = sorted(weighted_prizes, key=lambda x: x[1], reverse=True)
    # Create a heuristics matrix based on sorted items
    heuristics_matrix = np.zeros(n)
    for index, (i, _) in enumerate(sorted_prizes):
        heuristics_matrix[i] = index / (n - 1)  # Normalize the index to a range between 0 and 1
    return heuristics_matrix
