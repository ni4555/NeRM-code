import numpy as np

def heuristics_v2(prize, weight):
    n, m = prize.shape
    heuristics = np.zeros(n)
    for i in range(n):
        weighted_random = np.random.rand()
        cumulative_probability = 0
        for j in range(m):
            dimension_sum = np.sum(np.reciprocal(weight[i]))
            item_probability = prize[i] / (dimension_sum * weight[i, j])
            cumulative_probability += item_probability
            if cumulative_probability >= weighted_random:
                heuristics[i] = cumulative_probability
                break
    return heuristics_matrix
