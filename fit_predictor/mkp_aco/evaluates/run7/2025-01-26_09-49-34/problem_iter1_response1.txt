```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the normalized prize value for each item
    normalized_prize = prize / np.sum(prize)
    
    # Calculate the normalized weight value for each item for each dimension
    normalized_weight = weight / np.sum(weight, axis=1)[:, np.newaxis]
    
    # Combine normalized prize and normalized weight
    combined = normalized_prize * np.sum(normalized_weight, axis=1)
    
    # Apply a sparsity threshold to set less promising items to zero
    sparsity_threshold = 0.1
    heuristics = np.where(combined > sparsity_threshold, combined, 0)
    
    return heuristics
```
