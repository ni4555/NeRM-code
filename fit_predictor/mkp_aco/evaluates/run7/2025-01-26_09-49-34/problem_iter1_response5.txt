```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate a combination of factors including the ratio of prize to total weight and a sparsity factor
    sparsity_factor = 1 / (1 + np.sum(weight, axis=1))
    normalized_prize = prize / np.sum(prize)
    total_factor = normalized_prize * np.sum(weight, axis=1)
    
    # Sparsify the heuristics by adding a sparsity factor
    heuristics = (total_factor * sparsity_factor).astype(np.float32)
    
    # Set unpromising elements to zero by a threshold
    threshold = np.max(heuristics) / 2
    heuristics[heuristics < threshold] = 0
    
    return heuristics
```
