```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the ratio of prize to total weight per item
    ratio = prize / np.sum(weight, axis=1)
    
    # Calculate the average weight in each dimension
    average_weight = np.mean(weight, axis=1)
    
    # Calculate the average ratio in each dimension
    average_ratio = np.mean(ratio, axis=1)
    
    # Create heuristics by multiplying ratio by a factor of average weight and adjusting by average ratio
    heuristics = ratio * average_weight / average_ratio
    
    # Define a sparsity threshold based on the 90th percentile of the heuristics
    sparsity_threshold = np.percentile(heuristics, 90)
    
    # Apply sparsification threshold, setting elements below the threshold to zero
    heuristics[heuristics < sparsity_threshold] = 0
    
    return heuristics
```
