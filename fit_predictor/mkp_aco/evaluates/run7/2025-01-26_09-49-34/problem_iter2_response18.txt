```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the sum of weights for each dimension
    weight_sum = np.sum(weight, axis=1)
    
    # Normalize the prize by dividing by the sum of all prizes
    normalized_prize = prize / np.sum(prize)
    
    # Calculate the normalized weight by dividing the maximum weight in each dimension by the sum of weights
    normalized_weight = np.max(weight, axis=1) / weight_sum
    
    # Combine the normalized prize and normalized weight
    heuristics = normalized_prize * normalized_weight
    
    # Set a threshold based on the 5th percentile to ensure diversity
    threshold = np.percentile(heuristics, 5)
    
    # Set elements that are below the threshold to zero
    heuristics[heuristics < threshold] = 0
    
    return heuristics
```
