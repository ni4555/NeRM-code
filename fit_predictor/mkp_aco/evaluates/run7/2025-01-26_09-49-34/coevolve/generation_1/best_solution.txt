Fitness: inf

Description:
Employing advanced metaheuristics and stochastic optimization techniques, we propose a novel solution framework for the Multi-Knapsack Problem (MKP) that leverages adaptive sampling strategies to iteratively refine candidate solutions. This approach integrates dynamic fitness evaluation, multi-objective optimization, and robust perturbation algorithms to achieve a synergistic balance between exploration and exploitation, ultimately leading to more effective and efficient prize maximization under stringent weight constraints.

Code:
import numpy as np
import numpy as np
from scipy.optimize import differential_evolution

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    def objective_function(x):
        selected_indices = np.where(x > 0)[0]
        if not selected_indices.any():
            return np.sum(prize)
        weight_sum = np.sum(weight[selected_indices])
        return np.sum(prize[selected_indices]) - weight_sum

    bounds = [(0, 1) for _ in range(prize.size)]
    result = differential_evolution(objective_function, bounds, strategy='best1bin', polish=True, popsize=40, mutation=(0.5, 1.0), recombination=0.7, disp=False)
    return result.x