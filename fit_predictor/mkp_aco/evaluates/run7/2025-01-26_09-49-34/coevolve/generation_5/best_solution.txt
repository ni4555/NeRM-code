Fitness: inf

Description:
Design a hybrid optimization heuristic for the Multiple Knapsack Problem (MKP) that incorporates adaptive stochastic sampling. The heuristic should utilize dynamic fitness evaluation and robust perturbation techniques to refine candidate solutions iteratively. This approach will balance exploration and exploitation, ensuring effective prize maximization while respecting stringent weight constraints, and will be supported by a clear metaheuristic framework with well-defined adaptive sampling strategies and perturbation algorithms.

Code:
import numpy as np
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n, m = prize.shape[0], weight.shape[1]
    heuristic = np.zeros(n)
    probability = np.zeros(n)
    
    # Initialize probability based on prize value
    probability = prize / np.sum(prize)
    
    # Dynamic fitness evaluation
    for _ in range(100):
        # Adaptive stochastic sampling
        selected_indices = np.random.choice(n, size=int(0.1 * n), p=probability)
        
        # Robust perturbation techniques
        for i in selected_indices:
            new_probability = probability.copy()
            new_probability[i] = 0
            # Update the probability for the selected item
            new_probability /= np.sum(new_probability)
            
            # Evaluate new fitness
            new_fitness = np.dot(new_probability, prize)
            # Check if the new fitness is better
            if new_fitness > np.dot(probability, prize):
                probability = new_probability
        
        # Update heuristic based on probability
        heuristic = probability * 100
    
    return heuristic