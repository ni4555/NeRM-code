```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the ratio of prize to weight per item
    ratio = prize / np.sum(weight, axis=1)
    
    # Calculate the normalized weight, assuming all dimensions have a max constraint of 1
    normalized_weight = weight / np.sum(weight, axis=1)
    
    # Combine the prize ratio and normalized weight
    heuristics = ratio * normalized_weight
    
    # Calculate a sparsification threshold based on the median heuristic
    median_heuristic = np.median(heuristics)
    
    # Sparsify the heuristics by setting a threshold
    heuristics[heuristics < median_heuristic] = 0
    
    return heuristics
```
