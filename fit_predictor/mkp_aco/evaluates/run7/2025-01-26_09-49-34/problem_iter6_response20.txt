```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the ratio of prize to total weight per item
    ratio = prize / np.sum(weight, axis=1)
    
    # Calculate the sparsity for each dimension
    sparsity = np.sum(weight, axis=0) / np.sum(weight, axis=1)[:, np.newaxis]
    
    # Create heuristics by multiplying ratio by sparsity
    heuristics = ratio * sparsity
    
    # Apply dynamic thresholds for each item based on the sparsity of its dimensions
    thresholds = np.percentile(heuristics, 90, axis=1)
    heuristics[heuristics < thresholds] = 0
    
    return heuristics
```
