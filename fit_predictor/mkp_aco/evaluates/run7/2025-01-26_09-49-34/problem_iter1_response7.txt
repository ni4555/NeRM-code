```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Normalize the prize to be between 0 and 1
    normalized_prize = prize / np.sum(prize)
    
    # Calculate heuristic based on normalized prize and sparsity factor
    sparsity_factor = np.exp(-np.sum(weight, axis=1))
    
    # Combine factors and sparsify
    heuristics = normalized_prize * np.sum(weight, axis=1) * sparsity_factor
    heuristics[heuristics < 0.1] = 0  # Set unpromising elements to zero
    
    return heuristics
```
