```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the ratio of prize to the average weight in each dimension
    ratio = prize / np.mean(weight, axis=1)
    
    # Create heuristics by considering the total prize to the sum of weights
    heuristics = prize / np.sum(weight, axis=1)
    
    # Sparsify by subtracting the ratio from the heuristic
    heuristics -= ratio
    
    # Apply a sparsification threshold, setting elements below the threshold to zero
    sparsity_threshold = 0
    heuristics[heuristics < sparsity_threshold] = 0
    
    return heuristics
```
