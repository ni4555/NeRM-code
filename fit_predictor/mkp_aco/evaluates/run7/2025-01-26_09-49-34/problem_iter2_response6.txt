```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the ratio of prize to weight per item
    ratio = prize / np.sum(weight, axis=1)
    
    # Sparsify by considering the average weight in all dimensions
    average_weight = np.mean(weight, axis=1)
    
    # Create heuristics by multiplying ratio by the average weight
    heuristics = ratio * average_weight
    
    # Normalize the heuristics to ensure they are all positive
    max_heuristic = np.max(heuristics)
    heuristics = heuristics / max_heuristic
    
    # Apply a sparsification threshold, setting elements below the threshold to zero
    sparsity_threshold = 0.1
    heuristics[heuristics < sparsity_threshold] = 0
    
    return heuristics
```
