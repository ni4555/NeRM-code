```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the ratio of prize to weight for each item
    ratio = prize / np.sum(weight, axis=1)[:, np.newaxis]
    
    # Calculate the overall average weight for each dimension
    average_weight = np.mean(weight, axis=0)
    
    # Create heuristics by multiplying the item-specific ratio by the overall average weight
    heuristics = ratio * average_weight
    
    # Apply a sparsification threshold, setting elements below the threshold to zero
    sparsity_threshold = np.max(heuristics) / 2
    heuristics[heuristics < sparsity_threshold] = 0
    
    return heuristics
```
