```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the ratio of prize to total weight per item
    ratio = prize / np.sum(weight, axis=1)
    
    # Calculate the sum of weights across dimensions to normalize by total weight
    total_weight = np.sum(weight, axis=1)
    
    # Create heuristics by multiplying ratio by a factor of normalized total weight
    heuristics = ratio * (1 / total_weight)
    
    # Apply a sparsification threshold, setting elements below the threshold to zero
    sparsity_threshold = np.max(heuristics) / 2
    heuristics[heuristics < sparsity_threshold] = 0
    
    return heuristics
```
