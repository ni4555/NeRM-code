```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the sum of weights for each item
    weight_sum = np.sum(weight, axis=1)
    
    # Calculate the sparsity of weight by normalizing it with the sum of weights
    sparsity = np.max(weight, axis=1) / weight_sum
    
    # Calculate the heuristic based on the ratio of prize to sparsity
    heuristics = prize / (sparsity + 1e-8)  # Adding a small constant to avoid division by zero
    
    # Normalize the heuristics to ensure they sum to 1
    heuristics /= np.sum(heuristics)
    
    return heuristics
```
