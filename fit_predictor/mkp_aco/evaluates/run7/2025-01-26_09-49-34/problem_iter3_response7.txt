```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the ratio of prize to total weight per item
    ratio = prize / np.sum(weight, axis=1)
    
    # Calculate a domain-specific factor that considers the sparsity of the item
    sparsity_factor = 1 / np.sum(weight == 0, axis=1)
    
    # Calculate a dynamic threshold based on the average prize
    dynamic_threshold = np.mean(prize) / 2
    
    # Combine various factors to determine the heuristics
    heuristics = ratio * sparsity_factor * (prize / dynamic_threshold)
    
    # Sparsify by setting elements below the normalized threshold to zero
    normalized_threshold = np.max(heuristics) / 2
    heuristics[heuristics < normalized_threshold] = 0
    
    return heuristics
```
