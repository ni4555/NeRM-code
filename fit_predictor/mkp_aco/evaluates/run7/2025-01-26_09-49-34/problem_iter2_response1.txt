```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the ratio of prize to the sum of the weights in each dimension for each item
    ratio = prize / np.sum(weight, axis=1)[:, np.newaxis]
    
    # Calculate the average weight per dimension
    average_weight = np.mean(weight, axis=0)
    
    # Create heuristics by multiplying the ratio by the average weight
    heuristics = ratio * average_weight
    
    # Calculate the adaptive threshold based on the median of the heuristics
    adaptive_threshold = np.median(heuristics)
    
    # Sparsify the heuristics by setting elements below the adaptive threshold to zero
    heuristics[heuristics < adaptive_threshold] = 0
    
    return heuristics
```
