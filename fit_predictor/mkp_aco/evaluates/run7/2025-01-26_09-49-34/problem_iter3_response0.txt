```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the ratio of prize to total weight per item
    ratio = prize / np.sum(weight, axis=1)
    
    # Sparsify by considering the average weight in the other dimensions
    average_weight = np.mean(weight, axis=1)
    
    # Balance multi-faceted factors: combine ratio with average weight
    heuristics = ratio * average_weight
    
    # Normalize heuristics based on maximum prize per item
    max_prize = np.max(prize)
    normalized_heuristics = heuristics / max_prize
    
    # Apply a dynamic threshold based on normalized heuristics
    dynamic_threshold = np.mean(normalized_heuristics) * 0.75
    heuristics[normalized_heuristics < dynamic_threshold] = 0
    
    return heuristics
```
