```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate a combination of factors including the ratio of prize to weight, sparsity factor, and diversity factor
    sparsity_factor = 1 / (1 + np.sum(weight, axis=1))
    normalized_prize = prize / np.sum(prize)
    diversity_factor = np.max(weight, axis=1) / np.sum(weight, axis=1)
    total_factor = normalized_prize * diversity_factor * sparsity_factor
    
    # Sparsify the heuristics by setting a threshold that considers the maximum heuristic value
    threshold = np.max(total_factor) / 2
    heuristics = np.where(total_factor >= threshold, total_factor, 0)
    
    return heuristics
```
