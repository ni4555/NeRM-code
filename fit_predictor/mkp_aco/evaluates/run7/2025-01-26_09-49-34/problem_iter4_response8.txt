```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the ratio of prize to total weight per item
    ratio = prize / np.sum(weight, axis=1)
    
    # Calculate the sparsity factor based on the number of zero weights
    sparsity_factor = np.sum(weight == 0, axis=1) / weight.shape[1]
    
    # Calculate the dynamic threshold based on the maximum ratio and sparsity factor
    dynamic_threshold = np.max(ratio) * (1 - sparsity_factor)
    
    # Combine the ratio with the sparsity factor and apply the dynamic threshold
    heuristics = ratio * (1 - sparsity_factor)
    heuristics[heuristics < dynamic_threshold] = 0
    
    return heuristics
```
