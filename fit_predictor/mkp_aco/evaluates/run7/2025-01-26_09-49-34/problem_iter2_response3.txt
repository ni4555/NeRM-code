```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the prize-to-weight ratio for each item
    ratio = prize / np.sum(weight, axis=1)
    
    # Calculate the average weight across all items for each dimension
    average_weight = np.mean(weight, axis=0)
    
    # Create heuristics by multiplying the ratio by a factor that incorporates the average weight in each dimension
    heuristics = ratio * np.prod(average_weight, axis=1)
    
    # Apply a sparsification threshold, setting elements below the threshold to zero
    sparsity_threshold = np.percentile(heuristics, 90)  # Use the 90th percentile as the threshold
    heuristics[heuristics < sparsity_threshold] = 0
    
    return heuristics
```
