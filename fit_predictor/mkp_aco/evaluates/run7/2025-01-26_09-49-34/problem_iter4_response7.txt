```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the prize per unit weight for each item
    prize_per_unit_weight = prize / np.sum(weight, axis=1)
    
    # Calculate the sparsity factor as the number of zero weights
    sparsity_factor = 1 - np.mean(weight, axis=1)
    
    # Define a dynamic threshold based on the 90th percentile of the prize per unit weight
    dynamic_threshold = np.percentile(prize_per_unit_weight, 90)
    
    # Combine the prize per unit weight with the sparsity factor
    heuristics = prize_per_unit_weight * sparsity_factor
    
    # Set elements below the dynamic threshold to zero
    heuristics[heuristics < dynamic_threshold] = 0
    
    return heuristics
```
