```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Normalize the prize to be between 0 and 1
    normalized_prize = prize / np.sum(prize)
    
    # Calculate heuristic based on normalized prize and inverse of weight
    heuristics = normalized_prize * np.sum(weight, axis=1)
    heuristics = heuristics * (1 / np.sum(weight, axis=1) + 1e-5)
    
    # Sparsify the heuristics by setting a threshold
    threshold = np.max(heuristics) * 0.5
    heuristics[heuristics < threshold] = 0
    
    return heuristics
```
