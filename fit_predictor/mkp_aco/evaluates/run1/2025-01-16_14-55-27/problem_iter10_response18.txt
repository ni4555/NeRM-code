```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n = prize.shape[0]
    m = weight.shape[1]

    # Calculate weighted ratio and sparsity for each item
    weighted_ratio = prize / weight.sum(axis=1)
    sparsity = np.count_nonzero(weight > 0, axis=1) / m

    # Combine the weighted ratio and sparsity into a single score
    combined_score = weighted_ratio + sparsity

    # Normalize the combined score to ensure it sums to 1
    combined_score /= np.sum(combined_score)

    return combined_score
```
