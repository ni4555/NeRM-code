```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n = prize.shape[0]
    m = weight.shape[1]

    def get_combination_score(item_idx):
        weighted_ratio = prize[item_idx] / weight[item_idx, :].sum()
        sparsity = np.count_nonzero(weight[item_idx, :] > 0) / m
        return weighted_ratio + sparsity

    sorted_indices = np.argsort(-np.array([get_combination_score(i) for i in range(n)]))

    heuristics = np.zeros(n)
    heuristics[sorted_indices] = np.array([get_combination_score(i) for i in sorted_indices])

    heuristics[heuristics < np.max(heuristics) * 0.1] = 0
    heuristics /= heuristics.sum()

    return heuristics
```
