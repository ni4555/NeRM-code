```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n = prize.shape[0]
    m = weight.shape[1]

    # Calculate weighted ratio and sparsity for each item
    weighted_ratio = prize / weight.sum(axis=1)
    sparsity = np.count_nonzero(weight > 0, axis=1) / m

    # Combine the weighted ratio and sparsity into a single score
    combined_score = weighted_ratio + sparsity

    # Sort items based on the combined score
    sorted_indices = np.argsort(-combined_score)

    # Initialize the heuristic values array
    heuristics = np.zeros(n)

    # Calculate heuristic values based on sorted indices
    heuristics[sorted_indices] = combined_score[sorted_indices]

    # Normalize the heuristics so that they sum to 1
    heuristics /= np.sum(heuristics)

    return heuristics
```
