```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the ratio of prize to weight for each item
    value_per_weight = prize / np.sum(weight, axis=1)
    # Calculate the total value per weight for each dimension
    total_value_per_weight = np.sum(value_per_weight, axis=0)
    # Normalize the value per weight to sum to 1
    normalized_value_per_weight = value_per_weight / total_value_per_weight
    # Calculate the sum of the normalized value per weight for each item
    item_sum_normalized = np.sum(normalized_value_per_weight, axis=0)
    # Apply a sparsification factor based on the sum of the normalized value per weight
    sparsification_factor = item_sum_normalized > 0.1
    # Calculate the heuristic score for each item
    heuristics = normalized_value_per_weight * sparsification_factor
    return heuristics
```
