```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the value-to-weight ratio
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Normalize the ratio to emphasize high values and introduce sparsity
    normalized_ratio = value_to_weight_ratio / np.sum(value_to_weight_ratio)
    # Enhance diversity by adding a random factor that is also normalized
    random_factor = np.random.rand(len(normalized_ratio)) / np.sum(np.random.rand(len(normalized_ratio)))
    # Combine the normalized ratio with the random factor
    combined_heuristic = normalized_ratio + random_factor
    # Normalize the heuristics to ensure they sum up to 1
    heuristics = combined_heuristic / np.sum(combined_heuristic)
    return heuristics
```
