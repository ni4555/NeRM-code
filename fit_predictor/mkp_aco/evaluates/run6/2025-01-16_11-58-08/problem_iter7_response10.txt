```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Use a non-linear transformation such as exponential to emphasize higher ratios
    non_linear_scaled_ratio = np.exp(value_to_weight_ratio)
    # Balance normalization by clamping the values to maintain sparsity
    normalized_ratio = np.clip(non_linear_scaled_ratio, 0, 1)
    # Incorporate both positive and negative ratios by using the absolute value
    sparsified_ratio = np.where(normalized_ratio > 0.1, normalized_ratio, 0)
    return sparsified_ratio
```
