```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the ratio of prize to weight for each item
    value_per_weight = prize / np.sum(weight, axis=1)
    # Calculate the total value per weight for each dimension
    total_value_per_weight = np.sum(value_per_weight, axis=0)
    # Calculate the ratio of each item's value per weight to the total value per weight
    item_value_ratio = value_per_weight / total_value_per_weight
    # Apply a sparsification factor, keeping only items with high value ratio
    sparsification_factor = item_value_ratio > 0.1
    # Set the heuristics to the product of value ratio and sparsification factor
    heuristics = item_value_ratio * sparsification_factor
    return heuristics
```
