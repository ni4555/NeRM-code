```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Emphasize non-linear value by squaring the ratio and emphasizing high values
    non_linear_scaled_ratio = (value_to_weight_ratio ** 2) * (value_to_weight_ratio > 0.5)
    # Incorporate diversity by penalizing low-value to weight ratios and encouraging diversity
    diversity_factor = np.exp(-value_to_weight_ratio) * (value_to_weight_ratio > 0.1)
    # Sparsify the heuristics by thresholding and ensuring the heuristics are between 0 and 1
    heuristics = np.clip(non_linear_scaled_ratio * diversity_factor, 0, 1)
    return heuristics
```
