```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Emphasize positive ratios and reduce the impact of small ratios
    positive_ratio = value_to_weight_ratio * (value_to_weight_ratio > 0.1)
    # Apply logarithmic transformation to balance normalization and variance
    normalized_ratio = np.log(1 + positive_ratio)
    # Apply a non-linear scaling by squaring the ratio to enhance differences
    non_linear_scaled_ratio = normalized_ratio ** 2
    # Set ratios below a threshold to zero to maintain sparsity
    heuristics = np.where(non_linear_scaled_ratio > 0.05, non_linear_scaled_ratio, 0)
    return heuristics
```
