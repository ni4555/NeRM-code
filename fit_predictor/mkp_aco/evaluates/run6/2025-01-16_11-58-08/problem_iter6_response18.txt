```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Non-linear scaling by squaring the ratio and applying a threshold
    non_linear_scaled_ratio = (value_to_weight_ratio ** 2) * (value_to_weight_ratio > 0.25)
    # Selective sparsity based on a non-linear transformation of the ratio
    # We use the absolute value to ensure sparsity does not depend on sign
    sparsified_ratio = np.where(np.abs(non_linear_scaled_ratio) > 0.1, non_linear_scaled_ratio, 0)
    return sparsified_ratio
```
