```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    normalized_ratio = value_to_weight_ratio / np.max(value_to_weight_ratio)
    emphasized_ratio = (normalized_ratio ** 2) * (normalized_ratio > 0.5)
    diverse_ratio = np.where(emphasized_ratio > 0.5, emphasized_ratio, 0.5)
    non_linear_transformed_ratio = 1 / (1 + np.exp(-10 * (diverse_ratio - 0.5)))
    sparsified_ratio = np.where(non_linear_transformed_ratio > 0.2, non_linear_transformed_ratio, 0)
    return sparsified_ratio
```
