```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate value-to-weight ratios
    value_to_weight = prize / np.sum(weight, axis=1)
    # Normalize the ratios to sum to 1
    normalized_ratio = value_to_weight / np.sum(value_to_weight)
    # Adjust heuristics based on additional item characteristics
    additional_characteristics = np.random.rand(n)  # Assuming some characteristics are available
    adjusted_heuristics = normalized_ratio * additional_characteristics
    # Sparsify by setting lower than a threshold to zero
    threshold = np.mean(adjusted_heuristics)
    heuristics = np.where(adjusted_heuristics >= threshold, adjusted_heuristics, 0)
    return heuristics
```
