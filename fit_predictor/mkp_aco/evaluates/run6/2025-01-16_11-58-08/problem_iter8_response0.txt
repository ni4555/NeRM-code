```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    total_weight = np.sum(weight, axis=1)
    value_to_weight_ratio = prize / total_weight
    # Apply a monotonic non-linear transformation, e.g., sigmoid
    non_linear_scaled_ratio = 2 / (1 + np.exp(-2 * (value_to_weight_ratio - 0.5))) - 1
    # Apply thresholding and sparsity with an absolute value to ensure independence from the sign
    sparsified_ratio = np.where(np.abs(non_linear_scaled_ratio) > 0.1, non_linear_scaled_ratio, 0)
    return sparsified_ratio
```
