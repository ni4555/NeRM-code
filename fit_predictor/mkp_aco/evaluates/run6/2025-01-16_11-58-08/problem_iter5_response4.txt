```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Aggregating performance by summing up the ratios
    aggregated_performance = np.sum(value_to_weight_ratio, axis=1)
    # Normalizing for sparsity by dividing by the mean
    normalized_performance = aggregated_performance / np.mean(aggregated_performance)
    # Combining factors by multiplying with the non-linear scaled ratio
    combined_heuristics = normalized_performance * (value_to_weight_ratio ** 2)
    # Applying domain-specific insights by adjusting the threshold
    threshold = 0.1  # Example threshold
    heuristics = np.where(combined_heuristics > threshold, combined_heuristics, 0)
    return heuristics
```
