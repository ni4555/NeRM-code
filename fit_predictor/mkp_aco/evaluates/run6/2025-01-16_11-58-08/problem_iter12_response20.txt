```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Normalize the ratios and emphasize larger values by using a sigmoid function
    normalized_ratio = 1 / (1 + np.exp(-value_to_weight_ratio))
    # Apply a non-linear scaling to amplify the difference between high and low ratios
    non_linear_scaled_ratio = (normalized_ratio - 0.5) * 2
    # Introduce a small positive threshold to avoid division by zero and to ensure sparsity
    heuristics = np.where(non_linear_scaled_ratio > 0.01, non_linear_scaled_ratio, 0)
    return heuristics
```
