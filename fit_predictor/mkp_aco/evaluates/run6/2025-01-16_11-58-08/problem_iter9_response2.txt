```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Non-linear scaling by squaring the ratio, then apply a threshold
    non_linear_scaled_ratio = (value_to_weight_ratio ** 2) * (value_to_weight_ratio > 0.25)
    # Use a different non-linear transformation for sparsity, here the logarithm (for positive values)
    sparsified_ratio = np.where(non_linear_scaled_ratio > 0.1, np.log(non_linear_scaled_ratio + 1), 0)
    # Combine the above transformations and apply a final threshold to enhance sparsity
    combined_ratio = sparsified_ratio * (value_to_weight_ratio > 0.15)
    return combined_ratio
```
