```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Non-linear scaling by logarithmic transformation and thresholding
    non_linear_scaled_ratio = np.log(value_to_weight_ratio) * (value_to_weight_ratio > 0.25)
    # Apply a diversity metric by ensuring at least one item is selected in each dimension
    diversity_metric = np.max(non_linear_scaled_ratio, axis=1)
    # Combine value-to-weight ratio, non-linear scaling, and diversity metric
    combined_heuristics = non_linear_scaled_ratio * diversity_metric
    # Filter out negative values and ensure non-zero values contribute more to the heuristic
    filtered_heuristics = np.where(combined_heuristics < 0, 0, combined_heuristics)
    return filtered_heuristics
```
