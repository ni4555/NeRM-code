```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    heuristics = value_to_weight_ratio * (value_to_weight_ratio >= 0.5)
    # Incorporate an additional factor to prioritize items with higher prize
    additional_factor = prize / np.sum(prize)
    # Combine the factors and normalize
    combined_heuristics = heuristics * additional_factor
    # Apply a simple threshold to filter out less promising items
    threshold = 0.2
    combined_heuristics = np.clip(combined_heuristics, None, threshold)
    return combined_heuristics
```
