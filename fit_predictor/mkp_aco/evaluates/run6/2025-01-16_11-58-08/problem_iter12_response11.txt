```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Apply a non-linear transformation that emphasizes items with high ratios
    non_linear_ratio = np.log(1 + value_to_weight_ratio)
    # Measure diversity by the variance of the non-linear ratio
    diversity_factor = np.var(non_linear_ratio)
    # Combine the non-linear ratio with the diversity factor
    combined_factor = non_linear_ratio + diversity_factor
    # Apply sparsity by selecting only high values and adding a penalty for small diversity
    sparsified_factor = np.where(combined_factor > 0.5, combined_factor, 0)
    return sparsified_factor
```
