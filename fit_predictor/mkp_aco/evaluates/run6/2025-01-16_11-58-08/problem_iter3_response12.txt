```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the value-to-weight ratio for each item
    value_to_weight_ratio = prize / np.prod(weight, axis=1)
    # Normalize the ratios by subtracting the minimum ratio to prevent negative values
    normalized_ratio = value_to_weight_ratio - np.min(value_to_weight_ratio)
    # Calculate the mean of the normalized ratios
    mean_normalized_ratio = np.mean(normalized_ratio)
    # Normalize the ratios to sum to 1
    heuristics = normalized_ratio / np.sum(normalized_ratio)
    # Apply a threshold to sparsify the heuristics
    sparsified_heuristics = (heuristics > mean_normalized_ratio) * 1
    return sparsified_heuristics
```
