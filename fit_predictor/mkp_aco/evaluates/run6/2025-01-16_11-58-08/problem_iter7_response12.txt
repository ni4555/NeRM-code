```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Non-linear scaling by squaring the ratio
    non_linear_scaled_ratio = value_to_weight_ratio ** 2
    # Apply domain-knowledge-driven simplification: emphasize positive ratios and reduce impact of small ratios
    simplified_ratio = non_linear_scaled_ratio * (value_to_weight_ratio > 0.1)
    # Balance normalization and variance by applying a logarithmic transformation
    normalized_ratio = np.log(1 + simplified_ratio)
    # Maintain sparsity by setting ratios below a threshold to zero
    heuristics = np.where(normalized_ratio > 0.05, normalized_ratio, 0)
    return heuristics
```
