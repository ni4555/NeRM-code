```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate normalized prize to weight ratio
    normalized_ratio = prize / np.sum(weight, axis=1)
    # Normalize the ratios to sum to 1
    ratio_sum = np.sum(normalized_ratio)
    heuristics = normalized_ratio / ratio_sum
    
    # Add a sparsity factor: if any weight dimension is less than a threshold, set heuristic to 0
    sparsity_threshold = 0.1  # Assuming a threshold value of 0.1 for example
    for i in range(len(weight)):
        if np.any(weight[i] < sparsity_threshold):
            heuristics[i] = 0
    
    return heuristics
```
