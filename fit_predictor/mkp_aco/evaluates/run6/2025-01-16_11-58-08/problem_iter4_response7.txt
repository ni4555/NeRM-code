```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the value-to-weight ratio for each item
    value_to_weight_ratio = prize / np.prod(weight, axis=1)
    # Normalize the ratios by subtracting the minimum ratio to prevent negative values
    normalized_ratio = value_to_weight_ratio - np.min(value_to_weight_ratio)
    # Normalize the prize to consider the global maximum prize value
    normalized_prize = prize / np.max(prize)
    # Combine the normalized ratio with the normalized prize
    combined_heuristics = normalized_ratio * normalized_prize
    # Apply a threshold to sparsify the heuristics
    sparsified_heuristics = (combined_heuristics > np.mean(combined_heuristics)) * 1
    return sparsified_heuristics
```
