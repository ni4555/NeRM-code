```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the relative importance of each item by its prize
    relative_importance = prize / np.sum(prize)
    
    # Calculate the density of each item based on the total weight it would contribute
    density = np.sum(weight, axis=1) / np.sum(weight)
    
    # Combine the relative importance and density to create heuristics
    combined_heuristics = relative_importance * density
    
    # Normalize the heuristics to ensure they sum to 1
    normalized_heuristics = combined_heuristics / np.sum(combined_heuristics)
    
    return normalized_heuristics
```
