```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the normalized prize-to-weight ratio
    normalized_ratio = prize / np.sum(weight, axis=1)
    
    # Calculate the average normalized ratio
    average_ratio = np.mean(normalized_ratio)
    
    # Sparsify the heuristics by setting elements below the average ratio to zero
    heuristics = np.where(normalized_ratio >= average_ratio, normalized_ratio, 0)
    
    # Optionally, you can further enhance the heuristics by penalizing items with high weight
    # that have a low normalized ratio, which might be less promising due to the weight constraint
    weight_penalty = weight / np.sum(weight, axis=1)
    heuristics *= 1 - weight_penalty
    
    return heuristics
```
