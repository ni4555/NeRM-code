```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    normalized_ratio = (value_to_weight_ratio - np.min(value_to_weight_ratio)) / (np.max(value_to_weight_ratio) - np.min(value_to_weight_ratio))
    non_linear_transformed_ratio = np.sqrt(normalized_ratio)
    combined_ratio = non_linear_transformed_ratio * value_to_weight_ratio
    sparsity_factor = np.exp(-combined_ratio)
    heuristics = combined_ratio * sparsity_factor
    heuristics /= np.sum(heuristics)
    return heuristics
```
