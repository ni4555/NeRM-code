```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the value-to-weight ratio for each item
    value_to_weight_ratio = prize / np.sum(weight, axis=1)
    # Apply non-linear scaling by raising the ratio to a power
    non_linear_scaled_ratio = (value_to_weight_ratio ** 2) * (value_to_weight_ratio > 0.5)
    # Calculate the diversity metric by using the interquartile range of the non-linear ratios
    Q1 = np.percentile(non_linear_scaled_ratio, 25)
    Q3 = np.percentile(non_linear_scaled_ratio, 75)
    IQR = Q3 - Q1
    # Normalize the non-linear scaled ratio based on diversity
    normalized_ratio = (non_linear_scaled_ratio - Q1) / (Q3 - Q1)
    # Scale the normalized ratio by the maximum ratio value to maintain a balance
    scaled_ratio = normalized_ratio / np.max(normalized_ratio)
    return scaled_ratio
```
