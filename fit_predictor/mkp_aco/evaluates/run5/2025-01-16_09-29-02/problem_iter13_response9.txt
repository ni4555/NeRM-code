```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    balance_factor = np.sum(weight, axis=1) / np.max(np.sum(weight, axis=1))
    cap_dominance = np.sum(prize) / np.max(prize)
    normalized_prize = prize / np.sum(prize)
    scale_factor = np.sqrt(np.sum(weight**2, axis=1)) / np.max(np.sqrt(np.sum(weight**2, axis=1)))
    heuristics = (balance_factor * cap_dominance * normalized_prize * scale_factor)
    pruning_threshold = 0.05
    heuristics[heuristics < pruning_threshold] = 0
    heuristics = heuristics / np.max(heuristics)
    return heuristics
```
