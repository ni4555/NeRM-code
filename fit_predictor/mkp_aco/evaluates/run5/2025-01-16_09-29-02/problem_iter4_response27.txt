```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    item_density = prize / np.sum(weight, axis=1)
    weight_sum = np.sum(weight, axis=1)
    normalized_density = (item_density - np.mean(item_density)) / np.std(item_density)
    average_density = np.mean(item_density)
    heuristics = normalized_density / (weight_sum ** 0.5) * np.exp(-weight_sum / 1000)
    heuristics *= (1 + average_density * (item_density - average_density))  # Incorporate the deviation from average
    heuristics = np.clip(heuristics, 0.01, 1)  # Ensure non-negative and bounded heuristics
    return heuristics
```
