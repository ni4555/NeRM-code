```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_per_weight = prize / np.sum(weight, axis=1)
    diversity_factor = np.sum(weight, axis=1) / (np.sqrt(weight**2).sum(axis=1) + 1e-8)
    normalized_prize = prize / np.sum(prize)
    sparsity = 1 / (np.sqrt(weight**2).sum(axis=1) + 1e-8)
    heuristics = (value_per_weight * diversity_factor * normalized_prize * sparsity) ** 0.5
    balance_factor = (np.mean(heuristics) + np.std(heuristics)) / 2
    heuristics = np.where(heuristics < balance_factor, 0, heuristics)
    return heuristics
```
