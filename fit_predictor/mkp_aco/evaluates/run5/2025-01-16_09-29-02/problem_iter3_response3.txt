```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_per_weight = prize / np.sum(weight, axis=1)
    diversity_factor = np.sum(weight, axis=1) / (np.sqrt(weight**2).sum(axis=1) + 1e-8)
    normalized_prize = prize / np.sum(prize)
    sparsity = 1 / (np.sqrt(weight**2).sum(axis=1) + 1e-8)
    non_linear_factor = np.log(1 + value_per_weight)
    heuristics = value_per_weight * diversity_factor * normalized_prize * sparsity * non_linear_factor
    heuristics[heuristics < 0] = 0  # Ensuring all heuristics are non-negative
    return heuristics
```
