```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_per_weight = prize / np.sum(weight, axis=1)
    diversity_factor = np.sum(weight, axis=1) / (np.linalg.norm(weight, axis=1) + 1e-8)
    normalized_prize = prize / np.sum(prize)
    sparsity = 1 / (np.linalg.norm(weight, axis=1) + 1e-8)
    combined_heuristic = value_per_weight * diversity_factor * normalized_prize * sparsity
    # Using a sigmoid function to transform the heuristic into a probability scale
    heuristic = 1 / (1 + np.exp(-combined_heuristic))
    return heuristic
```
