```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    value_per_weight = prize / np.sum(weight, axis=1)
    balance_factors = np.sum(weight, axis=1) / np.max(np.sum(weight, axis=1))
    normalized_prize = prize / np.sum(prize)
    sparsity = 1 / (np.linalg.norm(weight, axis=1) + 1e-8)
    heuristics = (value_per_weight * balance_factors * normalized_prize * sparsity)
    redundancy_threshold = 0.01
    heuristics[heuristics < redundancy_threshold] = 0
    heuristics = heuristics / np.max(heuristics)
    return heuristics
```
