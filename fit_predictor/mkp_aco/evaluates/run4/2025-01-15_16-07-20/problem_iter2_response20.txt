```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate the score based on prize and average weight per dimension
    score = prize / np.sum(weight, axis=1)
    
    # Calculate the score considering the sparsity of items across dimensions
    sparsity_score = np.prod(1 - weight, axis=1)
    
    # Combine both scores
    combined_score = score * sparsity_score
    
    # Apply a threshold to filter out less promising items
    threshold = np.mean(combined_score)
    heuristics = combined_score * (combined_score > threshold)
    
    return heuristics
```
