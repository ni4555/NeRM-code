```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    normalized_prize = prize / np.sum(prize)
    density = prize / np.sum(weight, axis=1)
    sparsity = (1 - np.sum(weight, axis=1)) / n
    dimension_factors = np.sum(weight, axis=0) / np.sum(weight, axis=1)
    return (normalized_prize * density * sparsity * np.prod(dimension_factors, axis=1)) * (1 - np.sum(weight**2, axis=1) / np.sum(weight, axis=1)**2)
```
