```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    normalized_prize = prize / np.sum(prize)
    density = prize / np.sum(weight, axis=1)
    sparsity = np.sum(weight, axis=1) / np.sum(weight, axis=1) ** 2
    dimension_factor = np.sum(weight**2, axis=1) / np.sum(weight, axis=1)
    
    heuristics = (normalized_prize + density - sparsity + dimension_factor) * (1 - sparsity)
    
    # Sparsify the heuristics by setting unpromising elements to zero
    heuristics[heuristics < 0] = 0
    
    return heuristics
```
