```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    normalized_prize = prize / np.sum(prize)
    density = prize / np.sum(weight, axis=1)
    complexity = np.sum(weight**2, axis=1) / np.sum(weight, axis=1)**2
    balance_score = (np.max(weight, axis=1) - np.min(weight, axis=1)) / np.max(weight, axis=1)
    sparsity = 1 - np.sum(weight**2, axis=1) / np.sum(weight, axis=1)**2
    
    # Adjusting heuristic value considering value density, complexity, balance, sparsity, and diversity
    heuristics = (normalized_prize * density - complexity) * balance_score * sparsity * np.sqrt(complexity)
    return heuristics
```
