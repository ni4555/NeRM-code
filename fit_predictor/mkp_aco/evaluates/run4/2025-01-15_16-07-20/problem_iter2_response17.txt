```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate normalized prize and weight
    normalized_prize = prize / np.sum(prize)
    normalized_weight = np.sum(weight, axis=1) / np.sum(weight, axis=1)
    
    # Calculate the heuristic value for each item
    # Using quadratic factors and diverse feature spaces
    heuristics = normalized_prize * normalized_weight * np.sqrt(normalized_prize) * (1 - (np.sum(weight**2, axis=1) / np.sum(weight, axis=1)**2))
    
    # Set elements below a threshold to zero
    threshold = np.mean(heuristics)
    heuristics[heuristics < threshold] = 0
    
    return heuristics
```
