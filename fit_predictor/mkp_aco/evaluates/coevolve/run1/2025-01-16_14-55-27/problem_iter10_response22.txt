```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n = prize.shape[0]

    def item_score(item_idx):
        weighted_ratio = prize[item_idx] / weight[item_idx, :].sum()
        sparsity = np.count_nonzero(weight[item_idx, :] > 0) / weight.shape[1]
        accumulated_weight = np.sum(weight[item_idx, :])
        return weighted_ratio + sparsity + np.log(accumulated_weight)

    scores = np.array([item_score(i) for i in range(n)])
    sorted_indices = np.argsort(-scores)
    heuristics = np.zeros(n)
    max_score = np.max(scores)
    threshold = max_score * 0.1

    for i in sorted_indices:
        heuristics[i] = scores[i]

    heuristics[heuristics < threshold] = 0

    heuristics /= np.sum(heuristics)
    return heuristics
```
