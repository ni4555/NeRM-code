```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n = prize.shape[0]
    m = weight.shape[1]

    # Dynamic item sorting based on weighted ratio
    weighted_ratio = (prize / weight.sum(axis=1)).ravel()
    combined_sorting_criterion = weighted_ratio
    sorted_indices = np.argsort(combined_sorting_criterion)[::-1]

    # Initialize the heuristic values array
    heuristics = np.zeros(n)

    # Calculate an initial heuristic value based on weighted ratio
    heuristics[sorted_indices] = combined_sorting_criterion[sorted_indices]

    # Normalize the heuristics so that they sum to 1
    heuristics /= np.sum(heuristics)

    return heuristics
```
