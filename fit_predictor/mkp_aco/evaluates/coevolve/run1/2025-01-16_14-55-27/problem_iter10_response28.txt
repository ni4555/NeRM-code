```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n = prize.shape[0]

    # Calculate weighted ratio, sparsity, and total prize
    weighted_ratio = prize / weight.sum(axis=1)
    sparsity = np.count_nonzero(weight, axis=1)
    total_prize = prize.sum()

    # Combine sorting criteria with sparsity and normalize
    combined_sorting_criterion = (weighted_ratio / sparsity) * (total_prize / n)
    normalized_criterion = combined_sorting_criterion / np.sum(combined_sorting_criterion)

    # Sort items based on normalized combined criteria
    sorted_indices = np.argsort(normalized_criterion)[::-1]

    # Initialize heuristic values array
    heuristics = np.zeros(n)

    # Assign heuristic values based on sorted order
    heuristics[sorted_indices] = normalized_criterion[sorted_indices]

    return heuristics
```
