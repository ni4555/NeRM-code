```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n = prize.shape[0]

    # Calculate weighted ratio and sparsity
    weighted_ratio = prize / weight.sum(axis=1)
    sparsity = np.count_nonzero(weight, axis=1)

    # Combine weighted ratio and sparsity into a single sorting criterion
    combined_criterion = weighted_ratio / (sparsity + 1e-8)

    # Sort items based on the combined criterion
    sorted_indices = np.argsort(-combined_criterion)

    # Normalize the combined criterion to create heuristics
    heuristics = combined_criterion[sorted_indices]

    # Normalize the heuristics so that they sum to 1
    heuristics /= heuristics.sum()

    return heuristics
```
