Fitness: 21.504213149884507

Description:
**Problem Description:**

Design a probabilistic optimization algorithm for the Multi-Knapsack Problem (MKP) that leverages a dynamic value-to-weight ratio heuristic to prioritize item selection. The algorithm shall employ a novel stochastic sampling technique to iteratively select items for each knapsack, ensuring that weight constraints are dynamically adjusted and refined throughout the optimization process. This approach will aim to maximize the total prize collected while adhering to strict weight limitations. The algorithm should incorporate advanced performance metrics and normalization techniques to enhance its robustness and scalability, enabling efficient solutions for large-scale MKP instances.

Code:
import numpy as np
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Assuming that the value-to-weight ratio is used for the heuristic
    # and that the constraint for each dimension is fixed to 1,
    # the heuristic for each item can be defined as the prize of the item.
    # Since the prize is the only value to consider and weight is a one-dimensional array
    # with all elements being 1, the heuristic is simply the prize itself.
    return prize