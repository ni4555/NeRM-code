```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate value-to-weight ratio for each item
    value_to_weight_ratio = prize / weight.sum(axis=1)
    
    # Normalize the value-to-weight ratio to ensure non-negative values
    min_ratio = np.min(value_to_weight_ratio)
    if min_ratio <= 0:
        value_to_weight_ratio = -value_to_weight_ratio + 1
    
    # Combine value-to-weight ratio with the number of dimensions
    # and sparsify the heuristics by setting values below a threshold to zero
    heuristic_threshold = np.mean(value_to_weight_ratio)
    heuristics = value_to_weight_ratio * (1 + np.log(1 + len(weight))) / (1 + heuristic_threshold)
    heuristics[heuristics < heuristic_threshold] = 0
    return heuristics
```
