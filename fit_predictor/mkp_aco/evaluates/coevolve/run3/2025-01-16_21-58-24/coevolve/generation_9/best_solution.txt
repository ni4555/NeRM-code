Fitness: 9.86604457911397

Description:
Design a stochastic hybrid optimization algorithm for the Multi-dimensional Knapsack Problem (MKP) that employs a heuristic based on the value-to-weight ratio to select items. The algorithm should balance exploration and exploitation by integrating a genetic algorithm for diversity and a Simulated Annealing (SA) for local search. The heuristic will prioritize items with a higher value-to-weight ratio, ensuring that the selected subset maximizes the total value while respecting the multi-dimensional weight and volume constraints. The fitness function will evaluate solutions based on constraint compliance and total value, aiming to minimize violations and enhance solution quality. Performance will be measured by the average solution value, the percentage of solutions meeting all constraints, and the computational efficiency, with a focus on achieving a balance between the exploration of diverse solution spaces and the exploitation of promising regions. The algorithm should follow a clear procedure, including initialization, selection of items based on value-to-weight ratio, genetic operators for evolution, and SA for refinement, followed by termination based on a predefined number of generations or convergence criteria.

Code:
import numpy as np
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Calculate value-to-weight ratio for each item
    value_to_weight_ratio = prize / weight.sum(axis=1)
    
    # Normalize the value-to-weight ratio to ensure non-negative values
    min_ratio = np.min(value_to_weight_ratio)
    if min_ratio <= 0:
        value_to_weight_ratio = -value_to_weight_ratio + 1
    
    # The heuristic is the inverse of the normalized value-to-weight ratio
    heuristics = 1 / value_to_weight_ratio
    return heuristics