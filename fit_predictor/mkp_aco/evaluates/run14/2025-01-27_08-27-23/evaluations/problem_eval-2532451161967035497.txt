import numpy as np

def heuristics_v2(prize, weight):
    n, m = prize.shape[0], weight.shape[1]
    total_prize_weight_ratio = prize.sum() / (weight.sum(axis=1, keepdims=True)).astype(float)
    cumulative_prize_weight_ratio = np.cumsum(total_prize_weight_ratio, axis=1)
    thresholds = cumulative_prize_weight_ratio[-1] / n
    thresholds = thresholds[::-1]
    heuristics = np.where(cumulative_prize_weight_ratio <= thresholds, prize, 0)
    return heuristics_matrix
