import numpy as np

def heuristics_v2(prize, weight):
    n, m = weight.shape
    heuristics = np.zeros(n)
    for i in range(m):  # Iterating through dimensions instead of items
        dimension_prizes = prize[weight[:, i] <= 1]  # Filter items with weight <= 1 in the current dimension
        if len(dimension_prizes) > 0:
            heuristics += np.median(dimension_prizes) / weight[:, i][weight[:, i] <= 1]  # Aggregate median ratios
    heuristics = heuristics / m  # Average over dimensions
    return heuristics_matrix
