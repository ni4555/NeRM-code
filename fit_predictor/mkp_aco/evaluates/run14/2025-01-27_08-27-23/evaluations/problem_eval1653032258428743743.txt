importance weighted by its maximum dimension's inverse and its proportion to total item weights.}

```python
import numpy as np

def heuristics_v2(prize, weight):
    n, m = prize.shape[0], weight.shape[1]
    max_weight = np.max(weight, axis=1)
    heuristics = np.zeros(n)
    for i in range(n):
        item_proportion = prize[i] / np.sum(prize)
        max_weight_inv = 1 / max_weight[i]
        heuristics[i] = item_proportion * max_weight_inv
    heuristics_matrix = heuristics
    return heuristics_matrix
