import numpy as np

def heuristics_v2(prize, weight):
    n, m = weight.shape
    heuristics = np.zeros(n)
    for i in range(n):
        # Calculate weighted average prize for each item based on its weight dimension
        weighted_avg_prize = np.sum(prize * weight[i]) / np.sum(weight[i])
        # Add a penalty for items with low prize per unit weight
        penalty = np.log1p(np.min(prize / weight[i]))
        heuristics[i] = weighted_avg_prize - penalty
    return heuristics_matrix
