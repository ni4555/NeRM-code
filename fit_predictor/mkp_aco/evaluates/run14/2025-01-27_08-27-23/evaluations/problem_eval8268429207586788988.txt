import numpy as np

def heuristics_v2(prize, weight):
    n, m = prize.shape[0], weight.shape[1]
    # Create a matrix with all ones to facilitate the computation
    ones_matrix = np.ones((n, m))
    # Initialize the heuristics matrix
    heuristics_matrix = np.zeros((n,))
    # For each item, calculate the normalized prize
    normalized_prize = prize / np.sum(prize)
    # For each dimension, compute the sum of weights for items in the same dimension
    dimension_weight_sums = np.sum(weight, axis=1)
    # For each item, compute the heuristic based on the given formula
    for i in range(n):
        heuristics_matrix[i] = normalized_prize[i] * dimension_weight_sums * (1 - weight[i])
    return heuristics_matrix
