import numpy as np

def heuristics_v2(prize, weight):
    n, m = prize.shape[0], weight.shape[1]
    heuristics = np.zeros(n)
    for i in range(n):
        valid_indices = np.sum(weight[:i+1] <= 1, axis=1) == m
        cumulative_prize = np.sum(prize[:i+1][valid_indices])
        cumulative_weight = np.sum(weight[:i+1][valid_indices], axis=1)
        weight_discount = np.max(1 / cumulative_weight[valid_indices], where=cumulative_weight > 0)
        if weight_discount == 0:
            heuristics[i] = 0
        else:
            heuristics[i] = cumulative_prize / weight_discount
    return heuristics_matrix
