import numpy as np

def heuristics_v2(prize, weight):
    n, m = prize.shape[0], weight.shape[1]
    max_weighted_ratios = np.zeros(n)
    for j in range(m):
        if np.any(weight[:, j] == 0):
            max_ratio = np.nanmax(prize / (weight[:, j] / np.nanmax(weight[:, j])))
        else:
            max_ratio = np.nanmax(prize / weight[:, j])
        max_weighted_ratios += max_ratio * weight[:, j]
    max_weighted_ratios = max_weighted_ratios / np.sum(weight)
    sorted_indices = np.argsort(max_weighted_ratios)[::-1]
    heuristics_matrix = np.argsort(-sorted_indices)
    return heuristics_matrix
