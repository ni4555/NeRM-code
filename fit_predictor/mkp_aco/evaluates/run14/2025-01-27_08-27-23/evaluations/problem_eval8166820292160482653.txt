def heuristics_v2(prize, weight):
    n, m = prize.shape[0], weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    # Calculate the product of dimension probabilities
    probability_of_inclusion = 1.0
    for dimension_weight in normalized_weight:
        probability_of_inclusion *= dimension_weight
    # Adjust for weight constraint
    probability_of_inclusion /= 1.0 - probability_of_inclusion
    # Multiply the prize by the probability of inclusion to get the heuristics
    weighted_probabilities = prize * probability_of_inclusion
    heuristics = weighted_probabilities.sum(axis=1)
    return heuristics_matrix
