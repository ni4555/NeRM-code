import numpy as np

def heuristics_v2(prize, weight):
    n, m = weight.shape
    heuristics = np.zeros(n)
    total_average = np.mean(prize / weight.sum(axis=1))
    for i in range(n):
        valid_indices = np.all(weight[:i+1] <= 1, axis=1)
        cumulative_prize = np.sum(prize[:i+1][valid_indices])
        cumulative_weight = np.sum(weight[:i+1][valid_indices], axis=1)
        if np.any(cumulative_weight > 1):
            heuristics[i] = 0
        else:
            heuristics[i] = cumulative_prize / np.prod(cumulative_weight) / total_average
    return heuristics_matrix
