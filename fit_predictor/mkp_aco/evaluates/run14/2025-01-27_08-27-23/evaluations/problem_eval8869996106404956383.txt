importance or "promise" of each item in the knapsack problem by evaluating a specific metric related to the prize and weight.

New Algorithm Description:
{Select items for inclusion based on the maximum cumulative ratio of prize to a weighted sum of item-specific weights, with each item's weight contributing equally to the sum across all dimensions.}

Implementation:
```python
import numpy as np

def heuristics_v2(prize, weight):
    n, m = prize.shape[0], weight.shape[1]
    heuristics = np.zeros(n)
    for i in range(n):
        max_cumulative_ratio = 0
        cumulative_weight = 0
        for j in range(m):
            cumulative_weight += weight[i, j]
        for j in range(m):
            ratio = prize[i] / cumulative_weight
            if ratio > max_cumulative_ratio:
                max_cumulative_ratio = ratio
        heuristics[i] = max_cumulative_ratio
    return heuristics_matrix
