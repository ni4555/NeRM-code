import numpy as np

def heuristics_v2(prize, weight):
    n, m = prize.shape[0], weight.shape[1]
    heuristics = np.zeros(n)
    dimension_count = np.sum(weight, axis=1)
    cumulative_dimension_count = np.zeros(n)
    
    for i in range(n):
        remaining_dimensions = np.sum(dimension_count[:i+1])
        weighted_ratio = prize[i] / remaining_dimensions if remaining_dimensions > 0 else 0
        heuristics[i] = weighted_ratio
        cumulative_dimension_count[i] = remaining_dimensions

    return heuristics_matrix
