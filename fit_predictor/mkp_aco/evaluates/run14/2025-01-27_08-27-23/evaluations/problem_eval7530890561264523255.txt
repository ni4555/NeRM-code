def heuristics_v2(prize, weight):
    n, m = prize.shape[0], weight.shape[1]
    heuristics = np.zeros(n)
    max_cumulative_ratio = 0
    for i in range(n):
        cumulative_ratio = sum(prize[i] / (weight[i, j] + 1e-6) for j in range(m))
        if cumulative_ratio > max_cumulative_ratio:
            heuristics[i] = cumulative_ratio
            max_cumulative_ratio = cumulative_ratio
    return heuristics_matrix
