import numpy as np

def heuristics_v2(prize, weight):
    n, m = prize.shape[0], weight.shape[1]
    heuristics = np.zeros(n)
    avg_weight = np.mean(weight, axis=1)
    std_dev_weight = np.std(weight, axis=1)
    for i in range(n):
        avg_ratio = np.sum(prize) / (np.sum(avg_weight) + 1e-6)  # Adding a small value to avoid division by zero
        std_dev_ratio = prize[i] / (std_dev_weight[i] + 1e-6)  # Adding a small value to avoid division by zero
        heuristics[i] = (avg_ratio + std_dev_ratio) / 2
    return heuristics_matrix
