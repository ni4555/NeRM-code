def heuristics_v2(prize, weight):
    n, m = prize.shape[0], weight.shape[1]
    heuristics = np.zeros(n)
    for i in range(n):
        avg_weight = np.sum(weight[i]) / m
        heuristics[i] = prize[i] / avg_weight if avg_weight != 0 else 0
        if np.any(weight[i] > 1):  # Check if any weight dimension exceeds the constraint of 1
            heuristics[i] *= 0.5  # Apply a penalty for excessive dimensionality
    return heuristics_matrix
