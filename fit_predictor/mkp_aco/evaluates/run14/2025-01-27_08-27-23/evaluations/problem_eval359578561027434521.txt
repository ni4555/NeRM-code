import numpy as np

def heuristics_v2(prize, weight):
    n, m = prize.shape[0], weight.shape[1]
    heuristics = np.zeros(n)
    total_weight = np.sum(weight, axis=1)
    for i in range(n):
        weighted_prize_sum = np.sum(prize[i] * weight[i])  # Calculate the weighted prize sum for the item
        normalized_weight_sum = np.sum(weight[i])  # Normalize the weight sum across dimensions
        adjusted_weight_sum = (total_weight[i] + 1) * normalized_weight_sum  # Adjust the sum for each dimension
        heuristics[i] = weighted_prize_sum / adjusted_weight_sum
    return heuristics_matrix
