import numpy as np

def heuristics_v2(prize, weight):
    n, m = prize.shape[0], weight.shape[1]
    heuristics = np.zeros(n)
    cumulative_probabilities = np.zeros((n, m))

    for i in range(n):
        for j in range(m):
            cumulative_probabilities[i, j] = (cumulative_probabilities[i, j-1] + prize[i]) / (weight[i, j] + cumulative_probabilities[i, j-1] + 1e-6)
        
        if np.sum(weight[i]) > 1:
            max_probability = np.max(cumulative_probabilities[i])
            max_ratio = max_probability / np.sum(prize)
            heuristics[i] = max_ratio
        else:
            heuristics[i] = np.sum(prize) / (np.sum(weight[i]) + 1e-6)
    
    return heuristics_matrix
