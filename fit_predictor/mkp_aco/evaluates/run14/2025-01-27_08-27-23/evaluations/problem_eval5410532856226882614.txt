import numpy as np

def heuristics_v2(prize, weight):
    n, m = prize.shape[0], weight.shape[1]
    heuristics = np.zeros(n)
    for i in range(n):
        valid_indices = np.sum(weight[:i+1] <= 1, axis=1) == m
        cumulative_prize = np.sum(prize[:i+1][valid_indices])
        cumulative_weight = np.sum(weight[:i+1][valid_indices], axis=1)
        if np.any(cumulative_weight > 1):
            heuristics[i] = 0
        else:
            score = cumulative_prize / np.prod(cumulative_weight)
            # Normalize the score based on the number of valid dimensions
            valid_item_count = np.sum(valid_indices)
            if valid_item_count == 0:
                heuristics[i] = 0
            else:
                heuristics[i] = score / valid_item_count
    return heuristics_matrix
