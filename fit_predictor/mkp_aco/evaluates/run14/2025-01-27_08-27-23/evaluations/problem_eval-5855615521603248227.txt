import numpy as np

def heuristics_v2(prize, weight):
    n, m = prize.shape[0], weight.shape[1]
    heuristics = np.zeros(n)
    penalty_weight = np.ones(n)
    for item in range(n):
        fitness = -prize[item] + np.sum(weight[item, :])  # Fitness function: maximize prize, minimize weight
        penalty = np.abs(prize[item] - np.sum(weight[item, :]))
        fitness = fitness + (penalty * penalty_weight[item])
        heuristics[item] = fitness / np.sum([fitness for _ in range(n)])
    return heuristics_matrix
