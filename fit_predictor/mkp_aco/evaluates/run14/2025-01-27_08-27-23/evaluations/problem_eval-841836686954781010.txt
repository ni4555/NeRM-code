import numpy as np

def heuristics_v2(prize, weight):
    n, m = prize.shape[0], weight.shape[1]
    heuristics = np.zeros(n)
    for i in range(n):
        valid_indices = np.sum(weight[:i+1] <= 1, axis=1) == m
        cumulative_prize = np.sum(prize[:i+1][valid_indices])
        cumulative_weight = np.sum(weight[:i+1][valid_indices], axis=1)
        max_ratio = np.max(cumulative_prize / cumulative_weight)
        space_ratio = np.prod(np.maximum(1, 1 - weight[:i+1][valid_indices])) / np.prod(cumulative_weight)
        heuristics[i] = max_ratio * space_ratio
    return heuristics_matrix
