import numpy as np

def heuristics_v2(prize, weight):
    n, m = prize.shape[0], weight.shape[1]
    heuristics = np.zeros(n)
    for i in range(n):
        # Using weighted sum of probabilities, adjusted by a multiplicative factor
        max_score = 0
        for j in range(m):
            score = np.prod([np.log((prize[i] / (weight[i, j] + 1e-6))) / (j + 1) for _ in range(int(prize[i]))]) / np.log(int(prize[i]) + 1)
            max_score = max(max_score, score)
        heuristics[i] = max_score
    return heuristics_matrix
