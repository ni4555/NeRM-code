import numpy as np

def heuristics_v2(prize, weight):
    n, m = prize.shape[0], weight.shape[1]
    heuristics = np.zeros(n)
    cumulative_values = np.cumsum(prize)
    for i in range(n):
        weight_exceeds = np.any(weight[i, :] > 1)
        weight_within_limit = np.all(weight[i, :] <= 1)
        if weight_exceeds or not weight_within_limit:
            heuristics[i] = 0
        else:
            if i == 0:
                heuristics[i] = 1.0
            else:
                heuristics[i] = cumulative_values[i] / np.prod(cumulative_values[:i+1])
    return heuristics_matrix
