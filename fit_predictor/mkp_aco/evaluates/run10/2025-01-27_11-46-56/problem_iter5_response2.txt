```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    max_utility = utility.max(axis=1)
    diversity = np.apply_along_axis(lambda x: np.std(x), axis=1, arr=utility)
    bounded_utility = np.clip(utility, 0, 1)
    heuristic = max_utility + diversity - bounded_utility
    return heuristic
```
