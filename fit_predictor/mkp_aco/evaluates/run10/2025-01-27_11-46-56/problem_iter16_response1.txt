```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    diversity_factor = np.abs(np.random.randn(*utility.shape)) * 0.1 + 1.0  # Add small noise and ensure diversity_factor is positive
    heuristic = utility * diversity_factor
    normalized_heuristic = heuristic / heuristic.sum(axis=1, keepdims=True)  # Normalize heuristics
    return normalized_heuristic
```
