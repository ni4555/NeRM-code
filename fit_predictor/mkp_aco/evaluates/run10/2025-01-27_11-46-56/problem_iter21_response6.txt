```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    diversity = (utility - utility.mean(axis=1, keepdims=True)) / utility.std(axis=1, keepdims=True)
    adaptive_factor = diversity * (utility > utility.mean(axis=1, keepdims=True))
    heuristic_scores = adaptive_factor * (utility > utility.max(axis=1, keepdims=True))
    sparsified_scores = np.where(heuristic_scores > 0, heuristic_scores, 0)
    return sparsified_scores
```
