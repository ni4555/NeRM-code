```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    diversity_factor = np.random.normal(0, 0.05, utility.shape[0])  # Use normal distribution for randomness
    max_utility = utility.max(axis=1)
    balanced_heuristic = (max_utility + utility.mean(axis=1)) / 2 + diversity_factor
    return balanced_heuristic
```
