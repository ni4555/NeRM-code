```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    max_utility = utility.max(axis=1)
    diversity_score = np.sum((utility - max_utility[:, np.newaxis])**2, axis=1)
    base_score = normalized_weight.sum(axis=1)
    dynamic_metric = base_score - max_utility
    balanced_heuristic = (max_utility + diversity_score) / (dynamic_metric + 1e-5)
    heuristic = balanced_heuristic * dynamic_metric
    heuristic[heuristic < 0] = 0
    return heuristic
```
