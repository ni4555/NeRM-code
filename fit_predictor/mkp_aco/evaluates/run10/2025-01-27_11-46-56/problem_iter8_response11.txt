```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n, m = weight.shape
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    diversity = np.sum((utility - utility.mean(axis=1, keepdims=True)) ** 2, axis=1)
    max_diversity = diversity.max()
    normalized_diversity = diversity / max_diversity
    heuristic = utility.mean(axis=1) + normalized_diversity * 0.5
    normalized_heuristic = heuristic / heuristic.sum()  # Normalize to ensure sum is 1
    return normalized_heuristic
```
