```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n, m = weight.shape
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    max_utility = utility.max(axis=1)
    diversity_factor = np.sum((utility - max_utility[:, np.newaxis])**2, axis=1)
    variance_factor = np.var(utility, axis=1)
    entropy = -np.sum(utility * np.log(utility + 1e-10), axis=1)  # Add a small constant to avoid log(0)
    heuristic = max_utility + diversity_factor + variance_factor + entropy
    return heuristic
```
