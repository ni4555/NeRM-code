```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    max_utility = utility.max(axis=1)
    diversity_noise = np.random.normal(0, 0.01, prize.shape)
    diversity_factor = np.exp(-np.abs(utility - max_utility))
    adaptability_factor = np.exp(np.random.normal(0, 0.05, prize.shape))
    heuristic_values = max_utility * diversity_factor * adaptability_factor + diversity_noise
    heuristic_values[heuristic_values < 0] = 0
    return heuristic_values
```
