```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n, m = weight.shape
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    max_utility = utility.max(axis=1)
    diversity_factor = np.sum((utility - max_utility[:, np.newaxis])**2, axis=1)
    # Normalize diversity_factor by its maximum to avoid domination by very diverse items
    normalized_diversity = diversity_factor / diversity_factor.max()
    heuristic = max_utility + normalized_diversity
    return heuristic
```
