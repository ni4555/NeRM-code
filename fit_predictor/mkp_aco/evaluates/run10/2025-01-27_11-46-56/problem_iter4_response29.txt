```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    absolute_weight = np.abs(weight)
    normalized_weight = absolute_weight / absolute_weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    max_utility = utility.max(axis=1)
    diversity_factor = 1 / (1 + np.sum(normalized_weight**2, axis=1, keepdims=True))
    heuristic = max_utility * diversity_factor
    return heuristic
```
