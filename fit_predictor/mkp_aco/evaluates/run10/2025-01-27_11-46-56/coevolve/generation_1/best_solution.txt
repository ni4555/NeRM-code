Fitness: inf

Description:
Utilizing hybrid metaheuristics to optimize the selection of item subsets in Multi-Knapsack Problems (MKP), focusing on dynamic weight distribution and adaptive heuristic sampling to enhance prize maximization and constraint adherence.

Code:
import numpy as np
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n, m = prize.shape[0], weight.shape[1]
    heuristics = np.zeros(n)
    
    # Dynamic weight distribution
    weighted_sum = prize / weight.sum(axis=1)
    
    # Adaptive heuristic sampling
    samples = np.random.rand(n)
    heuristics = (weighted_sum * samples > np.random.rand(n)).astype(float)
    
    # Normalize heuristics to ensure sum of probabilities is 1
    heuristics /= heuristics.sum()
    
    return heuristics