Fitness: 18.554145943681814

Description:
The objective is to develop a robust optimization algorithm for the Multiple Knapsack Problem (MKP), which involves selecting item subsets to maximize total prize collection while adhering to strict multi-dimensional weight constraints. The algorithm should incorporate a dynamic adaptive weight allocation mechanism to efficiently partition knapsacks, and utilize a refined heuristic-based sampling strategy to ensure precise subset selection. This approach aims to enhance problem-solving efficiency by focusing on the dynamics of the MKP, promoting diversity in solutions, and applying normalization techniques to optimize the allocation process.

Code:
import numpy as np
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    max_utility = utility.max(axis=1)
    return max_utility