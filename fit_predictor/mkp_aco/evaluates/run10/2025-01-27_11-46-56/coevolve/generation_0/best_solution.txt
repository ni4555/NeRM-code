Fitness: inf

Description:
Solving Multiple Knapsack Problems (MKP) through stochastic solution sampling based on "heuristics". MKP involves selecting a subset of items to maximize the total prize collected, subject to multi-dimensional maximum weight constraints.

Code:
import numpy as np
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    # Initialize the heuristic values with zeros
    heuristics = np.zeros_like(prize, dtype=np.float64)
    
    # Calculate the normalized weight for each item in each dimension
    normalized_weights = weight / np.sum(weight, axis=1, keepdims=True)
    
    # Calculate the heuristic based on the ratio of prize to normalized weight
    heuristics = prize * np.prod(normalized_weights, axis=1)
    
    return heuristics