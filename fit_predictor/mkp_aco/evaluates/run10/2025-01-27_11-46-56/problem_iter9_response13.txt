```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    diversity = np.sum((utility - utility.mean(axis=1, keepdims=True)) ** 2, axis=1)
    normalized_diversity = diversity / diversity.max()
    max_utility = utility.max(axis=1)
    heuristic_value = max_utility + normalized_diversity
    heuristic_value[heuristic_value < 0] = 0  # Sparsify by setting unpromising elements to zero
    return heuristic_value
```
