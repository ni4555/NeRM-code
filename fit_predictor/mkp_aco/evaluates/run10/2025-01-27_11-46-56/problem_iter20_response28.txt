```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    # Calculate normalized weights along each dimension
    normalized_weight = weight / np.sum(weight, axis=0)
    # Calculate utility for each item
    utility = prize / np.sum(weight, axis=1)
    # Use a simple heuristic based on utility, considering diversity
    heuristic = utility * (1 / np.sum(normalized_weight, axis=1))
    return heuristic
```
