```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    diversity = np.abs(np.random.randn(n))  # Introduce random diversity
    time_sensitivity = np.exp(-np.arange(n) / 10)  # Time-sensitivity factor
    max_utility = utility.max(axis=1)
    combined_heuristic = max_utility * diversity * time_sensitivity
    return combined_heuristic
```
