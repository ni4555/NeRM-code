```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    diversity = np.sum(np.abs(utility - utility.mean(axis=1, keepdims=True)), axis=1)
    max_utility = utility.max(axis=1)
    time_sensitivity = np.sum(normalized_weight, axis=1)  # Assuming 1 represents the time-sensitivity of the item
    heuristic = max_utility + diversity * 0.1 - time_sensitivity * 0.01
    return heuristic
```
