```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n = weight.shape[0]
    
    # Normalize prize based on its maximum value
    max_prize = prize.max()
    normalized_prize = prize / max_prize
    
    # Calculate utility using normalized prize and inverse of weight
    utility = normalized_prize / weight.sum(axis=1, keepdims=True)
    
    # Use maximum utility as heuristic score
    max_utility = utility.max(axis=1)
    
    # Normalize the max utility to ensure that the sum of all heuristics is 1
    max_utility /= max_utility.sum()
    
    return max_utility
```
