```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n, m = weight.shape
    # Normalize weights within each dimension
    normalized_weight = weight / np.sum(weight, axis=0, keepdims=True)
    # Calculate utility for each item
    utility = prize / np.sum(weight, axis=1, keepdims=True)
    # Adjust utility based on normalized weights
    adjusted_utility = utility * np.sum(normalized_weight, axis=1, keepdims=True)
    # Calculate maximum adjusted utility for each item
    max_utility = adjusted_utility.max(axis=1)
    return max_utility
```
