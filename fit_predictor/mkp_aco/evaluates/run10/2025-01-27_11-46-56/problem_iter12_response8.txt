```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n, m = weight.shape

    # Normalize the prize and weight vectors to have a mean of 1 for each
    normalized_prize = (prize - prize.mean()) / prize.std()
    normalized_weight = (weight - weight.mean(axis=1, keepdims=True)) / weight.std(axis=1, keepdims=True)

    # Calculate utility based on normalized prize and normalized weight
    utility = normalized_prize / normalized_weight.sum(axis=1, keepdims=True)

    # Calculate the maximum utility for each item
    max_utility = utility.max(axis=1)

    return max_utility
```
