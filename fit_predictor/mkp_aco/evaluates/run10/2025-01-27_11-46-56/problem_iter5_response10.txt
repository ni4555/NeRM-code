```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    diversity = np.linalg.norm(utility, axis=1)
    max_utility = utility.max(axis=1)
    max_diversity = diversity.max(axis=1)
    bounded_utility = np.clip(utility, 0, 1)
    heuristics = bounded_utility * (max_utility / max_diversity)
    heuristics[diversity < 0.1] = 0  # Prune low diversity items
    return heuristics
```
