```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    max_utility = utility.max(axis=1)
    diversity_factor = np.mean(utility, axis=1)
    balanced_heuristics = max_utility - diversity_factor
    return np.where(balanced_heuristics < 0, 0, balanced_heuristics)
```
