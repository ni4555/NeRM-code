```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / (normalized_weight.sum(axis=1, keepdims=True) + 1e-6)  # Adding a small constant to avoid division by zero
    max_utility = utility.max(axis=1)
    diversity_factor = np.mean(utility, axis=1)
    heuristics = max_utility + diversity_factor
    heuristics[heuristics < 0] = 0  # Sparsifying by setting low values to zero
    return heuristics
```
