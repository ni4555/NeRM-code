```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n, m = weight.shape
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    max_utility = utility.max(axis=1)
    diversity = np.std(utility, axis=1)
    heuristic = max_utility + diversity
    heuristic_weighted = heuristic * (1 / np.arange(1, n+1))  # Weight by inverse item index
    heuristic_normalized = heuristic_weighted / heuristic_weighted.sum()
    return heuristic_normalized
```
