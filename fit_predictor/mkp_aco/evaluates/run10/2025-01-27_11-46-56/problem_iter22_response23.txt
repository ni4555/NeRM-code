```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n, m = weight.shape
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    
    # Generate random exploration factors for diversity
    exploration_factor = np.random.normal(0, 0.1, size=utility.shape)
    
    # Apply utility, exploration, and peak selection
    heuristic = utility * exploration_factor
    heuristic = np.exp(heuristic) / (1 + np.exp(heuristic))
    
    # Normalize the heuristic values
    normalized_heuristic = heuristic / heuristic.sum(axis=1, keepdims=True)
    
    return normalized_heuristic.sum(axis=1)
```
