```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    max_utility = utility.max(axis=1)
    robust_factor = utility.mean(axis=1)
    diversity_factor = np.random.rand(len(utility))
    heuristic_values = max_utility * robust_factor * diversity_factor
    sparsified_heuristics = np.where(heuristic_values > 0.5, heuristic_values, 0)
    return sparsified_heuristics
```
