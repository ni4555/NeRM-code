```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    diversity_factor = np.sum(weight, axis=1) / (m * weight.sum(axis=1, keepdims=True))
    heuristic_score = utility * diversity_factor
    heuristic_score[heuristic_score < 0.5] = 0  # Sparsify by setting low values to zero
    return heuristic_score
```
