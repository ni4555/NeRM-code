```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n, m = weight.shape

    # Normalize the prize to have a mean of 1
    normalized_prize = prize / prize.mean()

    # Calculate utility based on normalized prize and weight
    utility = normalized_prize / weight.sum(axis=1, keepdims=True)

    # Calculate the standard deviation of utility for each item to encourage diversity
    std_utility = np.std(utility, axis=1)

    # Calculate the heuristic as a weighted sum of utility and diversity
    heuristic = utility * std_utility
    max_heuristic = heuristic.max(axis=1)

    return max_heuristic
```
