```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    diversity = np.random.rand(len(utility))
    time_sensitivity = np.exp(-np.arange(len(utility)) * 0.01)  # Decreasing with time
    heuristics = utility * diversity * time_sensitivity
    heuristics = np.clip(heuristics, 0, 1)  # Ensure heuristics are within [0, 1]
    return heuristics
```
