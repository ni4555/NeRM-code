```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n, m = weight.shape
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    diversity = np.sum((utility - utility.mean(axis=1, keepdims=True)) ** 2, axis=1)
    heuristic = utility.mean(axis=1) + diversity * 0.1
    heuristic = np.clip(heuristic, 0, 1)  # Bounded heuristic to avoid dominance
    normalized_heuristic = heuristic / heuristic.sum()  # Normalize the heuristics
    return normalized_heuristic
```
