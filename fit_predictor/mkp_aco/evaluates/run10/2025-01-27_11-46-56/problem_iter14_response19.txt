```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n, m = weight.shape

    # Normalize the prize to have a mean of 1
    normalized_prize = prize / prize.mean()

    # Calculate utility based on normalized prize and weight
    utility = normalized_prize / weight.sum(axis=1, keepdims=True)

    # Calculate the maximum utility for each item
    max_utility = utility.max(axis=1)

    # Calculate the average utility for each item
    average_utility = utility.mean(axis=1)

    # Normalize the max utility to get a heuristic score
    max_utility_normalized = max_utility / max_utility.max()

    # Incorporate the average utility to enhance individual item importance
    heuristic_score = max_utility_normalized + (average_utility / max_utility.max())

    return heuristic_score
```
