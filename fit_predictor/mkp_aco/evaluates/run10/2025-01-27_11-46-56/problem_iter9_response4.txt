```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    diversity = np.std(normalized_weight, axis=1)
    heuristic = (utility + diversity) / (utility + diversity).max()
    sparsified_heuristic = np.where(heuristic > 0.5, heuristic, 0)
    return sparsified_heuristic
```
