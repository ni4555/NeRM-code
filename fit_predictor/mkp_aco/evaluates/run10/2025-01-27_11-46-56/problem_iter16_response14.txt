```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    diversity_factor = np.exp(-utility)
    exploration_factor = np.random.normal(0, 0.1, size=utility.shape)
    heuristic = utility * diversity_factor * exploration_factor
    heuristic = np.clip(heuristic, a_min=0, a_max=1)
    normalized_heuristics = heuristic / heuristic.sum(axis=1, keepdims=True)
    return normalized_heuristics.sum(axis=1)
```
