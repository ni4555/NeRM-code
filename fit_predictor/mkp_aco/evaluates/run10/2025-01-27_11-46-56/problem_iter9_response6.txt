```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    diversity = np.exp(-utility.sum(axis=1))
    normalized_diversity = diversity / diversity.sum()
    max_utility = utility.max(axis=1)
    max_diversity = normalized_diversity.max(axis=1)
    heuristic = 0.5 * max_utility + 0.5 * max_diversity
    heuristic[heuristic < 0.1] = 0  # Sparsify the heuristic by setting unpromising elements to zero
    return heuristic
```
