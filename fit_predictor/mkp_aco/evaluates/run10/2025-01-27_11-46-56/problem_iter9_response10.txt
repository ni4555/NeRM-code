```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    diversity = np.sum(np.square(normalized_weight), axis=1)
    normalized_diversity = diversity / diversity.max()
    heuristic = utility * normalized_diversity
    max_heuristic = heuristic.max(axis=1)
    sparsified_heuristic = np.where(heuristic >= heuristic.max() / (m + 1), 1, 0)
    return sparsified_heuristic
```
