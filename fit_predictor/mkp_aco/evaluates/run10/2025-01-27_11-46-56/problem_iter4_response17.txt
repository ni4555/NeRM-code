```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n, m = weight.shape
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    item_utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    max_item_utility = item_utility.max(axis=1)
    utility_diversity = np.sum((item_utility - max_item_utility[:, np.newaxis])**2, axis=1)
    heuristic = max_item_utility + utility_diversity
    heuristic[heuristic < 0] = 0  # Avoid negative heuristic values
    return heuristic
```
