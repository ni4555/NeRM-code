```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n, m = weight.shape
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    max_utility = utility.max(axis=1)
    heuristic = max_utility
    # Apply a dynamic adaptive weight allocation mechanism by considering the sum of utilities
    weight_allocation = np.sum(utility, axis=1)
    heuristic *= weight_allocation / np.sum(weight_allocation)
    return heuristic
```
