```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    diversity = np.zeros_like(utility)
    for i in range(m):
        diversity[:, i] = np.exp(-utility[:, i])
    diversity_max = diversity.max(axis=1)
    combined_heuristics = utility + diversity_max
    heuristic_threshold = combined_heuristics.mean()
    heuristics = np.where(combined_heuristics > heuristic_threshold, combined_heuristics, 0)
    return heuristics
```
