```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weight = weight / weight.sum(axis=1, keepdims=True)
    utility = prize / normalized_weight.sum(axis=1, keepdims=True)
    diversity_score = np.sum(np.abs(utility - utility.mean(axis=1, keepdims=True)), axis=1)
    max_utility = utility.max(axis=1)
    max_diversity = diversity_score.max()
    heuristics = (max_utility + diversity_score / max_diversity) / 2
    heuristics[heuristics < 0.5] = 0  # Sparsify the heuristics
    return heuristics
```
