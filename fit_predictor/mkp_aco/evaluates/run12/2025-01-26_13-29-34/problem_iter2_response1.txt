```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    heuristic = np.zeros((prize.shape[0],))
    
    cumulative_weight = np.zeros_like(weight, dtype=float)
    cumulative_weight[:, 0] = weight[:, 0]
    for k in range(1, m):
        cumulative_weight[:, k] = cumulative_weight[:, k-1] + weight[:, k]

    for i in range(prize.shape[0]):
        total_prize = 0
        for j in range(i, prize.shape[0]):
            total_weight = np.sum(cumulative_weight[j, :])
            if total_weight > 1:
                break
            total_prize += prize[j]
        heuristic[i] = total_prize
    
    return heuristic
```
