```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    score = np.sum(prize * normalized_weights, axis=1)
    ratio = prize / (np.sum(weight, axis=1) + 1e-8)  # Avoid division by zero
    combined_score = score * ratio
    sparsified_score = np.exp(combined_score - np.max(combined_score)) / np.sum(np.exp(combined_score - np.max(combined_score)))
    sparsified_score = sparsified_score * (np.max(sparsified_score) - np.min(sparsified_score)) + np.min(sparsified_score)
    return sparsified_score
```
