```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    score = np.sum(prize * normalized_weights, axis=1)
    diversity = 1 / np.linalg.norm(weight, axis=1)
    importance_normalized = score / (np.sum(score) + 1e-8)  # Avoid division by zero
    combined_score = (importance_normalized * diversity) / (importance_normalized + diversity)
    threshold = np.percentile(combined_score, 75)  # Using 75th percentile as a threshold
    heuristics = (combined_score >= threshold)
    return heuristics
```
