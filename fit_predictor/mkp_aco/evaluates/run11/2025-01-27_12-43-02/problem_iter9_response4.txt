```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    relevance_score = np.sum(prize * normalized_weights, axis=1)
    diversity_score = np.sum((normalized_weights - np.mean(normalized_weights)) ** 2, axis=1)
    combined_score = (relevance_score + diversity_score) / (relevance_score + diversity_score + 1e-8)
    normalized_combined_score = combined_score / np.sum(combined_score)
    sparsified_score = np.where(normalized_combined_score > 0.1, normalized_combined_score, 0)  # Threshold at 10%
    return sparsified_score
```
