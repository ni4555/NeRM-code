```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    importance = np.sum(prize * normalized_weights, axis=1)
    diversity = np.apply_along_axis(lambda x: np.std(x), axis=1, arr=normalized_weights)
    combined_score = importance / (diversity + 1e-8)  # Avoid division by zero
    percentile_threshold = np.percentile(combined_score, 90)
    heuristics = combined_score >= percentile_threshold
    return heuristics
```
