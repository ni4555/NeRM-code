```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    score = np.sum(prize * normalized_weights, axis=1)
    ratio = prize / (np.sum(weight, axis=1) + 1e-8)  # Avoid division by zero
    combined_score = score * ratio

    # Calculate multiple scores to combine item attractiveness
    mean_score = np.mean(combined_score)
    median_score = np.median(combined_score)
    percentile_score = np.percentile(combined_score, 90)

    # Emphasize higher scores by combining scores with different emphasis
    emphasized_score = (combined_score - mean_score) * (combined_score > median_score) * (combined_score > percentile_score)
    
    # Threshold and convert to binary heuristic
    heuristics = emphasized_score > percentile_score
    return heuristics.astype(int)
```
