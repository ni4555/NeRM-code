```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    score = np.sum(prize * normalized_weights, axis=1)
    ratio = prize / (np.sum(weight, axis=1) + 1e-8)  # Avoid division by zero
    combined_score = score * ratio
    
    # Emphasize variance in scoring by using the difference from the mean
    variance_emphasized_score = combined_score - np.mean(combined_score)
    
    # Normalize scores based on global distribution
    importance_normalized = variance_emphasized_score / np.sum(np.abs(variance_emphasized_score))
    
    return importance_normalized
```
