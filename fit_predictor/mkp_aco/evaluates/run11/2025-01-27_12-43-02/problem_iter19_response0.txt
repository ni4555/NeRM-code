```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    # Calculate weight ratio for each item
    ratio = prize / np.sum(weight, axis=1)[:, None]
    # Calculate the importance of each item by taking the maximum ratio across dimensions
    importance = np.max(ratio, axis=1)
    # Normalize the importance scores
    importance_normalized = importance / np.sum(importance)
    # Use percentile thresholds to refine the importance
    threshold = np.percentile(importance_normalized, 90)
    # Sparsify the heuristics by setting scores below the threshold to zero
    heuristics = np.where(importance_normalized >= threshold, importance_normalized, 0)
    return heuristics
```
