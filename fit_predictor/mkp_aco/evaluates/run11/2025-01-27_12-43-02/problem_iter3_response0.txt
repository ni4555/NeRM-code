```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    value_score = np.sum(prize * normalized_weights, axis=1)
    diversity_score = np.sum((prize / np.linalg.norm(prize, axis=0)) ** 2, axis=0)
    sparsity_score = np.sum(weight != 0) / weight.shape[0]
    combined_score = value_score + diversity_score + sparsity_score
    sparsified_score = np.where(combined_score > np.percentile(combined_score, 95), combined_score, 0)
    return sparsified_score
```
