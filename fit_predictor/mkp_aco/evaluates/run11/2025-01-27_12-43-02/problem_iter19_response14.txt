```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.max(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    score = np.sum(prize * normalized_weights, axis=1)
    importance_normalized = score / np.sum(score)
    percentile_threshold = np.percentile(importance_normalized, 90)  # Set a high percentile for threshold
    importance_sparsified = (importance_normalized > percentile_threshold) * 1.0
    return importance_sparsified
```
