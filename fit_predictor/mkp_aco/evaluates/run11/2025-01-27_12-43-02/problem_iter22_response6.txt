```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n, m = weight.shape
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    importance = np.sum(prize * normalized_weights, axis=1)
    
    # Introduce randomness factor to ensure diversity
    randomness = np.random.rand(n)
    
    # Introduce diversity factor to enhance diversity
    diversity_factor = np.random.rand(n) * 0.1
    
    # Combine importance, randomness, and diversity into heuristic scores
    combined_heuristic = importance + randomness + diversity_factor
    
    # Normalize heuristic scores to sum to 1
    normalized_combined_heuristic = combined_heuristic / np.sum(combined_heuristic)
    
    return normalized_combined_heuristic
```
