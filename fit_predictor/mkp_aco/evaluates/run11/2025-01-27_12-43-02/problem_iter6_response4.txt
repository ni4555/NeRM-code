```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    score = np.sum(prize * normalized_weights, axis=1)
    median_score = np.median(score)
    sparsified_score = np.where(score >= median_score, score, 0)
    sparsified_score /= np.max(sparsified_score)  # Normalize to ensure maximum is 1
    threshold = np.percentile(sparsified_score, 90)  # Use 90th percentile as the threshold
    heuristics = sparsified_score > threshold
    return heuristics.astype(int)
```
