```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    score = np.sum(prize * normalized_weights, axis=1)
    diversity_score = 1 / np.linalg.norm(weight, axis=1)  # Diversity by inverse norm
    combined_score = (score + diversity_score) / (m + 1)  # Balance between score and diversity
    importance_normalized = combined_score / np.sum(combined_score)
    heuristics = np.where(importance_normalized > 0.5, importance_normalized, 0)  # Sparsify
    return heuristics
```
