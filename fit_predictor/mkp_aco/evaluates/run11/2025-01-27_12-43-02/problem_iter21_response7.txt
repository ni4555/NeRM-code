```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    importance = np.sum(prize * normalized_weights, axis=1)
    
    # Randomness factor to ensure diversity
    randomness = np.random.rand(len(importance))
    
    # Balancing importance with diversity
    diversity_factor = np.random.rand(len(importance)) * 0.1
    
    # Combined heuristic considering importance, randomness, and diversity
    combined_heuristic = importance + randomness - diversity_factor
    
    # Normalization
    normalized_combined_heuristic = combined_heuristic / np.sum(combined_heuristic)
    
    return normalized_combined_heuristic
```
