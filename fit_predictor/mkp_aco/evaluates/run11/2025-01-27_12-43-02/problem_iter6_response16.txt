```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    score = np.sum(prize * normalized_weights, axis=1)
    ratio = prize / (np.sum(weight, axis=1) + 1e-8)  # Avoid division by zero
    combined_score = score * ratio
    percentile_threshold = np.percentile(combined_score, 95)
    sparsified_score = np.where(combined_score > percentile_threshold, combined_score, 0)
    # Normalize and scale the scores between 0 and 1
    max_score = np.max(sparsified_score)
    min_score = np.min(sparsified_score)
    normalized_sparsified_score = (sparsified_score - min_score) / (max_score - min_score)
    return normalized_sparsified_score
```
