```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    importance = np.sum(prize * normalized_weights, axis=1)
    diversity = np.linalg.norm(weight, axis=1)
    combined_score = (importance / diversity) * (1 / (1 + (np.sum(weight, axis=1) / 10)))
    percentile_threshold = np.percentile(combined_score, 70)  # Adjust percentile as needed
    heuristic = combined_score >= percentile_threshold
    heuristic[heuristic < 0.01] = 0  # Set low-probability items to zero
    return heuristic
```
