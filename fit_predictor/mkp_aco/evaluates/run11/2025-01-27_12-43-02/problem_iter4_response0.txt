```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    score = np.sum(prize * normalized_weights, axis=1)
    ratio = prize / (np.sum(weight, axis=1) + 1e-8)  # Avoid division by zero
    combined_score = score * ratio

    # Calculate different scoring criteria
    mean_score = np.mean(combined_score)
    median_score = np.median(combined_score)
    standard_deviation_score = np.std(combined_score)

    # Use a combination of criteria to set thresholds
    threshold1 = mean_score + standard_deviation_score
    threshold2 = median_score + 0.5 * standard_deviation_score

    # Create heuristics based on thresholds
    heuristics = (combined_score > threshold1) | (combined_score > threshold2)
    return heuristics.astype(int)
```
