```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    score = np.sum(prize * normalized_weights, axis=1)
    ratio = prize / (np.sum(weight, axis=1) + 1e-8)
    combined_importance = score * ratio
    max_importance = np.max(combined_importance)
    min_importance = np.min(combined_importance)
    normalized_importance = (combined_importance - min_importance) / (max_importance - min_importance)
    threshold = np.percentile(normalized_importance, 90)
    heuristics = np.where(normalized_importance >= threshold, 1.0, 0.0)
```
