```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    
    # Calculate weight ratios for each item and dimension
    weight_ratios = weight / np.linalg.norm(weight, axis=1)[:, None]
    
    # Calculate normalized prizes
    normalized_prize = prize / np.linalg.norm(prize)
    
    # Calculate importance score based on the sum of weight ratios for each item
    importance_score = np.sum(weight_ratios * normalized_prize, axis=1)
    
    # Calculate a percentile threshold for sparsity control
    percentile_threshold = np.percentile(importance_score, 75)
    
    # Create heuristics by setting values below the percentile threshold to zero
    heuristics = importance_score >= percentile_threshold
    
    return heuristics
```
