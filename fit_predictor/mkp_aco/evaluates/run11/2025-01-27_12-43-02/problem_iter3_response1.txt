```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    value_score = np.sum(prize * normalized_weights, axis=1)
    diversity_score = np.sum(weight, axis=1) / np.sum(weight, axis=1).max()
    balance_score = 1 / (np.sum(weight, axis=1) + 1e-8)  # Avoid division by zero
    combined_score = value_score * diversity_score * balance_score
    smoothed_score = np.clip(combined_score, 0, 1)  # Normalize to range [0, 1]
    sparsified_score = smoothed_score * (combined_score > np.mean(combined_score))
    return sparsified_score
```
