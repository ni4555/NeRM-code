```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    score = np.sum(prize * normalized_weights, axis=1)
    diversity_score = np.argsort(score)[-int(0.1 * n):]  # Select top 10% by score for diversity
    importance_normalized = score / np.sum(score)
    
    # Combine importance and diversity
    diversity_weight = np.zeros(n)
    diversity_weight[diversity_score] = 1 / len(diversity_score)
    
    combined_heuristics = importance_normalized * diversity_weight
    return combined_heuristics
```
