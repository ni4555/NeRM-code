```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    score = np.sum(prize * normalized_weights, axis=1)
    diversity = 1 / np.linalg.norm(weight, axis=1)  # Diversity score
    importance_normalized = (score * diversity) / np.sum(score * diversity)
    threshold = np.sum(importance_normalized) / 2  # Dynamic threshold
    importance_normalized[importance_normalized < threshold] = 0  # Sparsify
    return importance_normalized
```
