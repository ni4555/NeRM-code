```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    # Calculate the normalized weight for each item
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    # Calculate the score based on the normalized weights
    score = np.sum(prize * normalized_weights, axis=1)
    # Calculate the importance based on the ratio of prize to weight
    importance = prize / (np.sum(weight, axis=1) + 1e-8)  # Add a small constant to avoid division by zero
    # Use the 90th percentile to set thresholds for importance
    importance_threshold = np.percentile(importance, 90)
    # Create the heuristics array where values above the threshold are set to 1, and below to 0
    heuristics = (importance >= importance_threshold).astype(float)
    return heuristics
```
