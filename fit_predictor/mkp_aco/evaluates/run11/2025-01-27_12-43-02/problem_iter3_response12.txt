```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    value_score = np.sum(prize * normalized_weights, axis=1)
    diversity_score = np.mean(normalized_weights)
    sparsity_score = np.sum(normalized_weights > 0.5)
    balance_score = np.mean(weight, axis=1) / np.sum(weight, axis=1)
    combined_score = (value_score + diversity_score + sparsity_score + np.mean(balance_score)) / 4
    sparsified_score = np.where(combined_score > np.percentile(combined_score, 90), combined_score, 0)
    return sparsified_score
```
