```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n = prize.shape[0]
    m = weight.shape[1]

    # Calculate normalized weight scores for each item
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    score = np.sum(prize * normalized_weights, axis=1)

    # Calculate diversity scores based on the distance from the mean normalized weight
    mean_normalized_weights = np.mean(normalized_weights)
    diversity_score = np.sum((normalized_weights - mean_normalized_weights)**2, axis=1)

    # Combine scores to get a heuristic measure
    combined_score = score + diversity_score

    # Normalize the combined score to get the importance of each item
    importance_normalized = combined_score / np.sum(combined_score, axis=0)
    
    return importance_normalized
```
