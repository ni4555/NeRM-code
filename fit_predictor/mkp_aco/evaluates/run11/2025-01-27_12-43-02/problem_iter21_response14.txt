```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    # Normalize weights per dimension
    normalized_weights = weight / np.sum(weight, axis=1)[:, None]
    # Calculate individual item scores based on prize to weight ratio
    item_scores = prize / (np.sum(weight, axis=1) + 1e-8)  # Avoid division by zero
    # Introduce randomness to encourage diversity in selection
    random_factor = np.random.rand(len(item_scores))
    # Calculate importance based on score and randomness
    importance = (item_scores + random_factor) / np.sum(item_scores + random_factor)
    # Normalize importance to sum to 1
    importance_normalized = importance / np.sum(importance)
    return importance_normalized
```
