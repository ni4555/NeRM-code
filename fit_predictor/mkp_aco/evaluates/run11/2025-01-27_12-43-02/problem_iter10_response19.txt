```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    # Calculate the ratio of prize to the sum of weights for each item
    ratio = prize / np.sum(weight, axis=1)[:, None]
    
    # Calculate the sum of the ratio over all dimensions for each item
    sum_ratio = np.sum(ratio, axis=1)
    
    # Normalize the sum of the ratio to get a score for each item
    score = sum_ratio / np.sum(sum_ratio)
    
    # Sparsify the score by setting items with low score to zero
    sparsity_threshold = np.percentile(score, 95)  # Choose a threshold based on the 95th percentile
    heuristics = (score >= sparsity_threshold).astype(float)
    
    return heuristics
```
