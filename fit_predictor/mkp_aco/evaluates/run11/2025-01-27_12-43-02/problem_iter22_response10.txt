```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n, m = weight.shape

    # Normalize weights
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]

    # Calculate importance based on prize-to-weight ratio
    ratio = prize / (np.sum(weight, axis=1) + 1e-8)
    importance = ratio * normalized_weights

    # Normalize importance scores
    importance_normalized = importance / np.sum(importance)

    # Apply a random factor for exploration-exploitation
    random_factor = np.random.rand(n)
    heuristics = importance_normalized * random_factor + (1 - random_factor) * importance_normalized

    return heuristics
```
