```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    value_score = np.sum(prize * normalized_weights, axis=1)
    ratio = prize / (np.sum(weight, axis=1) + 1e-8)
    combined_score = value_score * ratio
    # Calculate an adaptive threshold based on the average score of the selected items
    threshold = np.sum(combined_score * normalized_weights) / np.sum(normalized_weights)
    heuristics = combined_score > threshold
    return heuristics.astype(int)
```
