```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    score = np.sum(prize * normalized_weights, axis=1)
    diversity_score = np.max(normalized_weights, axis=1)
    importance_normalized = (score + diversity_score) / (2 * np.sum(score + diversity_score))
    sparsity_threshold = np.percentile(importance_normalized, 95)  # Set threshold for sparsity
    importance_normalized[importance_normalized < sparsity_threshold] = 0  # Sparsify
    return importance_normalized
```
