```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    importance = prize / np.linalg.norm(weight, axis=1)  # Importance of the item based on its prize
    sparsity = np.sum(weight, axis=1) / np.sum(weight, axis=0)  # Sparsity within the knapsack
    importance_normalized = importance / np.sum(importance)
    combined_score = importance_normalized * sparsity
    return combined_score
```
