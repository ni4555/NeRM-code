```python
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    normalized_weights = np.linalg.norm(weight, axis=1) / np.sum(weight, axis=1)[:, None]
    score = np.sum(prize * normalized_weights, axis=1)
    
    # Introduce randomness to encourage exploration
    random_noise = np.random.rand(len(score))
    
    # Normalize scores to balance importance and diversity
    importance_normalized = score / np.sum(score)
    
    # Adjust scores by adding randomness and normalize again
    combined_score = importance_normalized + random_noise
    combined_score = combined_score / np.sum(combined_score)
    
    return combined_score
```
