```python
def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    m = weight.shape[1]
    # Normalize the weights based on percentile
    for i in range(m):
        weight[:, i] = np.sort(weight[:, i])
        threshold = np.percentile(weight[:, i], 50)
        weight[:, i] = 1 if weight[:, i] > threshold else 0
    
    # Calculate importance scores
    importance_scores = prize / (np.sum(weight, axis=1) + 1e-8)
    
    # Normalize importance scores to balance exploration and exploitation
    normalized_scores = importance_scores / np.sum(importance_scores)
    
    return normalized_scores
```
