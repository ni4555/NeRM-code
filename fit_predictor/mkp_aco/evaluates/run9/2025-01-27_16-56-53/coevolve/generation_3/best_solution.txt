Fitness: -20.179418703822698

Description:
Optimizing the selection of item subsets in a multi-dimensional knapsack problem by integrating adaptive metaheuristic-based stochastic sampling. This approach aims to maximize combined reward through enhanced exploration of the solution space, balancing exploitation and exploration while respecting stringent weight limits. The algorithm prioritizes high-value item combinations and dynamically adjusts heuristics to ensure compliance with dimension-specific weight constraints, mitigating the risk of local optima and improving overall performance.

Code:
import numpy as np
import numpy as np

def heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:
    n, m = prize.shape[0], weight.shape[1]
    heuristic = np.dot(prize, np.sum(weight, axis=1)) / np.sum(weight**2, axis=1)
    return heuristic