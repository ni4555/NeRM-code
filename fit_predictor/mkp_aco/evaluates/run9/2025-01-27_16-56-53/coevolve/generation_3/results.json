{
  "generation": 3,
  "description": "Optimizing the selection of item subsets in a multi-dimensional knapsack problem by integrating adaptive metaheuristic-based stochastic sampling. This approach aims to maximize combined reward through enhanced exploration of the solution space, balancing exploitation and exploration while respecting stringent weight limits. The algorithm prioritizes high-value item combinations and dynamically adjusts heuristics to ensure compliance with dimension-specific weight constraints, mitigating the risk of local optima and improving overall performance.",
  "solutions": [
    {
      "code": "import numpy as np\nimport numpy as np\n\ndef heuristics_v2(prize: np.ndarray, weight: np.ndarray) -> np.ndarray:\n    n, m = prize.shape[0], weight.shape[1]\n    heuristic = np.dot(prize, np.sum(weight, axis=1)) / np.sum(weight**2, axis=1)\n    return heuristic",
      "fitness": -20.179418703822698,
      "execution_success": true,
      "error": null,
      "stdout_file": "coevolve\\generation_3\\stdout_0.txt",
      "code_file": "coevolve\\generation_3\\code_0.py"
    }
  ]
}