[page]
enable_katex = false
enable_code_highlight = true
required_languages = ["bash"]
tracking = { type = "umami", website_id = "c18ebe0b-2d3c-48ff-9cef-62c34bbadb04" }
url = "https://ai4co.github.io/reevo"

[metadata]
keywords = [
    "Automatic Algorithm Generation",
    "Evolutionary Algorithms",
    "LLM Agent",
    "Hyper Heuristics",
]
description = "We introduce ReEvo, a novel approach that harnesses the power of LLMs as Hyper-Heuristics for solving complex combinatorial optimization problems with minimal manual intervention."
banner_image = "static/images/reevo.png"
# twitter_banner_image = ""
# twitter_large_image = ""

[paper]
title = "ReEvo: Large Language Models as Hyper-Heuristics with Reflective Evolution"
conference = "NeurIPS 2024"
abstract = """
The omnipresence of NP-hard combinatorial optimization problems (COPs) compels domain experts to engage in trial-and-error heuristic design. The long-standing endeavor of design automation has gained new momentum with the rise of large language models (LLMs). This paper introduces Language Hyper-Heuristics (LHHs), an emerging variant of Hyper-Heuristics that leverages LLMs for heuristic generation, featuring minimal manual intervention and open-ended heuristic spaces. 
To empower LHHs, we present <b>Reflective Evolution</b> (<span style="font-family:monospace">ReEvo</span>), a novel integration of evolutionary search for efficiently exploring the heuristic space, and LLM reflections to provide verbal gradients within the space.
Across five heterogeneous algorithmic types, six different COPs, and both white-box and black-box views of COPs, <span style="font-family:monospace">ReEvo</span> yields state-of-the-art and competitive meta-heuristics, evolutionary algorithms, heuristics, and neural solvers, while being more sample-efficient than prior LHHs.
"""
logo = { src = "static/images/reevo-logo.png", alt = "ReEvo Logo", width = "192px" }

[[paper.authors]]
name = "Haoran Ye"
symbols = "1"
link = "https://henry-yeh.github.io/"

[[paper.authors]]
name = "Jiarui Wang"
symbols = "2"
link = "https://github.com/Furffico"

[[paper.authors]]
name = "Zhiguang Cao"
symbols = "3"
link = "https://zhiguangcaosg.github.io/"

[[paper.authors]]
name = "Federico Berto"
symbols = "4"
link = "https://fedebotu.github.io/"

[[paper.authors]]
name = "Chuanbo Hua"
symbols = "4"
link = "https://cbhua.github.io/"

[[paper.authors]]
name = "Haeyeon Kim"
symbols = "4"
link = "https://sites.google.com/view/haeyeon-rachel-kim"

[[paper.authors]]
name = "Jinkyoo Park"
symbols = "4"
link = "https://pure.kaist.ac.kr/en/persons/jinkyoo-park"

[[paper.authors]]
name = "Guojie Song"
symbols = "1,5"
link = "https://www.cis.pku.edu.cn/info/1362/2256.htm"

[[paper.institutions]]
symbol = '1'
name = "National Key Laboratory of General Artificial Intelligence, School of Intelligence Science and Technology, Peking University"

[[paper.institutions]]
symbol = '2'
name = "Southeast University"

[[paper.institutions]]
symbol = '3'
name = "Singapore Management University"

[[paper.institutions]]
symbol = '4'
name = "KAIST"

[[paper.institutions]]
symbol = '5'
name = "PKU-Wuhan Institute for Artificial Intelligence"

[[paper.institutions]]
symbol = 'â€ '
name = "AI4CO"
link = "https://github.com/ai4co"

[[paper.notes]]
symbol = "â€ "
message = "Work made with contributions from the AI4CO open research community."

[links.pdf]
link = "https://arxiv.org/pdf/2402.01145"
icon = { class = "fas fa-file-pdf" }
caption = "Paper"

[links.arXiv]
link = "https://arxiv.org/abs/2402.01145"
icon = { class = "ai ai-arxiv" }

[links.github]
link = "https://github.com/ai4co/reevo"
icon = { class = "fab fa-github" }
caption = "Code"

[links.Slack]
link = "https://join.slack.com/t/rl4co/shared_invite/zt-1ytz2c1v4-0IkQ8NQH4TRXIX8PrRmDhQ"
icon = { class = "fab fa-slack" }

[teaser]
content = "Give ReEvo 5 minutes, and get a state-of-the-art algorithm in return!"

[[carousel]]
image = "static/images/reevo.png"
description = '<span style="font-family:monospace">ReEvo</span> pipeline.'

[[carousel]]
image = "static/images/show_reflec.png"
description = 'Examples of reflections for black-box TSP.'

[[code]]
language = "bash"
title = "Get Started"
copy_button = false
code = """
$ git clone git@github.com:ai4co/reevo.git # download reevo code
$ cd reevo
$ python3 -m venv ./venv            # [optional] create virtual environment
$ source ./venv/bin/activate        # [optional] activate virtual environment
$ pip install -r requirements.txt   # install dependencies
$ pip install numba==0.58           # dependency specifically required by `tsp_gls`
$ export OPENAI_API_KEY=xxxxxxxxxx  # set openAI API key, other service providers are also available
$ python3 main.py problem=tsp_gls

"""
description = '''
<h5>Available problems</h5>
<ul>
<li>Traveling Salesman Problem (TSP): <code>tsp_aco</code>, <code>tsp_aco_black_box</code>, <code>tsp_constructive</code>, <code>tsp_gls</code>, <code>tsp_pomo</code>, <code>tsp_lehd</code></li>
<li>Capacitated Vehicle Routing Problem (CVRP): <code>cvrp_aco</code>, <code>cvrp_aco_black_box</code>, <code>cvrp_pomo</code>, <code>cvrp_lehd</code></li>
<li>Bin Packing Problem (BPP): <code>bpp_offline_aco</code>, <code>bpp_offline_aco_black_box</code>, <code>bpp_online</code></li>
<li>Multiple Knapsack Problems (MKP): <code>mkp_aco</code>, <code>mkp_aco_black_box</code></li>
<li>Orienteering Problem (OP): <code>op_aco</code>, <code>op_aco_black_box</code></li>
<li>Decap Placement Problem (DPP): <code>dpp_ga</code></li>
</ul>
'''

[[code]]
language = "bash"
title = "Use Alternative LLMs"
code = """\
$ export LLAMA_API_KEY=xxxxxxxxxxxxxxxxxxxx
$ python3 main.py llm_client=llama_api llm_client.model=gemma2-9b

"""
description = '''<h5>Available LLM service providers</h5>
<ul>
<li><a href="https://openai.com/api/" rel="nofollow" target="_blank"><b>OpenAI</b></a>: gpt-3.5-turbo (default), gpt-4o, gpt-4o-mini, gpt-4-turbo, etc.</li>
<li><a href="https://open.bigmodel.cn/" rel="nofollow" target="_blank"><b>Zhipu AI</b></a>: GLM-3-Turbo, GLM-4-Air, GLM-4-0520, etc. (<a href="https://open.bigmodel.cn/dev/howuse/model" rel="nofollow" target="_blank">full list</a>)</li>
<li><a href="https://www.deepseek.com/" rel="nofollow" target="_blank"><b>DeepSeek</b></a>: deepseek-chat</li>
<li><a href="https://www.llama-api.com/" rel="nofollow" target="_blank"><b>Llama API</b></a>: llama3.1-8b/70b/405b, gemma2-9b/27b, Qwen2-72B, etc. (<a href="https://docs.llama-api.com/quickstart#available-models" rel="nofollow" target="_blank">full list</a>)</li>
<li>And <a href="https://docs.litellm.ai/docs/providers" rel="nofollow" target="_blank">more providers</a> supported via <a href="https://docs.litellm.ai/docs/" rel="nofollow" target="_blank"><b>LiteLLM</b></a>.</li>
</ul>
'''

[poster]
url="static/reevo-poster.pdf"

[citation]
biblatex = '''@inproceedings{ye2024reevo,
    title={ReEvo: Large Language Models as Hyper-Heuristics with Reflective Evolution}, 
    author={Haoran Ye and Jiarui Wang and Zhiguang Cao and Federico Berto and Chuanbo Hua and Haeyeon Kim and Jinkyoo Park and Guojie Song},
    booktitle={Advances in Neural Information Processing Systems},
    year={2024},
    note={\url{https://github.com/ai4co/reevo}}
}'''
copy_button = true

[news]
contents = [
    { date = "Sep. 2024", content = "<em>ReEvo: Large Language Models as Hyper-Heuristics with Reflective Evolution</em> has been accepted at NeurIPS 2024 ðŸ¥³" },
    { date = "May 2024", content = "We release a new paper version" },
    { date = "Apr. 2024", content = "Novel use cases for Neural Combinatorial Optimization (NCO) and Electronic Design Automation (EDA)" },
    { date = "Feb. 2024", content = "We are excited to release <em>ReEvo: Large Language Models as Hyper-Heuristics with Reflective Evolution</em> ðŸš€" },
]


[static_file.reevo_logo]
src = "../assets/reevo-logo.png"
dest = "static/images/reevo-logo.png"

[static_file.reevo_img]
src = "../assets/reevo.png"
dest = "static/images/reevo.png"

[static_file.show_reflec]
src = "../assets/show_reflec.png"
dest = "static/images/show_reflec.png"

[static_file.poster]
src = "../assets/reevo-poster.pdf"
dest = "static/reevo-poster.pdf"

# [static_file.nojekyll]
# content=""
# dest=".nojekyll"

[preview_mode]
enabled = false
dummy_file_path = "_modification_check"
